; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\short_wave\obj\bsp_date.o --asm_dir=.\short_wave\List\ --list_dir=.\short_wave\List\ --depend=.\short_wave\obj\bsp_date.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\adc -I..\..\User\rtc -I..\..\User\internal_flash -I..\..\User\iwdg -I..\..\Task -I..\..\User\can -I..\..\User\firmware_upgrade -I..\..\User\STMFLASH -I..\..\User\IAP -I.\RTE\_Short_Wave -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\short_wave\obj\bsp_date.crf ..\..\User\rtc\bsp_date.c]
                          THUMB

                          AREA ||i.GregorianDay||, CODE, READONLY, ALIGN=2

                  GregorianDay PROC
;;;32     /*计算公历*/
;;;33     void GregorianDay(struct rtc_time * tm)
000000  b5f0              PUSH     {r4-r7,lr}
;;;34     {
000002  b08d              SUB      sp,sp,#0x34
000004  4604              MOV      r4,r0
;;;35         int leapsToDate;
;;;36         int lastYear;
;;;37         int day;
;;;38         int MonthOffset[] = { 0,31,59,90,120,151,181,212,243,273,304,334 };
000006  2230              MOVS     r2,#0x30
000008  4922              LDR      r1,|L1.148|
00000a  a801              ADD      r0,sp,#4
00000c  f7fffffe          BL       __aeabi_memcpy4
;;;39     
;;;40         lastYear=tm->tm_year-1;
000010  6960              LDR      r0,[r4,#0x14]
000012  1e45              SUBS     r5,r0,#1
;;;41     
;;;42         /*计算从公元元年到计数的前一年之中一共经历了多少个闰年*/
;;;43         leapsToDate = lastYear/4 - lastYear/100 + lastYear/400;
000014  2164              MOVS     r1,#0x64
000016  fb95f1f1          SDIV     r1,r5,r1
00001a  4628              MOV      r0,r5
00001c  17ea              ASRS     r2,r5,#31
00001e  eb057292          ADD      r2,r5,r2,LSR #30
000022  ebc101a2          RSB      r1,r1,r2,ASR #2
000026  f44f72c8          MOV      r2,#0x190
00002a  fb95f2f2          SDIV     r2,r5,r2
00002e  188f              ADDS     r7,r1,r2
;;;44     
;;;45         /*如若计数的这一年为闰年，且计数的月份在2月之后，则日数加1，否则不加1*/
;;;46         if((tm->tm_year%4==0) &&
000030  6960              LDR      r0,[r4,#0x14]
000032  17c1              ASRS     r1,r0,#31
000034  eb007191          ADD      r1,r0,r1,LSR #30
000038  1089              ASRS     r1,r1,#2
00003a  eba00181          SUB      r1,r0,r1,LSL #2
00003e  b991              CBNZ     r1,|L1.102|
;;;47                 ((tm->tm_year%100!=0) || (tm->tm_year%400==0)) &&
000040  2264              MOVS     r2,#0x64
000042  6961              LDR      r1,[r4,#0x14]
000044  fb91f3f2          SDIV     r3,r1,r2
000048  fb021113          MLS      r1,r2,r3,r1
00004c  b931              CBNZ     r1,|L1.92|
00004e  0092              LSLS     r2,r2,#2
000050  6961              LDR      r1,[r4,#0x14]
000052  fb91f3f2          SDIV     r3,r1,r2
000056  fb021113          MLS      r1,r2,r3,r1
00005a  b921              CBNZ     r1,|L1.102|
                  |L1.92|
;;;48                 (tm->tm_mon>2))
00005c  6921              LDR      r1,[r4,#0x10]
00005e  2902              CMP      r1,#2
000060  dd01              BLE      |L1.102|
;;;49         {
;;;50             /*
;;;51              * We are past Feb. 29 in a leap year
;;;52              */
;;;53             day=1;
000062  2601              MOVS     r6,#1
000064  e000              B        |L1.104|
                  |L1.102|
;;;54         }
;;;55         else
;;;56         {
;;;57             day=0;
000066  2600              MOVS     r6,#0
                  |L1.104|
;;;58         }
;;;59     
;;;60         day += lastYear*365 + leapsToDate + MonthOffset[tm->tm_mon-1] + tm->tm_mday; /*计算从公元元年元旦到计数日期一共有多少天*/
000068  f240106d          MOV      r0,#0x16d
00006c  fb057100          MLA      r1,r5,r0,r7
000070  6920              LDR      r0,[r4,#0x10]
000072  1e40              SUBS     r0,r0,#1
000074  aa01              ADD      r2,sp,#4
000076  f8520020          LDR      r0,[r2,r0,LSL #2]
00007a  4408              ADD      r0,r0,r1
00007c  68e1              LDR      r1,[r4,#0xc]
00007e  4408              ADD      r0,r0,r1
000080  4406              ADD      r6,r6,r0
;;;61     
;;;62         tm->tm_wday=day%7;
000082  2007              MOVS     r0,#7
000084  fb96f1f0          SDIV     r1,r6,r0
000088  fb006011          MLS      r0,r0,r1,r6
00008c  61a0              STR      r0,[r4,#0x18]
;;;63     }
00008e  b00d              ADD      sp,sp,#0x34
000090  bdf0              POP      {r4-r7,pc}
;;;64     
                          ENDP

000092  0000              DCW      0x0000
                  |L1.148|
                          DCD      ||.constdata||

                          AREA ||i.mktimev||, CODE, READONLY, ALIGN=2

                  mktimev PROC
;;;80      */
;;;81     u32 mktimev(struct rtc_time *tm)
000000  b510              PUSH     {r4,lr}
;;;82     {
000002  4601              MOV      r1,r0
;;;83         if (0 >= (int) (tm->tm_mon -= 2))  	/* 1..12 -> 11,12,1..10 */
000004  6908              LDR      r0,[r1,#0x10]
000006  1e80              SUBS     r0,r0,#2
000008  6108              STR      r0,[r1,#0x10]
00000a  2800              CMP      r0,#0
00000c  dc05              BGT      |L2.26|
;;;84         {
;;;85             tm->tm_mon += 12;		/* Puts Feb last since it has leap day */
00000e  6908              LDR      r0,[r1,#0x10]
000010  300c              ADDS     r0,r0,#0xc
000012  6108              STR      r0,[r1,#0x10]
;;;86             tm->tm_year -= 1;
000014  6948              LDR      r0,[r1,#0x14]
000016  1e40              SUBS     r0,r0,#1
000018  6148              STR      r0,[r1,#0x14]
                  |L2.26|
;;;87         }
;;;88     
;;;89         return (((
00001a  2364              MOVS     r3,#0x64
00001c  6948              LDR      r0,[r1,#0x14]
00001e  fb90f0f3          SDIV     r0,r0,r3
000022  694a              LDR      r2,[r1,#0x14]
000024  17d3              ASRS     r3,r2,#31
000026  eb027393          ADD      r3,r2,r3,LSR #30
00002a  ebc000a3          RSB      r0,r0,r3,ASR #2
00002e  f44f74c8          MOV      r4,#0x190
000032  fb92f3f4          SDIV     r3,r2,r4
000036  4403              ADD      r3,r3,r0
000038  f240146f          MOV      r4,#0x16f
00003c  6908              LDR      r0,[r1,#0x10]
00003e  4360              MULS     r0,r4,r0
000040  240c              MOVS     r4,#0xc
000042  fb90f0f4          SDIV     r0,r0,r4
000046  4418              ADD      r0,r0,r3
000048  68cb              LDR      r3,[r1,#0xc]
00004a  4403              ADD      r3,r3,r0
00004c  f240146d          MOV      r4,#0x16d
000050  fb023004          MLA      r0,r2,r4,r3
000054  4b08              LDR      r3,|L2.120|
000056  1ac0              SUBS     r0,r0,r3
000058  eb000040          ADD      r0,r0,r0,LSL #1
00005c  688b              LDR      r3,[r1,#8]
00005e  eb0300c0          ADD      r0,r3,r0,LSL #3
000062  ebc01000          RSB      r0,r0,r0,LSL #4
000066  684b              LDR      r3,[r1,#4]
000068  eb030080          ADD      r0,r3,r0,LSL #2
00006c  ebc01000          RSB      r0,r0,r0,LSL #4
000070  680b              LDR      r3,[r1,#0]
000072  eb030080          ADD      r0,r3,r0,LSL #2
;;;90                      (u32) (tm->tm_year/4 - tm->tm_year/100 + tm->tm_year/400 + 367*tm->tm_mon/12 + tm->tm_mday) +
;;;91                      tm->tm_year*365 - 719499
;;;92                  )*24 + tm->tm_hour /* now have hours */
;;;93                 )*60 + tm->tm_min /* now have minutes */
;;;94                )*60 + tm->tm_sec; /* finally seconds */
;;;95     }
000076  bd10              POP      {r4,pc}
;;;96     
                          ENDP

                  |L2.120|
                          DCD      0x000afa8b

                          AREA ||i.to_tm||, CODE, READONLY, ALIGN=2

                  to_tm PROC
;;;98     
;;;99     void to_tm(u32 tim, struct rtc_time * tm)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;100    {
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
;;;101        register u32    i;
;;;102        register long   hms, day;
;;;103    
;;;104        day = tim / SECDAY;			/* 有多少天 */
000008  482e              LDR      r0,|L3.196|
00000a  fbb7f6f0          UDIV     r6,r7,r0
;;;105        hms = tim % SECDAY;			/* 今天的时间，单位s */
00000e  fbb7f1f0          UDIV     r1,r7,r0
000012  fb007811          MLS      r8,r0,r1,r7
;;;106    
;;;107        /* Hours, minutes, seconds are easy */
;;;108        tm->tm_hour = hms / 3600;
000016  f44f6061          MOV      r0,#0xe10
00001a  fb98f0f0          SDIV     r0,r8,r0
00001e  60a0              STR      r0,[r4,#8]
;;;109        tm->tm_min = (hms % 3600) / 60;
000020  f44f6061          MOV      r0,#0xe10
000024  fb98f1f0          SDIV     r1,r8,r0
000028  fb008011          MLS      r0,r0,r1,r8
00002c  213c              MOVS     r1,#0x3c
00002e  fb90f0f1          SDIV     r0,r0,r1
000032  6060              STR      r0,[r4,#4]
;;;110        tm->tm_sec = (hms % 3600) % 60;
000034  f44f6061          MOV      r0,#0xe10
000038  fb98f1f0          SDIV     r1,r8,r0
00003c  fb008011          MLS      r0,r0,r1,r8
000040  213c              MOVS     r1,#0x3c
000042  fb90f2f1          SDIV     r2,r0,r1
000046  fb010012          MLS      r0,r1,r2,r0
00004a  6020              STR      r0,[r4,#0]
;;;111    
;;;112        /* Number of years in days */ /*算出当前年份，起始的计数年份为1970年*/
;;;113        for (i = STARTOFTIME; day >= days_in_year(i); i++)
00004c  f24075b2          MOV      r5,#0x7b2
000050  e009              B        |L3.102|
                  |L3.82|
;;;114        {
;;;115            day -= days_in_year(i);
000052  f0050003          AND      r0,r5,#3
000056  b910              CBNZ     r0,|L3.94|
000058  f44f70b7          MOV      r0,#0x16e
00005c  e001              B        |L3.98|
                  |L3.94|
00005e  f240106d          MOV      r0,#0x16d
                  |L3.98|
000062  1a36              SUBS     r6,r6,r0
000064  1c6d              ADDS     r5,r5,#1              ;113
                  |L3.102|
000066  f0050003          AND      r0,r5,#3              ;113
00006a  b910              CBNZ     r0,|L3.114|
00006c  f44f70b7          MOV      r0,#0x16e             ;113
000070  e001              B        |L3.118|
                  |L3.114|
000072  f240106d          MOV      r0,#0x16d             ;113
                  |L3.118|
000076  42b0              CMP      r0,r6                 ;113
000078  ddeb              BLE      |L3.82|
;;;116        }
;;;117        tm->tm_year = i;
00007a  6165              STR      r5,[r4,#0x14]
;;;118    
;;;119        /* Number of months in days left */ /*计算当前的月份*/
;;;120        if (leapyear(tm->tm_year))
00007c  6960              LDR      r0,[r4,#0x14]
00007e  17c1              ASRS     r1,r0,#31
000080  eb007191          ADD      r1,r0,r1,LSR #30
000084  1089              ASRS     r1,r1,#2
000086  eba00181          SUB      r1,r0,r1,LSL #2
00008a  b911              CBNZ     r1,|L3.146|
;;;121        {
;;;122            days_in_month(FEBRUARY) = 29;
00008c  201d              MOVS     r0,#0x1d
00008e  490e              LDR      r1,|L3.200|
000090  6048              STR      r0,[r1,#4]  ; month_days
                  |L3.146|
;;;123        }
;;;124        for (i = 1; day >= days_in_month(i); i++)
000092  2501              MOVS     r5,#1
000094  e005              B        |L3.162|
                  |L3.150|
;;;125        {
;;;126            day -= days_in_month(i);
000096  1e68              SUBS     r0,r5,#1
000098  490b              LDR      r1,|L3.200|
00009a  f8510020          LDR      r0,[r1,r0,LSL #2]
00009e  1a36              SUBS     r6,r6,r0
0000a0  1c6d              ADDS     r5,r5,#1              ;124
                  |L3.162|
0000a2  1e68              SUBS     r0,r5,#1              ;124
0000a4  4908              LDR      r1,|L3.200|
0000a6  f8510020          LDR      r0,[r1,r0,LSL #2]     ;124
0000aa  42b0              CMP      r0,r6                 ;124
0000ac  ddf3              BLE      |L3.150|
;;;127        }
;;;128        days_in_month(FEBRUARY) = 28;
0000ae  201c              MOVS     r0,#0x1c
0000b0  6048              STR      r0,[r1,#4]  ; month_days
;;;129        tm->tm_mon = i;
0000b2  6125              STR      r5,[r4,#0x10]
;;;130    
;;;131        /* Days are what is left over (+1) from all that. *//*计算当前日期*/
;;;132        tm->tm_mday = day + 1;
0000b4  1c70              ADDS     r0,r6,#1
0000b6  60e0              STR      r0,[r4,#0xc]
;;;133    
;;;134        /*
;;;135         * Determine the day of week
;;;136         */
;;;137        GregorianDay(tm);
0000b8  4620              MOV      r0,r4
0000ba  f7fffffe          BL       GregorianDay
;;;138    
;;;139    }
0000be  e8bd81f0          POP      {r4-r8,pc}
;;;140    
                          ENDP

0000c2  0000              DCW      0x0000
                  |L3.196|
                          DCD      0x00015180
                  |L3.200|
                          DCD      month_days

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                          DCD      0x00000000
                          DCD      0x0000001f
                          DCD      0x0000003b
                          DCD      0x0000005a
                          DCD      0x00000078
                          DCD      0x00000097
                          DCD      0x000000b5
                          DCD      0x000000d4
                          DCD      0x000000f3
                          DCD      0x00000111
                          DCD      0x00000130
                          DCD      0x0000014e

                          AREA ||.data||, DATA, ALIGN=2

                  month_days
                          DCD      0x0000001f
                          DCD      0x0000001c
                          DCD      0x0000001f
                          DCD      0x0000001e
                          DCD      0x0000001f
                          DCD      0x0000001e
                          DCD      0x0000001f
                          DCD      0x0000001f
                          DCD      0x0000001e
                          DCD      0x0000001f
                          DCD      0x0000001e
                          DCD      0x0000001f

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\rtc\\bsp_date.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_date_c_966c1553____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_bsp_date_c_966c1553____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_date_c_966c1553____REVSH|
#line 128
|__asm___10_bsp_date_c_966c1553____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
