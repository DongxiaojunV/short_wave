; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\short_wave\obj\data_pars.o --asm_dir=.\short_wave\List\ --list_dir=.\short_wave\List\ --depend=.\short_wave\obj\data_pars.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\adc -I..\..\User\rtc -I..\..\User\internal_flash -I..\..\User\iwdg -ID:\Keil5\Keil_v5\ARM\RV31\INC -ID:\Keil5\Keil_v5\ARM\CMSIS\Include -ID:\Keil5\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=515 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\short_wave\obj\data_pars.crf ..\..\User\bsp\Data_pars.c]
                          THUMB

                          AREA ||i.Accpet_CAN_data||, CODE, READONLY, ALIGN=2

                  Accpet_CAN_data PROC
;;;17     /* 去帧头，校验并且返回数据 */
;;;18     static CAN_data_t Accpet_CAN_data(pc_data_t *PC_data)//这个是用在发射机那个主控的解析函数
000000  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
;;;19     {
000004  b0eb              SUB      sp,sp,#0x1ac
000006  460c              MOV      r4,r1
;;;20         CAN_data_t CAN_data;
;;;21         int a = 0;
000008  f04f0b00          MOV      r11,#0
;;;22         int i;
;;;23         unsigned char buff_len[1];
;;;24         unsigned char buff_CRC[2];
;;;25         unsigned int CRC_Back;
;;;26         int AcceptData_Len,AcceptData_CRC;
;;;27         int n = 0;
00000c  46d9              MOV      r9,r11
;;;28         unsigned char Test_Data[150];
;;;29         volatile unsigned int j = 0;
00000e  2000              MOVS     r0,#0
000010  9000              STR      r0,[sp,#0]
;;;30     
;;;31         while((PC_data->uart_pc[j++] != 0x05) && (PC_data->uart_pc[j] != 0x02))
000012  bf00              NOP      
                  |L1.20|
000014  9800              LDR      r0,[sp,#0]
000016  1c41              ADDS     r1,r0,#1
000018  9100              STR      r1,[sp,#0]
00001a  5c21              LDRB     r1,[r4,r0]
00001c  2905              CMP      r1,#5
00001e  d003              BEQ      |L1.40|
000020  9900              LDR      r1,[sp,#0]
000022  5c61              LDRB     r1,[r4,r1]
000024  2902              CMP      r1,#2
000026  d1f5              BNE      |L1.20|
                  |L1.40|
;;;32             ;
;;;33         if(j>250)
000028  9800              LDR      r0,[sp,#0]
00002a  28fa              CMP      r0,#0xfa
00002c  d901              BLS      |L1.50|
;;;34         {
;;;35             j = 0;
00002e  2000              MOVS     r0,#0
000030  9000              STR      r0,[sp,#0]
                  |L1.50|
;;;36         }
;;;37         App_printf("j = %d\r\n",j);
000032  a05a              ADR      r0,|L1.412|
000034  9900              LDR      r1,[sp,#0]
000036  f7fffffe          BL       App_printf
;;;38         buff_len[0] = PC_data->uart_pc[j+2];
00003a  9800              LDR      r0,[sp,#0]
00003c  1c80              ADDS     r0,r0,#2
00003e  5c20              LDRB     r0,[r4,r0]
000040  9028              STR      r0,[sp,#0xa0]
;;;39         App_printf("buff_len[0] = %x\r\n",buff_len[0]);
000042  f89d10a0          LDRB     r1,[sp,#0xa0]
000046  a058              ADR      r0,|L1.424|
000048  f7fffffe          BL       App_printf
;;;40         AcceptData_Len = (buff_len[0]);
00004c  f89d50a0          LDRB     r5,[sp,#0xa0]
;;;41         buff_CRC[0] = PC_data->uart_pc[AcceptData_Len+3+j];
000050  1ce8              ADDS     r0,r5,#3
000052  9900              LDR      r1,[sp,#0]
000054  4408              ADD      r0,r0,r1
000056  5c20              LDRB     r0,[r4,r0]
000058  f88d009c          STRB     r0,[sp,#0x9c]
;;;42         buff_CRC[1] = PC_data->uart_pc[AcceptData_Len+4+j];
00005c  1d28              ADDS     r0,r5,#4
00005e  9900              LDR      r1,[sp,#0]
000060  4408              ADD      r0,r0,r1
000062  5c20              LDRB     r0,[r4,r0]
000064  f88d009d          STRB     r0,[sp,#0x9d]
;;;43         App_printf("buff_CRC[0]= %x\r\n",buff_CRC[0]);
000068  f89d109c          LDRB     r1,[sp,#0x9c]
00006c  a053              ADR      r0,|L1.444|
00006e  f7fffffe          BL       App_printf
;;;44         App_printf("buff_CRC[1]= %x\r\n",buff_CRC[1]);
000072  f89d109d          LDRB     r1,[sp,#0x9d]
000076  a056              ADR      r0,|L1.464|
000078  f7fffffe          BL       App_printf
;;;45         AcceptData_CRC = ((buff_CRC[0]<<8) +(buff_CRC[1]));
00007c  f89d009d          LDRB     r0,[sp,#0x9d]
000080  f89d109c          LDRB     r1,[sp,#0x9c]
000084  eb002801          ADD      r8,r0,r1,LSL #8
;;;46         App_printf("AcceptData_CRC = %x\r\n",AcceptData_CRC);
000088  4641              MOV      r1,r8
00008a  a056              ADR      r0,|L1.484|
00008c  f7fffffe          BL       App_printf
;;;47         for(n = j+3; n < AcceptData_Len+3+j; n++)
000090  9800              LDR      r0,[sp,#0]
000092  f1000903          ADD      r9,r0,#3
000096  e008              B        |L1.170|
                  |L1.152|
;;;48         {
;;;49             Test_Data[a] = PC_data->uart_pc[n];
000098  f8140009          LDRB     r0,[r4,r9]
00009c  a901              ADD      r1,sp,#4
00009e  f801000b          STRB     r0,[r1,r11]
;;;50             a++;
0000a2  f10b0b01          ADD      r11,r11,#1
0000a6  f1090901          ADD      r9,r9,#1              ;47
                  |L1.170|
0000aa  1ce8              ADDS     r0,r5,#3              ;47
0000ac  9900              LDR      r1,[sp,#0]            ;47
0000ae  4408              ADD      r0,r0,r1              ;47
0000b0  4548              CMP      r0,r9                 ;47
0000b2  d8f1              BHI      |L1.152|
;;;51         }
;;;52         a = 0;
0000b4  f04f0b00          MOV      r11,#0
;;;53         App_printf("Test_Data = ");
0000b8  a050              ADR      r0,|L1.508|
0000ba  f7fffffe          BL       App_printf
;;;54         for(i = 0; i<AcceptData_Len ; i++ )
0000be  2600              MOVS     r6,#0
0000c0  e005              B        |L1.206|
                  |L1.194|
;;;55         {
;;;56             App_printf("%02x ",Test_Data[i]);
0000c2  a801              ADD      r0,sp,#4
0000c4  5d81              LDRB     r1,[r0,r6]
0000c6  a051              ADR      r0,|L1.524|
0000c8  f7fffffe          BL       App_printf
0000cc  1c76              ADDS     r6,r6,#1              ;54
                  |L1.206|
0000ce  42ae              CMP      r6,r5                 ;54
0000d0  dbf7              BLT      |L1.194|
;;;57         }
;;;58         App_printf("\r\n");
0000d2  a039              ADR      r0,|L1.440|
0000d4  f7fffffe          BL       App_printf
;;;59         CRC_Back = CRC16_XMODEM(Test_Data, AcceptData_Len);
0000d8  4629              MOV      r1,r5
0000da  a801              ADD      r0,sp,#4
0000dc  f7fffffe          BL       CRC16_XMODEM
0000e0  4607              MOV      r7,r0
;;;60         App_printf("CRC_Back = %x\r\n",CRC_Back);
0000e2  4639              MOV      r1,r7
0000e4  a04b              ADR      r0,|L1.532|
0000e6  f7fffffe          BL       App_printf
;;;61     
;;;62         if(CRC_Back == AcceptData_CRC)
0000ea  4547              CMP      r7,r8
0000ec  d147              BNE      |L1.382|
;;;63         {
;;;64             CAN_data.eff_sign = 1;
0000ee  2001              MOVS     r0,#1
0000f0  f88d00a4          STRB     r0,[sp,#0xa4]
;;;65             CAN_data.CAN_ID_buf = PC_data->uart_pc[j+1];
0000f4  9800              LDR      r0,[sp,#0]
0000f6  1c40              ADDS     r0,r0,#1
0000f8  5c20              LDRB     r0,[r4,r0]
0000fa  f88d00a5          STRB     r0,[sp,#0xa5]
;;;66             CAN_data.Func_code_buf[0] = PC_data->uart_pc[j+3];
0000fe  9800              LDR      r0,[sp,#0]
000100  1cc0              ADDS     r0,r0,#3
000102  5c20              LDRB     r0,[r4,r0]
000104  f88d00a6          STRB     r0,[sp,#0xa6]
;;;67             CAN_data.Func_code_buf[1] = PC_data->uart_pc[j+4];
000108  9800              LDR      r0,[sp,#0]
00010a  1d00              ADDS     r0,r0,#4
00010c  5c21              LDRB     r1,[r4,r0]
00010e  a829              ADD      r0,sp,#0xa4
000110  70c1              STRB     r1,[r0,#3]
;;;68     
;;;69             memcpy(CAN_data.p_Spe_data.Spe_data,PC_data->uart_pc+j+6,AcceptData_Len-3);
000112  1eea              SUBS     r2,r5,#3
000114  9800              LDR      r0,[sp,#0]
000116  4420              ADD      r0,r0,r4
000118  1d81              ADDS     r1,r0,#6
00011a  a82a              ADD      r0,sp,#0xa8
00011c  f7fffffe          BL       __aeabi_memcpy
;;;70     
;;;71             CAN_data.p_Spe_data.Spe_len = AcceptData_Len-3;
000120  1ee8              SUBS     r0,r5,#3
000122  b2c1              UXTB     r1,r0
000124  f88d11a8          STRB     r1,[sp,#0x1a8]
;;;72     
;;;73             App_printf("CAN_ID = %X\r\n",CAN_data.CAN_ID_buf);
000128  f89d10a5          LDRB     r1,[sp,#0xa5]
00012c  a03d              ADR      r0,|L1.548|
00012e  f7fffffe          BL       App_printf
;;;74             for(int i = 0; i<2; i++)
000132  f04f0a00          MOV      r10,#0
000136  e008              B        |L1.330|
                  |L1.312|
;;;75             {
;;;76                 App_printf("Func_code_buf = %02X\r\n",CAN_data.Func_code_buf[i]);
000138  f10d00a6          ADD      r0,sp,#0xa6
00013c  f810100a          LDRB     r1,[r0,r10]
000140  a03c              ADR      r0,|L1.564|
000142  f7fffffe          BL       App_printf
000146  f10a0a01          ADD      r10,r10,#1            ;74
                  |L1.330|
00014a  f1ba0f02          CMP      r10,#2                ;74
00014e  dbf3              BLT      |L1.312|
;;;77             }
;;;78             for(int i = 0; i<AcceptData_Len-3; i++)
000150  f04f0a00          MOV      r10,#0
000154  e007              B        |L1.358|
                  |L1.342|
;;;79             {
;;;80                 App_printf("%02X ",CAN_data.p_Spe_data.Spe_data[i]);
000156  a82a              ADD      r0,sp,#0xa8
000158  f810100a          LDRB     r1,[r0,r10]
00015c  a03b              ADR      r0,|L1.588|
00015e  f7fffffe          BL       App_printf
000162  f10a0a01          ADD      r10,r10,#1            ;78
                  |L1.358|
000166  1ee8              SUBS     r0,r5,#3              ;78
000168  4550              CMP      r0,r10                ;78
00016a  dcf4              BGT      |L1.342|
;;;81             }
;;;82             App_printf("\r\n");
00016c  a012              ADR      r0,|L1.440|
00016e  f7fffffe          BL       App_printf
;;;83             App_printf("CAN_data->p_Spe_data->Spe_len = %02X",CAN_data.p_Spe_data.Spe_len);
000172  f89d11a8          LDRB     r1,[sp,#0x1a8]
000176  a037              ADR      r0,|L1.596|
000178  f7fffffe          BL       App_printf
00017c  e005              B        |L1.394|
                  |L1.382|
;;;84         }
;;;85         else
;;;86         {
;;;87             CAN_data.eff_sign = 0;//标志结构体里面是数据无效
00017e  2000              MOVS     r0,#0
000180  f88d00a4          STRB     r0,[sp,#0xa4]
;;;88             App_printf("CRC错误\r\n");
000184  a03d              ADR      r0,|L1.636|
000186  f7fffffe          BL       App_printf
                  |L1.394|
;;;89         }
;;;90         return CAN_data;
00018a  f2401205          MOV      r2,#0x105
00018e  a929              ADD      r1,sp,#0xa4
000190  986b              LDR      r0,[sp,#0x1ac]
000192  f7fffffe          BL       __aeabi_memcpy
;;;91     }
000196  b06d              ADD      sp,sp,#0x1b4
000198  e8bd8ff0          POP      {r4-r11,pc}
;;;92     /************************************************************
                          ENDP

                  |L1.412|
00019c  6a203d20          DCB      "j = %d\r\n",0
0001a0  25640d0a
0001a4  00      
0001a5  00                DCB      0
0001a6  00                DCB      0
0001a7  00                DCB      0
                  |L1.424|
0001a8  62756666          DCB      "buff_len[0] = %x"
0001ac  5f6c656e
0001b0  5b305d20
0001b4  3d202578
                  |L1.440|
0001b8  0d0a00            DCB      "\r\n",0
0001bb  00                DCB      0
                  |L1.444|
0001bc  62756666          DCB      "buff_CRC[0]= %x\r\n",0
0001c0  5f435243
0001c4  5b305d3d
0001c8  2025780d
0001cc  0a00    
0001ce  00                DCB      0
0001cf  00                DCB      0
                  |L1.464|
0001d0  62756666          DCB      "buff_CRC[1]= %x\r\n",0
0001d4  5f435243
0001d8  5b315d3d
0001dc  2025780d
0001e0  0a00    
0001e2  00                DCB      0
0001e3  00                DCB      0
                  |L1.484|
0001e4  41636365          DCB      "AcceptData_CRC = %x\r\n",0
0001e8  70744461
0001ec  74615f43
0001f0  5243203d
0001f4  2025780d
0001f8  0a00    
0001fa  00                DCB      0
0001fb  00                DCB      0
                  |L1.508|
0001fc  54657374          DCB      "Test_Data = ",0
000200  5f446174
000204  61203d20
000208  00      
000209  00                DCB      0
00020a  00                DCB      0
00020b  00                DCB      0
                  |L1.524|
00020c  25303278          DCB      "%02x ",0
000210  2000    
000212  00                DCB      0
000213  00                DCB      0
                  |L1.532|
000214  4352435f          DCB      "CRC_Back = %x\r\n",0
000218  4261636b
00021c  203d2025
000220  780d0a00
                  |L1.548|
000224  43414e5f          DCB      "CAN_ID = %X\r\n",0
000228  4944203d
00022c  2025580d
000230  0a00    
000232  00                DCB      0
000233  00                DCB      0
                  |L1.564|
000234  46756e63          DCB      "Func_code_buf = %02X\r\n",0
000238  5f636f64
00023c  655f6275
000240  66203d20
000244  25303258
000248  0d0a00  
00024b  00                DCB      0
                  |L1.588|
00024c  25303258          DCB      "%02X ",0
000250  2000    
000252  00                DCB      0
000253  00                DCB      0
                  |L1.596|
000254  43414e5f          DCB      "CAN_data->p_Spe_data->Spe_len = %02X",0
000258  64617461
00025c  2d3e705f
000260  5370655f
000264  64617461
000268  2d3e5370
00026c  655f6c65
000270  6e203d20
000274  25303258
000278  00      
000279  00                DCB      0
00027a  00                DCB      0
00027b  00                DCB      0
                  |L1.636|
00027c  435243b4          DCB      "CRC",180,237,206,243,"\r\n",0
000280  edcef30d
000284  0a00    
000286  00                DCB      0
000287  00                DCB      0

                          AREA ||i.Ata_||, CODE, READONLY, ALIGN=2

                  Ata_ PROC
;;;868    ***************************************/
;;;869    void Ata_(pc_data_t *pc_data)
000000  b510              PUSH     {r4,lr}
;;;870    {
000002  b0c4              SUB      sp,sp,#0x110
000004  4604              MOV      r4,r0
;;;871        Assemble_buffer_t COM_buffer;
;;;872        if(pc_data->uart_pc[0] == 0x02 && pc_data->uart_pc[1] == 0x01)   //表示发查询包
000006  7820              LDRB     r0,[r4,#0]
000008  2802              CMP      r0,#2
00000a  d11d              BNE      |L2.72|
00000c  7860              LDRB     r0,[r4,#1]
00000e  2801              CMP      r0,#1
000010  d11a              BNE      |L2.72|
;;;873        {
;;;874            uint8_t func_code[2] = {0x02,0x01};
000012  a051              ADR      r0,|L2.344|
000014  6800              LDR      r0,[r0,#0]
000016  9002              STR      r0,[sp,#8]
;;;875            Working_paramet.Transmitte_id[0]= pc_data->uart_pc[2];
000018  78a0              LDRB     r0,[r4,#2]
00001a  4950              LDR      r1,|L2.348|
00001c  7008              STRB     r0,[r1,#0]
;;;876            CAN_ID = pc_data->uart_pc[2];
00001e  78a0              LDRB     r0,[r4,#2]
000020  494f              LDR      r1,|L2.352|
000022  7008              STRB     r0,[r1,#0]
;;;877            if(Data_Assemble(func_code,(uint8_t *)&Working_paramet,CAN_ID,sizeof(Working_paramet),&COM_buffer) ==1)
000024  a803              ADD      r0,sp,#0xc
000026  2303              MOVS     r3,#3
000028  9000              STR      r0,[sp,#0]
00002a  4608              MOV      r0,r1
00002c  7802              LDRB     r2,[r0,#0]  ; CAN_ID
00002e  494b              LDR      r1,|L2.348|
000030  a802              ADD      r0,sp,#8
000032  f7fffffe          BL       Data_Assemble
000036  2801              CMP      r0,#1
000038  d105              BNE      |L2.70|
;;;878            {
;;;879                comSendBuf(COM1,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
00003a  f89d210c          LDRB     r2,[sp,#0x10c]
00003e  a903              ADD      r1,sp,#0xc
000040  2000              MOVS     r0,#0
000042  f7fffffe          BL       comSendBuf
                  |L2.70|
;;;880            }
;;;881        }
000046  bf00              NOP      
                  |L2.72|
;;;882        if(pc_data->uart_pc[0] == 0x03 && pc_data->uart_pc[1] == 0x01)   //表示发发射包
000048  7820              LDRB     r0,[r4,#0]
00004a  2803              CMP      r0,#3
00004c  d139              BNE      |L2.194|
00004e  7860              LDRB     r0,[r4,#1]
000050  2801              CMP      r0,#1
000052  d136              BNE      |L2.194|
;;;883        {
;;;884            uint8_t func_code[2] = {0x03,0x01};
000054  a043              ADR      r0,|L2.356|
000056  6800              LDR      r0,[r0,#0]
000058  9002              STR      r0,[sp,#8]
;;;885            Trans_open.Transmitte_id[0]= pc_data->uart_pc[2];
00005a  78a0              LDRB     r0,[r4,#2]
00005c  4942              LDR      r1,|L2.360|
00005e  7008              STRB     r0,[r1,#0]
;;;886            CAN_ID = pc_data->uart_pc[2];
000060  78a0              LDRB     r0,[r4,#2]
000062  493f              LDR      r1,|L2.352|
000064  7008              STRB     r0,[r1,#0]
;;;887            Trans_open.Type[0] = pc_data->uart_pc[3];
000066  78e0              LDRB     r0,[r4,#3]
000068  493f              LDR      r1,|L2.360|
00006a  7048              STRB     r0,[r1,#1]
;;;888            Trans_open.Channel[0] = pc_data->uart_pc[4];
00006c  7920              LDRB     r0,[r4,#4]
00006e  7088              STRB     r0,[r1,#2]
;;;889            Trans_open.Channel[1] = pc_data->uart_pc[5];
000070  7961              LDRB     r1,[r4,#5]
000072  483d              LDR      r0,|L2.360|
000074  70c1              STRB     r1,[r0,#3]
;;;890            Trans_open.Channel[2] = pc_data->uart_pc[6];
000076  79a1              LDRB     r1,[r4,#6]
000078  7101              STRB     r1,[r0,#4]
;;;891            for(int  i = 0; i < 12; i++)
00007a  2000              MOVS     r0,#0
00007c  e005              B        |L2.138|
                  |L2.126|
;;;892            {
;;;893                Trans_open.Freq[i] = pc_data->uart_pc[7+i];
00007e  1dc1              ADDS     r1,r0,#7
000080  5c62              LDRB     r2,[r4,r1]
000082  4939              LDR      r1,|L2.360|
000084  1d49              ADDS     r1,r1,#5
000086  540a              STRB     r2,[r1,r0]
000088  1c40              ADDS     r0,r0,#1              ;891
                  |L2.138|
00008a  280c              CMP      r0,#0xc               ;891
00008c  dbf7              BLT      |L2.126|
;;;894            }
;;;895            Trans_open.Power_grade[0] = pc_data->uart_pc[20];
00008e  7d20              LDRB     r0,[r4,#0x14]
000090  4935              LDR      r1,|L2.360|
000092  7448              STRB     r0,[r1,#0x11]
;;;896            Trans_open.Power_grade[1] = pc_data->uart_pc[21];
000094  7d61              LDRB     r1,[r4,#0x15]
000096  4834              LDR      r0,|L2.360|
000098  7481              STRB     r1,[r0,#0x12]
;;;897            Trans_open.Power_grade[2] = pc_data->uart_pc[22];
00009a  7da1              LDRB     r1,[r4,#0x16]
00009c  74c1              STRB     r1,[r0,#0x13]
;;;898            if(Data_Assemble(func_code,(uint8_t *)&Trans_open,CAN_ID,sizeof(Trans_open),&COM_buffer) ==1)
00009e  a803              ADD      r0,sp,#0xc
0000a0  231a              MOVS     r3,#0x1a
0000a2  9000              STR      r0,[sp,#0]
0000a4  482e              LDR      r0,|L2.352|
0000a6  7802              LDRB     r2,[r0,#0]  ; CAN_ID
0000a8  492f              LDR      r1,|L2.360|
0000aa  a802              ADD      r0,sp,#8
0000ac  f7fffffe          BL       Data_Assemble
0000b0  2801              CMP      r0,#1
0000b2  d105              BNE      |L2.192|
;;;899            {
;;;900                comSendBuf(COM1,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
0000b4  f89d210c          LDRB     r2,[sp,#0x10c]
0000b8  a903              ADD      r1,sp,#0xc
0000ba  2000              MOVS     r0,#0
0000bc  f7fffffe          BL       comSendBuf
                  |L2.192|
;;;901            }
;;;902        }
0000c0  bf00              NOP      
                  |L2.194|
;;;903        if(pc_data->uart_pc[0] == 0x04 && pc_data->uart_pc[1] == 0x01)   //表示发停止包
0000c2  7820              LDRB     r0,[r4,#0]
0000c4  2804              CMP      r0,#4
0000c6  d11d              BNE      |L2.260|
0000c8  7860              LDRB     r0,[r4,#1]
0000ca  2801              CMP      r0,#1
0000cc  d11a              BNE      |L2.260|
;;;904        {
;;;905            uint8_t func_code[2] = {0x04,0x01};
0000ce  a027              ADR      r0,|L2.364|
0000d0  6800              LDR      r0,[r0,#0]
0000d2  9002              STR      r0,[sp,#8]
;;;906            Trans_stop.Transmitte_id[0]= pc_data->uart_pc[2];
0000d4  78a0              LDRB     r0,[r4,#2]
0000d6  4926              LDR      r1,|L2.368|
0000d8  7008              STRB     r0,[r1,#0]
;;;907            CAN_ID = pc_data->uart_pc[2];
0000da  78a0              LDRB     r0,[r4,#2]
0000dc  4920              LDR      r1,|L2.352|
0000de  7008              STRB     r0,[r1,#0]
;;;908            if(Data_Assemble(func_code,(uint8_t *)&Trans_stop,CAN_ID,sizeof(Trans_stop),&COM_buffer) ==1)
0000e0  a803              ADD      r0,sp,#0xc
0000e2  2307              MOVS     r3,#7
0000e4  9000              STR      r0,[sp,#0]
0000e6  4608              MOV      r0,r1
0000e8  7802              LDRB     r2,[r0,#0]  ; CAN_ID
0000ea  4921              LDR      r1,|L2.368|
0000ec  a802              ADD      r0,sp,#8
0000ee  f7fffffe          BL       Data_Assemble
0000f2  2801              CMP      r0,#1
0000f4  d105              BNE      |L2.258|
;;;909            {
;;;910                comSendBuf(COM1,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
0000f6  f89d210c          LDRB     r2,[sp,#0x10c]
0000fa  a903              ADD      r1,sp,#0xc
0000fc  2000              MOVS     r0,#0
0000fe  f7fffffe          BL       comSendBuf
                  |L2.258|
;;;911            }
;;;912        }
000102  bf00              NOP      
                  |L2.260|
;;;913        if(pc_data->uart_pc[0] == 0x05 && pc_data->uart_pc[1] == 0x01)   //解除报警
000104  7820              LDRB     r0,[r4,#0]
000106  2805              CMP      r0,#5
000108  d123              BNE      |L2.338|
00010a  7860              LDRB     r0,[r4,#1]
00010c  2801              CMP      r0,#1
00010e  d120              BNE      |L2.338|
;;;914        {
;;;915            uint8_t func_code[2] = {0x05,0x01};
000110  a018              ADR      r0,|L2.372|
000112  6800              LDR      r0,[r0,#0]
000114  9002              STR      r0,[sp,#8]
;;;916            Disalarm.Transmitte_id[0]= pc_data->uart_pc[2];
000116  78a0              LDRB     r0,[r4,#2]
000118  4917              LDR      r1,|L2.376|
00011a  7008              STRB     r0,[r1,#0]
;;;917            CAN_ID = pc_data->uart_pc[2];
00011c  78a0              LDRB     r0,[r4,#2]
00011e  4910              LDR      r1,|L2.352|
000120  7008              STRB     r0,[r1,#0]
;;;918            Disalarm.Disalarm_type[0] = pc_data->uart_pc[3];
000122  78e0              LDRB     r0,[r4,#3]
000124  4914              LDR      r1,|L2.376|
000126  7048              STRB     r0,[r1,#1]
;;;919            Disalarm.Disalarm_type[1] = pc_data->uart_pc[4];
000128  7921              LDRB     r1,[r4,#4]
00012a  4813              LDR      r0,|L2.376|
00012c  7081              STRB     r1,[r0,#2]
;;;920            if(Data_Assemble(func_code,(uint8_t *)&Disalarm,CAN_ID,sizeof(Disalarm),&COM_buffer) ==1)
00012e  a803              ADD      r0,sp,#0xc
000130  2309              MOVS     r3,#9
000132  9000              STR      r0,[sp,#0]
000134  480a              LDR      r0,|L2.352|
000136  7802              LDRB     r2,[r0,#0]  ; CAN_ID
000138  490f              LDR      r1,|L2.376|
00013a  a802              ADD      r0,sp,#8
00013c  f7fffffe          BL       Data_Assemble
000140  2801              CMP      r0,#1
000142  d105              BNE      |L2.336|
;;;921            {
;;;922                comSendBuf(COM1,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
000144  f89d210c          LDRB     r2,[sp,#0x10c]
000148  a903              ADD      r1,sp,#0xc
00014a  2000              MOVS     r0,#0
00014c  f7fffffe          BL       comSendBuf
                  |L2.336|
;;;923            }
;;;924        }
000150  bf00              NOP      
                  |L2.338|
;;;925        {
;;;926    
;;;927        }
;;;928    }
000152  b044              ADD      sp,sp,#0x110
000154  bd10              POP      {r4,pc}
;;;929    
                          ENDP

000156  0000              DCW      0x0000
                  |L2.344|
000158  020100            DCB      2,1,0
00015b  00                DCB      0
                  |L2.348|
                          DCD      Working_paramet
                  |L2.352|
                          DCD      CAN_ID
                  |L2.356|
000164  030100            DCB      3,1,0
000167  00                DCB      0
                  |L2.360|
                          DCD      Trans_open
                  |L2.364|
00016c  040100            DCB      4,1,0
00016f  00                DCB      0
                  |L2.368|
                          DCD      Trans_stop
                  |L2.372|
000174  050100            DCB      5,1,0
000177  00                DCB      0
                  |L2.376|
                          DCD      Disalarm

                          AREA ||i.CAN_data_func||, CODE, READONLY, ALIGN=2

                  CAN_data_func PROC
;;;490    ***************************************************/
;;;491    uint8_t CAN_data_func(uint8_t *p_func_code_buf,pc_data_t *p_PC_dat)
000000  b5f0              PUSH     {r4-r7,lr}
;;;492    {
000002  f5ad7d05          SUB      sp,sp,#0x214
000006  4604              MOV      r4,r0
000008  460e              MOV      r6,r1
;;;493        uint8_t err_code;
;;;494        App_printf("\r\n进入解析\r\n");
00000a  a026              ADR      r0,|L3.164|
00000c  f7fffffe          BL       App_printf
;;;495        CAN_data_t CAN_data_buf;
;;;496    #ifdef CAN_ID_Remove
;;;497        __align(8) static pc_data_t pp_PC_dat;
;;;498        Data_extract(p_PC_dat,&pp_PC_dat);
000010  4928              LDR      r1,|L3.180|
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       Data_extract
;;;499        App_printf("数据长度 %02x \r\n",pp_PC_dat.len);
000018  4826              LDR      r0,|L3.180|
00001a  f8901100          LDRB     r1,[r0,#0x100]  ; pp_PC_dat
00001e  a026              ADR      r0,|L3.184|
000020  f7fffffe          BL       App_printf
;;;500    //	for(int i = 0;i<pp_PC_dat.len;i++)
;;;501    //	{
;;;502    //		App_printf("%02X ",pp_PC_dat.uart_pc[i]);
;;;503    //	}
;;;504        CAN_data_buf  = Accpet_CAN_data(&pp_PC_dat);
000024  4923              LDR      r1,|L3.180|
000026  a801              ADD      r0,sp,#4
000028  f7fffffe          BL       Accpet_CAN_data
00002c  f44f7284          MOV      r2,#0x108
000030  a901              ADD      r1,sp,#4
000032  a843              ADD      r0,sp,#0x10c
000034  f7fffffe          BL       __aeabi_memcpy4
;;;505    #else
;;;506        CAN_data_buf  = Accpet_CAN_data(p_PC_dat);
;;;507    #endif
;;;508        if(CAN_data_buf.eff_sign == 0)
000038  f89d010c          LDRB     r0,[sp,#0x10c]
00003c  b918              CBNZ     r0,|L3.70|
;;;509            return 5;
00003e  2005              MOVS     r0,#5
                  |L3.64|
;;;510        App_printf("解析出来的数据：\r\n");
;;;511        App_printf("AN_data_buf.CAN_ID_buf = %02X\r\n",CAN_data_buf.CAN_ID_buf);
;;;512        App_printf("CAN_data_buf.Func_code_buf[0] = %02X\r\n",CAN_data_buf.Func_code_buf[0]);
;;;513        App_printf("CAN_data_buf.Func_code_buf[1] = %02X\r\n",CAN_data_buf.Func_code_buf[1]);
;;;514        p_func_code_buf[0] = CAN_data_buf.Func_code_buf[0];
;;;515        p_func_code_buf[1] = CAN_data_buf.Func_code_buf[1];
;;;516        for(int i = 0; i<CAN_data_buf.p_Spe_data.Spe_len; i++)
;;;517        {
;;;518            App_printf("%02X ",CAN_data_buf.p_Spe_data.Spe_data[i]);
;;;519        }
;;;520        App_printf("\r\nCAN_data_buf.p_Spe_data->Spe_da = %d\r\n",CAN_data_buf.p_Spe_data.Spe_len);
;;;521        err_code = Data_Storage(&CAN_data_buf);
;;;522        return err_code;
;;;523    }
000040  f50d7d05          ADD      sp,sp,#0x214
000044  bdf0              POP      {r4-r7,pc}
                  |L3.70|
000046  a021              ADR      r0,|L3.204|
000048  f7fffffe          BL       App_printf
00004c  f89d110d          LDRB     r1,[sp,#0x10d]        ;511
000050  a023              ADR      r0,|L3.224|
000052  f7fffffe          BL       App_printf
000056  f89d110e          LDRB     r1,[sp,#0x10e]        ;512
00005a  a029              ADR      r0,|L3.256|
00005c  f7fffffe          BL       App_printf
000060  a843              ADD      r0,sp,#0x10c          ;513
000062  78c1              LDRB     r1,[r0,#3]            ;513
000064  a030              ADR      r0,|L3.296|
000066  f7fffffe          BL       App_printf
00006a  f89d010e          LDRB     r0,[sp,#0x10e]        ;514
00006e  7020              STRB     r0,[r4,#0]            ;514
000070  a843              ADD      r0,sp,#0x10c          ;515
000072  78c0              LDRB     r0,[r0,#3]            ;515
000074  7060              STRB     r0,[r4,#1]            ;515
000076  2500              MOVS     r5,#0                 ;516
000078  e005              B        |L3.134|
                  |L3.122|
00007a  a844              ADD      r0,sp,#0x110          ;518
00007c  5d41              LDRB     r1,[r0,r5]            ;518
00007e  a034              ADR      r0,|L3.336|
000080  f7fffffe          BL       App_printf
000084  1c6d              ADDS     r5,r5,#1              ;516
                  |L3.134|
000086  f89d0210          LDRB     r0,[sp,#0x210]        ;516
00008a  42a8              CMP      r0,r5                 ;516
00008c  dcf5              BGT      |L3.122|
00008e  f89d1210          LDRB     r1,[sp,#0x210]        ;520
000092  a031              ADR      r0,|L3.344|
000094  f7fffffe          BL       App_printf
000098  a843              ADD      r0,sp,#0x10c          ;521
00009a  f7fffffe          BL       Data_Storage
00009e  4607              MOV      r7,r0                 ;521
0000a0  4638              MOV      r0,r7                 ;522
0000a2  e7cd              B        |L3.64|
;;;524    
                          ENDP

                  |L3.164|
0000a4  0d0abdf8          DCB      "\r\n",189,248,200,235,189,226,206,246,"\r\n",0
0000a8  c8ebbde2
0000ac  cef60d0a
0000b0  00      
0000b1  00                DCB      0
0000b2  00                DCB      0
0000b3  00                DCB      0
                  |L3.180|
                          DCD      pp_PC_dat
                  |L3.184|
0000b8  cafdbedd          DCB      202,253,190,221,179,164,182,200," %02x \r\n",0
0000bc  b3a4b6c8
0000c0  20253032
0000c4  78200d0a
0000c8  00      
0000c9  00                DCB      0
0000ca  00                DCB      0
0000cb  00                DCB      0
                  |L3.204|
0000cc  bde2cef6          DCB      189,226,206,246,179,246,192,180,181,196,202,253,190,221,163
0000d0  b3f6c0b4
0000d4  b5c4cafd
0000d8  bedda3  
0000db  ba0d0a00          DCB      186,"\r\n",0
0000df  00                DCB      0
                  |L3.224|
0000e0  414e5f64          DCB      "AN_data_buf.CAN_ID_buf = %02X\r\n",0
0000e4  6174615f
0000e8  6275662e
0000ec  43414e5f
0000f0  49445f62
0000f4  7566203d
0000f8  20253032
0000fc  580d0a00
                  |L3.256|
000100  43414e5f          DCB      "CAN_data_buf.Func_code_buf[0] = %02X\r\n",0
000104  64617461
000108  5f627566
00010c  2e46756e
000110  635f636f
000114  64655f62
000118  75665b30
00011c  5d203d20
000120  25303258
000124  0d0a00  
000127  00                DCB      0
                  |L3.296|
000128  43414e5f          DCB      "CAN_data_buf.Func_code_buf[1] = %02X\r\n",0
00012c  64617461
000130  5f627566
000134  2e46756e
000138  635f636f
00013c  64655f62
000140  75665b31
000144  5d203d20
000148  25303258
00014c  0d0a00  
00014f  00                DCB      0
                  |L3.336|
000150  25303258          DCB      "%02X ",0
000154  2000    
000156  00                DCB      0
000157  00                DCB      0
                  |L3.344|
000158  0d0a4341          DCB      "\r\nCAN_data_buf.p_Spe_data->Spe_da = %d\r\n",0
00015c  4e5f6461
000160  74615f62
000164  75662e70
000168  5f537065
00016c  5f646174
000170  612d3e53
000174  70655f64
000178  61203d20
00017c  25640d0a
000180  00      
000181  00                DCB      0
000182  00                DCB      0
000183  00                DCB      0

                          AREA ||i.Data_Assemble||, CODE, READONLY, ALIGN=2

                  Data_Assemble PROC
;;;406    ********************************************************/
;;;407    static uint8_t Data_Assemble(uint8_t *Func_code,uint8_t *Specific_data,uint8_t Can_ID_buf,uint8_t Len,Assemble_buffer_t *Buffer)
000000  e92d43fe          PUSH     {r1-r9,lr}
;;;408    {
000004  4606              MOV      r6,r0
000006  4689              MOV      r9,r1
000008  4617              MOV      r7,r2
00000a  461c              MOV      r4,r3
00000c  9d0a              LDR      r5,[sp,#0x28]
;;;409        uint16_t CRC_Back;
;;;410        uint8_t Start_Data[7] = {0x05,0x02,0x00,0x00,0x00,0x00,0x00};
00000e  a123              ADR      r1,|L4.156|
000010  c903              LDM      r1,{r0,r1}
000012  e9cd0101          STRD     r0,r1,[sp,#4]
;;;411        uint8_t End_Data[4] = {0,0,3,4};
000016  a023              ADR      r0,|L4.164|
000018  6800              LDR      r0,[r0,#0]
00001a  9000              STR      r0,[sp,#0]
;;;412        Start_Data[2] = Can_ID_buf;//写入发射机ID
00001c  f88d7006          STRB     r7,[sp,#6]
;;;413        Start_Data[3] = (((Len + 3) >> 0) & 0xff);//数据长度
000020  1ce0              ADDS     r0,r4,#3
000022  b2c0              UXTB     r0,r0
000024  f88d0007          STRB     r0,[sp,#7]
;;;414        Start_Data[4] = Func_code[0];//功能码
000028  7830              LDRB     r0,[r6,#0]
00002a  f88d0008          STRB     r0,[sp,#8]
;;;415        Start_Data[5] = Func_code[1];//功能码
00002e  7870              LDRB     r0,[r6,#1]
000030  f88d0009          STRB     r0,[sp,#9]
;;;416    #ifdef ADD_CAN_len
;;;417        Start_Data[6] = (CEIL_DIV(Start_Data[3]+8-12,8))*4+Start_Data[3]+8;
000034  f89d1007          LDRB     r1,[sp,#7]
000038  1cc8              ADDS     r0,r1,#3
00003a  17c1              ASRS     r1,r0,#31
00003c  eb007151          ADD      r1,r0,r1,LSR #29
000040  10c9              ASRS     r1,r1,#3
000042  f89d2007          LDRB     r2,[sp,#7]
000046  eb020181          ADD      r1,r2,r1,LSL #2
00004a  3108              ADDS     r1,r1,#8
00004c  b2c9              UXTB     r1,r1
00004e  f88d100a          STRB     r1,[sp,#0xa]
;;;418    #endif
;;;419        memcpy(Buffer->Data_buffer, Start_Data,7);
000052  9801              LDR      r0,[sp,#4]
000054  6028              STR      r0,[r5,#0]
000056  f8bd0008          LDRH     r0,[sp,#8]
00005a  80a8              STRH     r0,[r5,#4]
00005c  f89d000a          LDRB     r0,[sp,#0xa]
000060  71a8              STRB     r0,[r5,#6]
;;;420        memcpy(Buffer->Data_buffer+7, Specific_data,Len);
000062  4622              MOV      r2,r4
000064  4649              MOV      r1,r9
000066  1de8              ADDS     r0,r5,#7
000068  f7fffffe          BL       __aeabi_memcpy
;;;421        CRC_Back = CRC16_XMODEM(Buffer->Data_buffer+4, Len+3);
00006c  1ce1              ADDS     r1,r4,#3
00006e  1d28              ADDS     r0,r5,#4
000070  f7fffffe          BL       CRC16_XMODEM
000074  4680              MOV      r8,r0
;;;422        End_Data[0] = (uint8_t)((CRC_Back >> 8) & 0xff);		//存高八位
000076  ea4f2018          LSR      r0,r8,#8
00007a  f88d0000          STRB     r0,[sp,#0]
;;;423        End_Data[1] = (uint8_t)((CRC_Back >> 0) & 0xff) ;		//低八位
00007e  f00800ff          AND      r0,r8,#0xff
000082  f88d0001          STRB     r0,[sp,#1]
;;;424        memcpy(Buffer->Data_buffer+Len+7, End_Data,4);
000086  1928              ADDS     r0,r5,r4
000088  9900              LDR      r1,[sp,#0]
00008a  f8c01007          STR      r1,[r0,#7]
;;;425        Buffer->Len_buffer = Len+11;
00008e  f104000b          ADD      r0,r4,#0xb
000092  f8850100          STRB     r0,[r5,#0x100]
;;;426        return 1;
000096  2001              MOVS     r0,#1
;;;427    }
000098  e8bd83fe          POP      {r1-r9,pc}
;;;428    
                          ENDP

                  |L4.156|
00009c  050200            DCB      5,2,0
00009f  00                DCB      0
0000a0  00                DCB      0
0000a1  00                DCB      0
0000a2  00                DCB      0
0000a3  00                DCB      0
                  |L4.164|
0000a4  00                DCB      0
0000a5  00                DCB      0
0000a6  0304              DCB      3,4

                          AREA ||i.Data_Storage||, CODE, READONLY, ALIGN=2

                  Data_Storage PROC
;;;96     ************************************************************/
;;;97     static uint8_t Data_Storage(CAN_data_t *CAN_data_cmp)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;98     {
000004  4604              MOV      r4,r0
;;;99         if(CAN_data_cmp->Func_code_buf[0] == 0x01 && CAN_data_cmp->Func_code_buf[1] == 0x01)		//Pc下发报警参数阈值
000006  78a0              LDRB     r0,[r4,#2]
000008  2801              CMP      r0,#1
00000a  d177              BNE      |L5.252|
00000c  78e0              LDRB     r0,[r4,#3]
00000e  2801              CMP      r0,#1
000010  d174              BNE      |L5.252|
;;;100        {
;;;101            memcpy(Alarm_threshold.Transmitte_id,CAN_data_cmp->p_Spe_data.Spe_data,1);
000012  48fe              LDR      r0,|L5.1036|
000014  7921              LDRB     r1,[r4,#4]
000016  f8801026          STRB     r1,[r0,#0x26]
;;;102            memcpy(Alarm_threshold.Low_temp_limit,CAN_data_cmp->p_Spe_data.Spe_data+1,4);
00001a  4601              MOV      r1,r0
00001c  f8d40005          LDR      r0,[r4,#5]
000020  6008              STR      r0,[r1,#0]  ; Alarm_threshold
;;;103            memcpy(Alarm_threshold.Upp_temp_limit,CAN_data_cmp->p_Spe_data.Spe_data+5,4);
000022  f8d40009          LDR      r0,[r4,#9]
000026  6048              STR      r0,[r1,#4]  ; Alarm_threshold
;;;104            memcpy(Alarm_threshold.Low_humidity_limit,CAN_data_cmp->p_Spe_data.Spe_data+9,4);
000028  f8d4000d          LDR      r0,[r4,#0xd]
00002c  6088              STR      r0,[r1,#8]  ; Alarm_threshold
;;;105            memcpy(Alarm_threshold.Upp_humidity_limit,CAN_data_cmp->p_Spe_data.Spe_data+13,4);
00002e  f8d40011          LDR      r0,[r4,#0x11]
000032  60c8              STR      r0,[r1,#0xc]  ; Alarm_threshold
;;;106            memcpy(Alarm_threshold.Low_45I_limit,CAN_data_cmp->p_Spe_data.Spe_data+17,4);
000034  f8d40015          LDR      r0,[r4,#0x15]
000038  6108              STR      r0,[r1,#0x10]  ; Alarm_threshold
;;;107            memcpy(Alarm_threshold.Upp_45I_limit,CAN_data_cmp->p_Spe_data.Spe_data+21,4);
00003a  f8d40019          LDR      r0,[r4,#0x19]
00003e  6148              STR      r0,[r1,#0x14]  ; Alarm_threshold
;;;108            memcpy(Alarm_threshold.Low_45V_limit,CAN_data_cmp->p_Spe_data.Spe_data+25,4);
000040  f8d4001d          LDR      r0,[r4,#0x1d]
000044  6188              STR      r0,[r1,#0x18]  ; Alarm_threshold
;;;109            memcpy(Alarm_threshold.Upp_45V_limit,CAN_data_cmp->p_Spe_data.Spe_data+29,4);
000046  f8d40021          LDR      r0,[r4,#0x21]
00004a  61c8              STR      r0,[r1,#0x1c]  ; Alarm_threshold
;;;110            memcpy(Alarm_threshold.timer,CAN_data_cmp->p_Spe_data.Spe_data+33,6);
00004c  f8d42025          LDR      r2,[r4,#0x25]
000050  620a              STR      r2,[r1,#0x20]  ; Alarm_threshold
000052  f8b40029          LDRH     r0,[r4,#0x29]
000056  8488              STRH     r0,[r1,#0x24]
;;;111            App_printf("\r\n");
000058  a0ed              ADR      r0,|L5.1040|
00005a  f7fffffe          BL       App_printf
;;;112            App_printf("%f  %f",Alarm_threshold.Low_temp_limit[0],Alarm_threshold.Upp_temp_limit[0]);
00005e  49eb              LDR      r1,|L5.1036|
000060  6848              LDR      r0,[r1,#4]  ; Alarm_threshold
000062  f7fffffe          BL       __aeabi_f2d
000066  4605              MOV      r5,r0
000068  460e              MOV      r6,r1
00006a  49e8              LDR      r1,|L5.1036|
00006c  6808              LDR      r0,[r1,#0]  ; Alarm_threshold
00006e  f7fffffe          BL       __aeabi_f2d
000072  4607              MOV      r7,r0
000074  463a              MOV      r2,r7
000076  460b              MOV      r3,r1
000078  a0e6              ADR      r0,|L5.1044|
00007a  e9cd5600          STRD     r5,r6,[sp,#0]
00007e  f7fffffe          BL       App_printf
;;;113            App_printf("%f  %f",Alarm_threshold.Low_humidity_limit[0],Alarm_threshold.Upp_humidity_limit[0]);
000082  49e2              LDR      r1,|L5.1036|
000084  68c8              LDR      r0,[r1,#0xc]  ; Alarm_threshold
000086  f7fffffe          BL       __aeabi_f2d
00008a  4605              MOV      r5,r0
00008c  460e              MOV      r6,r1
00008e  49df              LDR      r1,|L5.1036|
000090  6888              LDR      r0,[r1,#8]  ; Alarm_threshold
000092  f7fffffe          BL       __aeabi_f2d
000096  4607              MOV      r7,r0
000098  463a              MOV      r2,r7
00009a  460b              MOV      r3,r1
00009c  a0dd              ADR      r0,|L5.1044|
00009e  e9cd5600          STRD     r5,r6,[sp,#0]
0000a2  f7fffffe          BL       App_printf
;;;114            App_printf("%f  %f",Alarm_threshold.Low_45I_limit[0],Alarm_threshold.Upp_45I_limit[0]);
0000a6  49d9              LDR      r1,|L5.1036|
0000a8  6948              LDR      r0,[r1,#0x14]  ; Alarm_threshold
0000aa  f7fffffe          BL       __aeabi_f2d
0000ae  4605              MOV      r5,r0
0000b0  460e              MOV      r6,r1
0000b2  49d6              LDR      r1,|L5.1036|
0000b4  6908              LDR      r0,[r1,#0x10]  ; Alarm_threshold
0000b6  f7fffffe          BL       __aeabi_f2d
0000ba  4607              MOV      r7,r0
0000bc  463a              MOV      r2,r7
0000be  460b              MOV      r3,r1
0000c0  a0d4              ADR      r0,|L5.1044|
0000c2  e9cd5600          STRD     r5,r6,[sp,#0]
0000c6  f7fffffe          BL       App_printf
;;;115            App_printf("%f  %f",Alarm_threshold.Low_45V_limit[0],Alarm_threshold.Upp_45V_limit[0]);
0000ca  49d0              LDR      r1,|L5.1036|
0000cc  69c8              LDR      r0,[r1,#0x1c]  ; Alarm_threshold
0000ce  f7fffffe          BL       __aeabi_f2d
0000d2  4605              MOV      r5,r0
0000d4  460e              MOV      r6,r1
0000d6  49cd              LDR      r1,|L5.1036|
0000d8  6988              LDR      r0,[r1,#0x18]  ; Alarm_threshold
0000da  f7fffffe          BL       __aeabi_f2d
0000de  4607              MOV      r7,r0
0000e0  463a              MOV      r2,r7
0000e2  460b              MOV      r3,r1
0000e4  a0cb              ADR      r0,|L5.1044|
0000e6  e9cd5600          STRD     r5,r6,[sp,#0]
0000ea  f7fffffe          BL       App_printf
;;;116            App_printf("\r\n");
0000ee  a0c8              ADR      r0,|L5.1040|
0000f0  f7fffffe          BL       App_printf
;;;117    
;;;118    //			memcpy(Alarm_threshold.Low_temp_limit,CAN_data_cmp->p_Spe_data.Spe_data,4);
;;;119    //			memcpy(Alarm_threshold.Upp_temp_limit,CAN_data_cmp->p_Spe_data.Spe_data+4,4);
;;;120    //			memcpy(Alarm_threshold.Low_humidity_limit,CAN_data_cmp->p_Spe_data.Spe_data+8,4);
;;;121    //			memcpy(Alarm_threshold.Upp_humidity_limit,CAN_data_cmp->p_Spe_data.Spe_data+12,4);
;;;122    //			memcpy(Alarm_threshold.Low_45I_limit,CAN_data_cmp->p_Spe_data.Spe_data+16,4);
;;;123    //			memcpy(Alarm_threshold.Upp_45I_limit,CAN_data_cmp->p_Spe_data.Spe_data+20,4);
;;;124    //			memcpy(Alarm_threshold.Low_45V_limit,CAN_data_cmp->p_Spe_data.Spe_data+24,4);
;;;125    //			memcpy(Alarm_threshold.Upp_45V_limit,CAN_data_cmp->p_Spe_data.Spe_data+28,4);
;;;126    //			memcpy(Alarm_threshold.timer,CAN_data_cmp->p_Spe_data.Spe_data+32,6);
;;;127    //			memcpy(Alarm_threshold.Transmitte_id,CAN_data_cmp->p_Spe_data.Spe_data+38,1);
;;;128            return 1;
0000f4  2001              MOVS     r0,#1
                  |L5.246|
;;;129        }
;;;130        else if(CAN_data_cmp->Func_code_buf[0] == 0x02 && CAN_data_cmp->Func_code_buf[1] == 0x01)	//下发状态查询
;;;131        {
;;;132            if(CAN_data_cmp->p_Spe_data.Spe_data[0] == CAN_ID)   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;133            {
;;;134                memcpy(Working_paramet.Retain,CAN_data_cmp->p_Spe_data.Spe_data+1,2);
;;;135                return 1;
;;;136            }
;;;137            else
;;;138            {
;;;139                return 3;
;;;140            }
;;;141        }
;;;142        else if(CAN_data_cmp->Func_code_buf[0] == 0x03 && CAN_data_cmp->Func_code_buf[1] == 0x01)	//开启发射机
;;;143        {
;;;144            if(CAN_data_cmp->p_Spe_data.Spe_data[0] == CAN_ID)   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;145            {
;;;146                memcpy(Trans_open.Type, CAN_data_cmp->p_Spe_data.Spe_data+1, 1);		//工作种类
;;;147                memcpy(Trans_open.Channel, CAN_data_cmp->p_Spe_data.Spe_data+2, 3);		//信道
;;;148                memcpy(Trans_open.Freq, CAN_data_cmp->p_Spe_data.Spe_data+5, 12);		//频率
;;;149                memcpy(Trans_open.Power_grade, CAN_data_cmp->p_Spe_data.Spe_data+17, 3);//功率等级
;;;150                memcpy(Trans_open.Berdou_time, CAN_data_cmp->p_Spe_data.Spe_data+20, 6);//北斗时间
;;;151    			
;;;152    			MT2000_Tx.method = 'F';		//FM
;;;153    			
;;;154    			switch( Trans_open.Type[0] )	//工作种类，固频/双频/三频
;;;155    			{
;;;156    				case 0x01: MT2000_Tx.mode = '1'; break;
;;;157    				case 0x02: MT2000_Tx.mode = '2'; break;
;;;158    				case 0x03: MT2000_Tx.mode = '3'; break;
;;;159    				default: break;
;;;160    			}
;;;161    			
;;;162    			MT2000_Tx.channel[0] = '0';	//信道01
;;;163    			MT2000_Tx.channel[1] = '1';
;;;164    			MT2000_Tx.channel[2] = '\0';
;;;165    			
;;;166    			MT2000_Tx.fre1[0] = ( ( (Trans_open.Freq[0]) >> 4 ) & 0x0F) + '0';
;;;167    			MT2000_Tx.fre1[1] = ( ( (Trans_open.Freq[0]) >> 0 ) & 0x0F) + '0';
;;;168    			MT2000_Tx.fre1[2] = ( ( (Trans_open.Freq[1]) >> 4 ) & 0x0F) + '0';
;;;169    			MT2000_Tx.fre1[3] = ( ( (Trans_open.Freq[1]) >> 0 ) & 0x0F) + '0';
;;;170    			MT2000_Tx.fre1[4] = ( ( (Trans_open.Freq[2]) >> 4 ) & 0x0F) + '0';
;;;171    			MT2000_Tx.fre1[5] = ( ( (Trans_open.Freq[2]) >> 0 ) & 0x0F) + '0';
;;;172    			MT2000_Tx.fre1[6] = ( ( (Trans_open.Freq[3]) >> 4 ) & 0x0F) + '0';
;;;173    			MT2000_Tx.fre1[7] = ( ( (Trans_open.Freq[3]) >> 0 ) & 0x0F) + '0';
;;;174    			MT2000_Tx.fre1[8] = '\0';
;;;175    			
;;;176    			MT2000_Tx.fre2[0] = ( ( (Trans_open.Freq[4]) >> 4 ) & 0x0F) + '0';
;;;177    			MT2000_Tx.fre2[1] = ( ( (Trans_open.Freq[4]) >> 0 ) & 0x0F) + '0';
;;;178    			MT2000_Tx.fre2[2] = ( ( (Trans_open.Freq[5]) >> 4 ) & 0x0F) + '0';
;;;179    			MT2000_Tx.fre2[3] = ( ( (Trans_open.Freq[5]) >> 0 ) & 0x0F) + '0';
;;;180    			MT2000_Tx.fre2[4] = ( ( (Trans_open.Freq[6]) >> 4 ) & 0x0F) + '0';
;;;181    			MT2000_Tx.fre2[5] = ( ( (Trans_open.Freq[6]) >> 0 ) & 0x0F) + '0';
;;;182    			MT2000_Tx.fre2[6] = ( ( (Trans_open.Freq[7]) >> 4 ) & 0x0F) + '0';
;;;183    			MT2000_Tx.fre2[7] = ( ( (Trans_open.Freq[7]) >> 0 ) & 0x0F) + '0';
;;;184    			MT2000_Tx.fre2[8] = '\0';
;;;185    			
;;;186    			MT2000_Tx.fre3[0] = ( ( (Trans_open.Freq[8]) >> 4 ) & 0x0F) + '0';
;;;187    			MT2000_Tx.fre3[1] = ( ( (Trans_open.Freq[8]) >> 0 ) & 0x0F) + '0';
;;;188    			MT2000_Tx.fre3[2] = ( ( (Trans_open.Freq[9]) >> 4 ) & 0x0F) + '0';
;;;189    			MT2000_Tx.fre3[3] = ( ( (Trans_open.Freq[9]) >> 0 ) & 0x0F) + '0';
;;;190    			MT2000_Tx.fre3[4] = ( ( (Trans_open.Freq[10]) >> 4 ) & 0x0F) + '0';
;;;191    			MT2000_Tx.fre3[5] = ( ( (Trans_open.Freq[10]) >> 0 ) & 0x0F) + '0';
;;;192    			MT2000_Tx.fre3[6] = ( ( (Trans_open.Freq[11]) >> 4 ) & 0x0F) + '0';
;;;193    			MT2000_Tx.fre3[7] = ( ( (Trans_open.Freq[11]) >> 0 ) & 0x0F) + '0';
;;;194    			MT2000_Tx.fre3[8] = '\0';
;;;195    			
;;;196    			switch( Trans_open.Power_grade[0] )	//功率等级
;;;197    			{
;;;198    				case 0x00: MT2000_Tx.power = '3'; break;	//全功率
;;;199    				case 0x01: MT2000_Tx.power = '2'; break;	//1/2功率
;;;200    				case 0x02: MT2000_Tx.power = '1'; break;	//1/4功率
;;;201    				default: break;
;;;202    			}
;;;203                return 1;
;;;204            }
;;;205            else
;;;206            {
;;;207                return 3;
;;;208            }
;;;209        }
;;;210        else if(CAN_data_cmp->Func_code_buf[0] == 0x04 && CAN_data_cmp->Func_code_buf[1] == 0x01)	//关闭发射机
;;;211        {
;;;212            if(CAN_data_cmp->p_Spe_data.Spe_data[0] == CAN_ID)   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;213            {
;;;214                memcpy(Trans_stop.Berdou_time,CAN_data_cmp->p_Spe_data.Spe_data+1,6);//北斗时间
;;;215                return 1;
;;;216            }
;;;217            else
;;;218            {
;;;219                return 3;
;;;220            }
;;;221        }
;;;222        else if(CAN_data_cmp->Func_code_buf[0] == 0x05 && CAN_data_cmp->Func_code_buf[1] == 0x01)	//取消报警
;;;223        {
;;;224            if(CAN_data_cmp->p_Spe_data.Spe_data[0] == CAN_ID)   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;225            {
;;;226                memcpy(Disalarm.Disalarm_type,CAN_data_cmp->p_Spe_data.Spe_data+1,2);//解除报警类型
;;;227                memcpy(Disalarm.Berdou_time,CAN_data_cmp->p_Spe_data.Spe_data+3,6);//北斗时间
;;;228                return 1;
;;;229            }
;;;230            else
;;;231            {
;;;232                return 3;
;;;233            }
;;;234        }
;;;235        else if(CAN_data_cmp->Func_code_buf[0] == 0x06 && CAN_data_cmp->Func_code_buf[1] == 0x01)	//查询历史报警状态
;;;236        {
;;;237            if(CAN_data_cmp->p_Spe_data.Spe_data[0] == CAN_ID)   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;238            {
;;;239                memcpy(Alarm_history.Berdou_time,CAN_data_cmp->p_Spe_data.Spe_data+1,6);//北斗时间
;;;240                return 1;
;;;241            }
;;;242            else
;;;243            {
;;;244                return 3;
;;;245            }
;;;246        }
;;;247        else if(CAN_data_cmp->Func_code_buf[0] == 0x07 && CAN_data_cmp->Func_code_buf[1] == 0x01)	//发射机上电
;;;248        {
;;;249            if(CAN_data_cmp->p_Spe_data.Spe_data[0] == CAN_ID)   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;250            {
;;;251                memcpy(Power_on.Retain,CAN_data_cmp->p_Spe_data.Spe_data+1,1);//北斗时间
;;;252                memcpy(Power_on.Berdou_time,CAN_data_cmp->p_Spe_data.Spe_data+2,6);//北斗时间
;;;253                return 1;
;;;254            }
;;;255            else
;;;256            {
;;;257                return 3;
;;;258            }
;;;259        }
;;;260        else if(CAN_data_cmp->Func_code_buf[0] == 0x08 && CAN_data_cmp->Func_code_buf[1] == 0x01)	//发射机断电
;;;261        {
;;;262            if(CAN_data_cmp->p_Spe_data.Spe_data[0] == CAN_ID)   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;263            {
;;;264                memcpy(Power_off.Retain,CAN_data_cmp->p_Spe_data.Spe_data+1,1);//
;;;265                return 1;
;;;266            }
;;;267            else
;;;268            {
;;;269                return 3;
;;;270            }
;;;271        }
;;;272        else if(CAN_data_cmp->Func_code_buf[0] == 0x09 && CAN_data_cmp->Func_code_buf[1] == 0x01)	//扫描最佳工作频段
;;;273        {
;;;274            if(CAN_data_cmp->p_Spe_data.Spe_data[0] == CAN_ID)   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;275            {
;;;276                memcpy(Scan_Frq.state,CAN_data_cmp->p_Spe_data.Spe_data+1,1);//状态
;;;277                memcpy(Scan_Frq.Fre_Band,CAN_data_cmp->p_Spe_data.Spe_data+2,8);
;;;278                return 1;
;;;279            }
;;;280            else
;;;281            {
;;;282                return 3;
;;;283            }
;;;284        }
;;;285        else if(CAN_data_cmp->Func_code_buf[0] == 0x0A && CAN_data_cmp->Func_code_buf[1] == 0x01)	//停止扫频
;;;286        {
;;;287            if(CAN_data_cmp->p_Spe_data.Spe_data[0] == CAN_ID)   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;288            {
;;;289                memcpy(Sacn_stop.state,CAN_data_cmp->p_Spe_data.Spe_data+1,1);//
;;;290                return 1;
;;;291            }
;;;292            else
;;;293            {
;;;294                return 3;
;;;295            }
;;;296        }
;;;297        else if(CAN_data_cmp->Func_code_buf[0] == 0x0B && CAN_data_cmp->Func_code_buf[1] == 0x01)	//增加功率
;;;298        {
;;;299            if(CAN_data_cmp->p_Spe_data.Spe_data[0] == CAN_ID)   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;300            {
;;;301                memcpy(Add_Power.Power_UP,CAN_data_cmp->p_Spe_data.Spe_data+1,2);
;;;302                return 1;
;;;303            }
;;;304            else
;;;305            {
;;;306                return 3;
;;;307            }
;;;308        }
;;;309        else if(CAN_data_cmp->Func_code_buf[0] == 0x0C && CAN_data_cmp->Func_code_buf[1] == 0x01)	//减小功率
;;;310        {
;;;311            if(CAN_data_cmp->p_Spe_data.Spe_data[0] == CAN_ID)   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;312            {
;;;313                memcpy(Sub_Power.Power_DOWN,CAN_data_cmp->p_Spe_data.Spe_data+1,2);
;;;314                return 1;
;;;315            }
;;;316            else
;;;317            {
;;;318                return 3;
;;;319            }
;;;320        }
;;;321        else if(CAN_data_cmp->Func_code_buf[0] == 0x0D && CAN_data_cmp->Func_code_buf[1] == 0x01)	//运行图
;;;322        {
;;;323            if(CAN_data_cmp->p_Spe_data.Spe_data[0] == CAN_ID)   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;324            {
;;;325                memcpy(Run_Diagram.count,CAN_data_cmp->p_Spe_data.Spe_data+1,1);
;;;326                memcpy(Run_Diagram.Continue,CAN_data_cmp->p_Spe_data.Spe_data+2,2);
;;;327    
;;;328                memcpy(Run_Diagram.Start_Time1,CAN_data_cmp->p_Spe_data.Spe_data+4,2);
;;;329                memcpy(Run_Diagram.End_Timep1,CAN_data_cmp->p_Spe_data.Spe_data+6,2);
;;;330                memcpy(Run_Diagram.Power1,CAN_data_cmp->p_Spe_data.Spe_data+8,1);
;;;331                memcpy(Run_Diagram.Frq1,CAN_data_cmp->p_Spe_data.Spe_data+9,4);
;;;332                memcpy(Run_Diagram.channel1,CAN_data_cmp->p_Spe_data.Spe_data+13,1);
;;;333    
;;;334                memcpy(Run_Diagram.Start_Time2,CAN_data_cmp->p_Spe_data.Spe_data+14,2);
;;;335                memcpy(Run_Diagram.End_Timep2,CAN_data_cmp->p_Spe_data.Spe_data+16,2);
;;;336                memcpy(Run_Diagram.Power2,CAN_data_cmp->p_Spe_data.Spe_data+18,1);
;;;337                memcpy(Run_Diagram.Frq2,CAN_data_cmp->p_Spe_data.Spe_data+19,4);
;;;338                memcpy(Run_Diagram.channel2,CAN_data_cmp->p_Spe_data.Spe_data+23,1);
;;;339    
;;;340                memcpy(Run_Diagram.Start_Time3,CAN_data_cmp->p_Spe_data.Spe_data+24,2);
;;;341                memcpy(Run_Diagram.End_Timep3,CAN_data_cmp->p_Spe_data.Spe_data+26,2);
;;;342                memcpy(Run_Diagram.Power3,CAN_data_cmp->p_Spe_data.Spe_data+28,1);
;;;343                memcpy(Run_Diagram.Frq3,CAN_data_cmp->p_Spe_data.Spe_data+29,4);
;;;344                memcpy(Run_Diagram.channel3,CAN_data_cmp->p_Spe_data.Spe_data+33,1);
;;;345    
;;;346                memcpy(Run_Diagram.Start_Time4,CAN_data_cmp->p_Spe_data.Spe_data+34,2);
;;;347                memcpy(Run_Diagram.End_Timep4,CAN_data_cmp->p_Spe_data.Spe_data+36,2);
;;;348                memcpy(Run_Diagram.Power4,CAN_data_cmp->p_Spe_data.Spe_data+38,1);
;;;349                memcpy(Run_Diagram.Frq4,CAN_data_cmp->p_Spe_data.Spe_data+39,4);
;;;350                memcpy(Run_Diagram.channel4,CAN_data_cmp->p_Spe_data.Spe_data+43,1);
;;;351    
;;;352                memcpy(Run_Diagram.Start_Time5,CAN_data_cmp->p_Spe_data.Spe_data+44,2);
;;;353                memcpy(Run_Diagram.End_Timep5,CAN_data_cmp->p_Spe_data.Spe_data+46,2);
;;;354                memcpy(Run_Diagram.Power5,CAN_data_cmp->p_Spe_data.Spe_data+48,1);
;;;355                memcpy(Run_Diagram.Frq5,CAN_data_cmp->p_Spe_data.Spe_data+49,4);
;;;356                memcpy(Run_Diagram.channel5,CAN_data_cmp->p_Spe_data.Spe_data+53,1);
;;;357    
;;;358                memcpy(Run_Diagram.Start_Time6,CAN_data_cmp->p_Spe_data.Spe_data+54,2);
;;;359                memcpy(Run_Diagram.End_Timep6,CAN_data_cmp->p_Spe_data.Spe_data+56,2);
;;;360                memcpy(Run_Diagram.Power6,CAN_data_cmp->p_Spe_data.Spe_data+58,1);
;;;361                memcpy(Run_Diagram.Frq6,CAN_data_cmp->p_Spe_data.Spe_data+59,4);
;;;362                memcpy(Run_Diagram.channel6,CAN_data_cmp->p_Spe_data.Spe_data+63,1);
;;;363    
;;;364                memcpy(Run_Diagram.Start_Time7,CAN_data_cmp->p_Spe_data.Spe_data+64,2);
;;;365                memcpy(Run_Diagram.End_Timep7,CAN_data_cmp->p_Spe_data.Spe_data+66,2);
;;;366                memcpy(Run_Diagram.Power7,CAN_data_cmp->p_Spe_data.Spe_data+68,1);
;;;367                memcpy(Run_Diagram.Frq7,CAN_data_cmp->p_Spe_data.Spe_data+69,4);
;;;368                memcpy(Run_Diagram.channel7,CAN_data_cmp->p_Spe_data.Spe_data+73,1);
;;;369    
;;;370                memcpy(Run_Diagram.Start_Time8,CAN_data_cmp->p_Spe_data.Spe_data+74,2);
;;;371                memcpy(Run_Diagram.End_Timep8,CAN_data_cmp->p_Spe_data.Spe_data+76,2);
;;;372                memcpy(Run_Diagram.Power8,CAN_data_cmp->p_Spe_data.Spe_data+78,1);
;;;373                memcpy(Run_Diagram.Frq8,CAN_data_cmp->p_Spe_data.Spe_data+79,4);
;;;374                memcpy(Run_Diagram.channel8,CAN_data_cmp->p_Spe_data.Spe_data+83,1);
;;;375    
;;;376                memcpy(Run_Diagram.Start_Time9,CAN_data_cmp->p_Spe_data.Spe_data+84,2);
;;;377                memcpy(Run_Diagram.End_Timep9,CAN_data_cmp->p_Spe_data.Spe_data+86,2);
;;;378                memcpy(Run_Diagram.Power9,CAN_data_cmp->p_Spe_data.Spe_data+88,1);
;;;379                memcpy(Run_Diagram.Frq9,CAN_data_cmp->p_Spe_data.Spe_data+89,4);
;;;380                memcpy(Run_Diagram.channel9,CAN_data_cmp->p_Spe_data.Spe_data+93,1);
;;;381    
;;;382                memcpy(Run_Diagram.Start_Time10,CAN_data_cmp->p_Spe_data.Spe_data+94,2);
;;;383                memcpy(Run_Diagram.End_Timep10,CAN_data_cmp->p_Spe_data.Spe_data+96,2);
;;;384                memcpy(Run_Diagram.Power10,CAN_data_cmp->p_Spe_data.Spe_data+98,1);
;;;385                memcpy(Run_Diagram.Frq10,CAN_data_cmp->p_Spe_data.Spe_data+99,4);
;;;386                memcpy(Run_Diagram.channel10,CAN_data_cmp->p_Spe_data.Spe_data+103,1);
;;;387    
;;;388                return 1;
;;;389            }
;;;390            else
;;;391            {
;;;392                return 3;
;;;393            }
;;;394        }
;;;395    
;;;396        return 4;//没有功能码
;;;397    }
0000f6  e8bd81fc          POP      {r2-r8,pc}
0000fa  e7ff              B        |L5.252|
                  |L5.252|
0000fc  78a0              LDRB     r0,[r4,#2]            ;130
0000fe  2802              CMP      r0,#2                 ;130
000100  d110              BNE      |L5.292|
000102  78e0              LDRB     r0,[r4,#3]            ;130
000104  2801              CMP      r0,#1                 ;130
000106  d10d              BNE      |L5.292|
000108  7920              LDRB     r0,[r4,#4]            ;132
00010a  49c4              LDR      r1,|L5.1052|
00010c  7809              LDRB     r1,[r1,#0]            ;132  ; CAN_ID
00010e  4288              CMP      r0,r1                 ;132
000110  d106              BNE      |L5.288|
000112  49c3              LDR      r1,|L5.1056|
000114  f8b40005          LDRH     r0,[r4,#5]            ;134
000118  f8a10001          STRH     r0,[r1,#1]            ;134
00011c  2001              MOVS     r0,#1                 ;135
00011e  e7ea              B        |L5.246|
                  |L5.288|
000120  2003              MOVS     r0,#3                 ;139
000122  e7e8              B        |L5.246|
                  |L5.292|
000124  78a0              LDRB     r0,[r4,#2]            ;142
000126  2803              CMP      r0,#3                 ;142
                  |L5.296|
000128  d17e              BNE      |L5.552|
00012a  78e0              LDRB     r0,[r4,#3]            ;142
00012c  2801              CMP      r0,#1                 ;142
00012e  d1fb              BNE      |L5.296|
000130  7920              LDRB     r0,[r4,#4]            ;144
000132  49ba              LDR      r1,|L5.1052|
000134  7809              LDRB     r1,[r1,#0]            ;144  ; CAN_ID
000136  4288              CMP      r0,r1                 ;144
000138  d177              BNE      |L5.554|
00013a  49ba              LDR      r1,|L5.1060|
00013c  7960              LDRB     r0,[r4,#5]            ;146
00013e  7048              STRB     r0,[r1,#1]            ;146
000140  88e2              LDRH     r2,[r4,#6]            ;147
000142  804a              STRH     r2,[r1,#2]            ;147
000144  7a20              LDRB     r0,[r4,#8]            ;147
000146  7108              STRB     r0,[r1,#4]            ;147
000148  1d49              ADDS     r1,r1,#5              ;148
00014a  f8d42009          LDR      r2,[r4,#9]            ;148
00014e  600a              STR      r2,[r1,#0]            ;148  ; Trans_open
000150  f8d4200d          LDR      r2,[r4,#0xd]          ;148
000154  604a              STR      r2,[r1,#4]            ;148  ; Trans_open
000156  f8d40011          LDR      r0,[r4,#0x11]         ;148
00015a  6088              STR      r0,[r1,#8]            ;148  ; Trans_open
00015c  1f49              SUBS     r1,r1,#5              ;149
00015e  f8b42015          LDRH     r2,[r4,#0x15]         ;149
000162  f8a12011          STRH     r2,[r1,#0x11]         ;149
000166  7de0              LDRB     r0,[r4,#0x17]         ;149
000168  74c8              STRB     r0,[r1,#0x13]         ;149
00016a  69a2              LDR      r2,[r4,#0x18]         ;150
00016c  614a              STR      r2,[r1,#0x14]         ;150  ; Trans_open
00016e  8ba0              LDRH     r0,[r4,#0x1c]         ;150
000170  8308              STRH     r0,[r1,#0x18]         ;150
000172  2046              MOVS     r0,#0x46              ;152
000174  49ac              LDR      r1,|L5.1064|
000176  70c8              STRB     r0,[r1,#3]            ;152
000178  48aa              LDR      r0,|L5.1060|
00017a  7840              LDRB     r0,[r0,#1]            ;154  ; Trans_open
00017c  2801              CMP      r0,#1                 ;154
00017e  d004              BEQ      |L5.394|
000180  2802              CMP      r0,#2                 ;154
000182  d006              BEQ      |L5.402|
000184  2803              CMP      r0,#3                 ;154
000186  d10c              BNE      |L5.418|
000188  e007              B        |L5.410|
                  |L5.394|
00018a  2031              MOVS     r0,#0x31              ;156
00018c  49a6              LDR      r1,|L5.1064|
00018e  7088              STRB     r0,[r1,#2]            ;156
000190  e008              B        |L5.420|
                  |L5.402|
000192  2032              MOVS     r0,#0x32              ;157
000194  49a4              LDR      r1,|L5.1064|
000196  7088              STRB     r0,[r1,#2]            ;157
000198  e004              B        |L5.420|
                  |L5.410|
00019a  2033              MOVS     r0,#0x33              ;158
00019c  49a2              LDR      r1,|L5.1064|
00019e  7088              STRB     r0,[r1,#2]            ;158
0001a0  e000              B        |L5.420|
                  |L5.418|
0001a2  bf00              NOP                            ;159
                  |L5.420|
0001a4  bf00              NOP                            ;156
0001a6  2030              MOVS     r0,#0x30              ;162
0001a8  499f              LDR      r1,|L5.1064|
0001aa  7148              STRB     r0,[r1,#5]            ;162
0001ac  2131              MOVS     r1,#0x31              ;163
0001ae  489e              LDR      r0,|L5.1064|
0001b0  7181              STRB     r1,[r0,#6]            ;163
0001b2  2100              MOVS     r1,#0                 ;164
0001b4  71c1              STRB     r1,[r0,#7]            ;164
0001b6  489b              LDR      r0,|L5.1060|
0001b8  7940              LDRB     r0,[r0,#5]            ;166  ; Trans_open
0001ba  2130              MOVS     r1,#0x30              ;166
0001bc  eb011010          ADD      r0,r1,r0,LSR #4       ;166
0001c0  4999              LDR      r1,|L5.1064|
0001c2  7208              STRB     r0,[r1,#8]            ;166
0001c4  4897              LDR      r0,|L5.1060|
0001c6  7940              LDRB     r0,[r0,#5]            ;167  ; Trans_open
0001c8  f000000f          AND      r0,r0,#0xf            ;167
0001cc  3030              ADDS     r0,r0,#0x30           ;167
0001ce  7248              STRB     r0,[r1,#9]            ;167
0001d0  4894              LDR      r0,|L5.1060|
0001d2  7980              LDRB     r0,[r0,#6]            ;168
0001d4  2130              MOVS     r1,#0x30              ;168
0001d6  eb011110          ADD      r1,r1,r0,LSR #4       ;168
0001da  4893              LDR      r0,|L5.1064|
0001dc  7281              STRB     r1,[r0,#0xa]          ;168
0001de  4891              LDR      r0,|L5.1060|
0001e0  7980              LDRB     r0,[r0,#6]            ;169
0001e2  f000000f          AND      r0,r0,#0xf            ;169
0001e6  3030              ADDS     r0,r0,#0x30           ;169
0001e8  498f              LDR      r1,|L5.1064|
0001ea  72c8              STRB     r0,[r1,#0xb]          ;169
0001ec  488d              LDR      r0,|L5.1060|
0001ee  79c0              LDRB     r0,[r0,#7]            ;170
0001f0  2130              MOVS     r1,#0x30              ;170
0001f2  eb011110          ADD      r1,r1,r0,LSR #4       ;170
0001f6  488c              LDR      r0,|L5.1064|
0001f8  7301              STRB     r1,[r0,#0xc]          ;170
0001fa  488a              LDR      r0,|L5.1060|
0001fc  79c0              LDRB     r0,[r0,#7]            ;171
0001fe  f000000f          AND      r0,r0,#0xf            ;171
000202  3030              ADDS     r0,r0,#0x30           ;171
000204  4988              LDR      r1,|L5.1064|
000206  7348              STRB     r0,[r1,#0xd]          ;171
000208  4886              LDR      r0,|L5.1060|
00020a  7a00              LDRB     r0,[r0,#8]            ;172
00020c  2130              MOVS     r1,#0x30              ;172
00020e  eb011110          ADD      r1,r1,r0,LSR #4       ;172
000212  4885              LDR      r0,|L5.1064|
000214  7381              STRB     r1,[r0,#0xe]          ;172
000216  4883              LDR      r0,|L5.1060|
000218  7a00              LDRB     r0,[r0,#8]            ;173
00021a  f000000f          AND      r0,r0,#0xf            ;173
00021e  3030              ADDS     r0,r0,#0x30           ;173
000220  4981              LDR      r1,|L5.1064|
000222  73c8              STRB     r0,[r1,#0xf]          ;173
000224  2100              MOVS     r1,#0                 ;174
000226  e001              B        |L5.556|
                  |L5.552|
000228  e095              B        |L5.854|
                  |L5.554|
00022a  e092              B        |L5.850|
                  |L5.556|
00022c  487e              LDR      r0,|L5.1064|
00022e  7401              STRB     r1,[r0,#0x10]         ;174
000230  487c              LDR      r0,|L5.1060|
000232  7a40              LDRB     r0,[r0,#9]            ;176
000234  2130              MOVS     r1,#0x30              ;176
000236  eb011010          ADD      r0,r1,r0,LSR #4       ;176
00023a  497b              LDR      r1,|L5.1064|
00023c  7488              STRB     r0,[r1,#0x12]         ;176
00023e  4879              LDR      r0,|L5.1060|
000240  7a40              LDRB     r0,[r0,#9]            ;177
000242  f000000f          AND      r0,r0,#0xf            ;177
000246  3030              ADDS     r0,r0,#0x30           ;177
000248  74c8              STRB     r0,[r1,#0x13]         ;177
00024a  4876              LDR      r0,|L5.1060|
00024c  7a80              LDRB     r0,[r0,#0xa]          ;178
00024e  2130              MOVS     r1,#0x30              ;178
000250  eb011110          ADD      r1,r1,r0,LSR #4       ;178
000254  4874              LDR      r0,|L5.1064|
000256  7501              STRB     r1,[r0,#0x14]         ;178
000258  4872              LDR      r0,|L5.1060|
00025a  7a80              LDRB     r0,[r0,#0xa]          ;179
00025c  f000000f          AND      r0,r0,#0xf            ;179
000260  3030              ADDS     r0,r0,#0x30           ;179
000262  4971              LDR      r1,|L5.1064|
000264  7548              STRB     r0,[r1,#0x15]         ;179
000266  486f              LDR      r0,|L5.1060|
000268  7ac0              LDRB     r0,[r0,#0xb]          ;180
00026a  2130              MOVS     r1,#0x30              ;180
00026c  eb011110          ADD      r1,r1,r0,LSR #4       ;180
000270  486d              LDR      r0,|L5.1064|
000272  7581              STRB     r1,[r0,#0x16]         ;180
000274  486b              LDR      r0,|L5.1060|
000276  7ac0              LDRB     r0,[r0,#0xb]          ;181
000278  f000000f          AND      r0,r0,#0xf            ;181
00027c  3030              ADDS     r0,r0,#0x30           ;181
00027e  496a              LDR      r1,|L5.1064|
000280  75c8              STRB     r0,[r1,#0x17]         ;181
000282  4868              LDR      r0,|L5.1060|
000284  7b00              LDRB     r0,[r0,#0xc]          ;182
000286  2130              MOVS     r1,#0x30              ;182
000288  eb011110          ADD      r1,r1,r0,LSR #4       ;182
00028c  4866              LDR      r0,|L5.1064|
00028e  7601              STRB     r1,[r0,#0x18]         ;182
000290  4864              LDR      r0,|L5.1060|
000292  7b00              LDRB     r0,[r0,#0xc]          ;183
000294  f000000f          AND      r0,r0,#0xf            ;183
000298  3030              ADDS     r0,r0,#0x30           ;183
00029a  4963              LDR      r1,|L5.1064|
00029c  7648              STRB     r0,[r1,#0x19]         ;183
00029e  2100              MOVS     r1,#0                 ;184
0002a0  4861              LDR      r0,|L5.1064|
0002a2  7681              STRB     r1,[r0,#0x1a]         ;184
0002a4  485f              LDR      r0,|L5.1060|
0002a6  7b40              LDRB     r0,[r0,#0xd]          ;186
0002a8  2130              MOVS     r1,#0x30              ;186
0002aa  eb011010          ADD      r0,r1,r0,LSR #4       ;186
0002ae  495e              LDR      r1,|L5.1064|
0002b0  7708              STRB     r0,[r1,#0x1c]         ;186
0002b2  485c              LDR      r0,|L5.1060|
0002b4  7b40              LDRB     r0,[r0,#0xd]          ;187
0002b6  f000000f          AND      r0,r0,#0xf            ;187
0002ba  3030              ADDS     r0,r0,#0x30           ;187
0002bc  7748              STRB     r0,[r1,#0x1d]         ;187
0002be  4859              LDR      r0,|L5.1060|
0002c0  7b80              LDRB     r0,[r0,#0xe]          ;188
0002c2  2130              MOVS     r1,#0x30              ;188
0002c4  eb011110          ADD      r1,r1,r0,LSR #4       ;188
0002c8  4857              LDR      r0,|L5.1064|
0002ca  7781              STRB     r1,[r0,#0x1e]         ;188
0002cc  4855              LDR      r0,|L5.1060|
0002ce  7b80              LDRB     r0,[r0,#0xe]          ;189
0002d0  f000000f          AND      r0,r0,#0xf            ;189
0002d4  3030              ADDS     r0,r0,#0x30           ;189
0002d6  4954              LDR      r1,|L5.1064|
0002d8  77c8              STRB     r0,[r1,#0x1f]         ;189
0002da  4852              LDR      r0,|L5.1060|
0002dc  7bc0              LDRB     r0,[r0,#0xf]          ;190
0002de  2130              MOVS     r1,#0x30              ;190
0002e0  eb011110          ADD      r1,r1,r0,LSR #4       ;190
0002e4  4850              LDR      r0,|L5.1064|
0002e6  f8801020          STRB     r1,[r0,#0x20]         ;190
0002ea  484e              LDR      r0,|L5.1060|
0002ec  7bc0              LDRB     r0,[r0,#0xf]          ;191
0002ee  f000000f          AND      r0,r0,#0xf            ;191
0002f2  3030              ADDS     r0,r0,#0x30           ;191
0002f4  494c              LDR      r1,|L5.1064|
0002f6  f8810021          STRB     r0,[r1,#0x21]         ;191
0002fa  484a              LDR      r0,|L5.1060|
0002fc  7c00              LDRB     r0,[r0,#0x10]         ;192
0002fe  2130              MOVS     r1,#0x30              ;192
000300  eb011110          ADD      r1,r1,r0,LSR #4       ;192
000304  4848              LDR      r0,|L5.1064|
000306  f8801022          STRB     r1,[r0,#0x22]         ;192
00030a  4846              LDR      r0,|L5.1060|
00030c  7c00              LDRB     r0,[r0,#0x10]         ;193
00030e  f000000f          AND      r0,r0,#0xf            ;193
000312  3030              ADDS     r0,r0,#0x30           ;193
000314  4944              LDR      r1,|L5.1064|
000316  f8810023          STRB     r0,[r1,#0x23]         ;193
00031a  2100              MOVS     r1,#0                 ;194
00031c  4842              LDR      r0,|L5.1064|
00031e  f8801024          STRB     r1,[r0,#0x24]         ;194
000322  4840              LDR      r0,|L5.1060|
000324  7c40              LDRB     r0,[r0,#0x11]         ;196  ; Trans_open
000326  b120              CBZ      r0,|L5.818|
000328  2801              CMP      r0,#1                 ;196
00032a  d006              BEQ      |L5.826|
00032c  2802              CMP      r0,#2                 ;196
00032e  d10c              BNE      |L5.842|
000330  e007              B        |L5.834|
                  |L5.818|
000332  2033              MOVS     r0,#0x33              ;198
000334  493c              LDR      r1,|L5.1064|
000336  7108              STRB     r0,[r1,#4]            ;198
000338  e008              B        |L5.844|
                  |L5.826|
00033a  2032              MOVS     r0,#0x32              ;199
00033c  493a              LDR      r1,|L5.1064|
00033e  7108              STRB     r0,[r1,#4]            ;199
000340  e004              B        |L5.844|
                  |L5.834|
000342  2031              MOVS     r0,#0x31              ;200
000344  4938              LDR      r1,|L5.1064|
000346  7108              STRB     r0,[r1,#4]            ;200
000348  e000              B        |L5.844|
                  |L5.842|
00034a  bf00              NOP                            ;201
                  |L5.844|
00034c  bf00              NOP                            ;198
00034e  2001              MOVS     r0,#1                 ;203
000350  e6d1              B        |L5.246|
                  |L5.850|
000352  2003              MOVS     r0,#3                 ;207
000354  e6cf              B        |L5.246|
                  |L5.854|
000356  78a0              LDRB     r0,[r4,#2]            ;210
000358  2804              CMP      r0,#4                 ;210
00035a  d112              BNE      |L5.898|
00035c  78e0              LDRB     r0,[r4,#3]            ;210
00035e  2801              CMP      r0,#1                 ;210
000360  d10f              BNE      |L5.898|
000362  7920              LDRB     r0,[r4,#4]            ;212
000364  492d              LDR      r1,|L5.1052|
000366  7809              LDRB     r1,[r1,#0]            ;212  ; CAN_ID
000368  4288              CMP      r0,r1                 ;212
00036a  d108              BNE      |L5.894|
00036c  492f              LDR      r1,|L5.1068|
00036e  f8d42005          LDR      r2,[r4,#5]            ;214
000372  600a              STR      r2,[r1,#0]            ;214  ; Trans_stop
000374  f8b40009          LDRH     r0,[r4,#9]            ;214
000378  8088              STRH     r0,[r1,#4]            ;214
00037a  2001              MOVS     r0,#1                 ;215
00037c  e6bb              B        |L5.246|
                  |L5.894|
00037e  2003              MOVS     r0,#3                 ;219
000380  e6b9              B        |L5.246|
                  |L5.898|
000382  78a0              LDRB     r0,[r4,#2]            ;222
000384  2805              CMP      r0,#5                 ;222
000386  d117              BNE      |L5.952|
000388  78e0              LDRB     r0,[r4,#3]            ;222
00038a  2801              CMP      r0,#1                 ;222
00038c  d114              BNE      |L5.952|
00038e  7920              LDRB     r0,[r4,#4]            ;224
000390  4922              LDR      r1,|L5.1052|
000392  7809              LDRB     r1,[r1,#0]            ;224  ; CAN_ID
000394  4288              CMP      r0,r1                 ;224
000396  d10d              BNE      |L5.948|
000398  4925              LDR      r1,|L5.1072|
00039a  f8b40005          LDRH     r0,[r4,#5]            ;226
00039e  f8a10001          STRH     r0,[r1,#1]            ;226
0003a2  1cc9              ADDS     r1,r1,#3              ;227
0003a4  f8d42007          LDR      r2,[r4,#7]            ;227
0003a8  600a              STR      r2,[r1,#0]            ;227  ; Disalarm
0003aa  f8b4000b          LDRH     r0,[r4,#0xb]          ;227
0003ae  8088              STRH     r0,[r1,#4]            ;227
0003b0  2001              MOVS     r0,#1                 ;228
0003b2  e6a0              B        |L5.246|
                  |L5.948|
0003b4  2003              MOVS     r0,#3                 ;232
0003b6  e69e              B        |L5.246|
                  |L5.952|
0003b8  78a0              LDRB     r0,[r4,#2]            ;235
0003ba  2806              CMP      r0,#6                 ;235
0003bc  d112              BNE      |L5.996|
0003be  78e0              LDRB     r0,[r4,#3]            ;235
0003c0  2801              CMP      r0,#1                 ;235
0003c2  d10f              BNE      |L5.996|
0003c4  7920              LDRB     r0,[r4,#4]            ;237
0003c6  4915              LDR      r1,|L5.1052|
0003c8  7809              LDRB     r1,[r1,#0]            ;237  ; CAN_ID
0003ca  4288              CMP      r0,r1                 ;237
0003cc  d108              BNE      |L5.992|
0003ce  4919              LDR      r1,|L5.1076|
0003d0  f8d42005          LDR      r2,[r4,#5]            ;239
0003d4  600a              STR      r2,[r1,#0]            ;239  ; Alarm_history
0003d6  f8b40009          LDRH     r0,[r4,#9]            ;239
0003da  8088              STRH     r0,[r1,#4]            ;239
0003dc  2001              MOVS     r0,#1                 ;240
0003de  e68a              B        |L5.246|
                  |L5.992|
0003e0  2003              MOVS     r0,#3                 ;244
0003e2  e688              B        |L5.246|
                  |L5.996|
0003e4  78a0              LDRB     r0,[r4,#2]            ;247
0003e6  2807              CMP      r0,#7                 ;247
0003e8  d12d              BNE      |L5.1094|
0003ea  78e0              LDRB     r0,[r4,#3]            ;247
0003ec  2801              CMP      r0,#1                 ;247
0003ee  d12a              BNE      |L5.1094|
0003f0  7920              LDRB     r0,[r4,#4]            ;249
0003f2  490a              LDR      r1,|L5.1052|
0003f4  7809              LDRB     r1,[r1,#0]            ;249  ; CAN_ID
0003f6  4288              CMP      r0,r1                 ;249
0003f8  d123              BNE      |L5.1090|
0003fa  490f              LDR      r1,|L5.1080|
0003fc  7960              LDRB     r0,[r4,#5]            ;251
0003fe  7048              STRB     r0,[r1,#1]            ;251
000400  f8d42006          LDR      r2,[r4,#6]            ;252
000404  f8c12002          STR      r2,[r1,#2]            ;252  ; Power_on
000408  8960              LDRH     r0,[r4,#0xa]          ;252
00040a  e017              B        |L5.1084|
                  |L5.1036|
                          DCD      Alarm_threshold
                  |L5.1040|
000410  0d0a00            DCB      "\r\n",0
000413  00                DCB      0
                  |L5.1044|
000414  25662020          DCB      "%f  %f",0
000418  256600  
00041b  00                DCB      0
                  |L5.1052|
                          DCD      CAN_ID
                  |L5.1056|
                          DCD      Working_paramet
                  |L5.1060|
                          DCD      Trans_open
                  |L5.1064|
                          DCD      MT2000_Tx
                  |L5.1068|
                          DCD      Trans_stop+0x1
                  |L5.1072|
                          DCD      Disalarm
                  |L5.1076|
                          DCD      Alarm_history+0x1
                  |L5.1080|
                          DCD      Power_on
                  |L5.1084|
00043c  80c8              STRH     r0,[r1,#6]            ;252
00043e  2001              MOVS     r0,#1                 ;253
000440  e659              B        |L5.246|
                  |L5.1090|
000442  2003              MOVS     r0,#3                 ;257
000444  e657              B        |L5.246|
                  |L5.1094|
000446  78a0              LDRB     r0,[r4,#2]            ;260
000448  2808              CMP      r0,#8                 ;260
00044a  d10e              BNE      |L5.1130|
00044c  78e0              LDRB     r0,[r4,#3]            ;260
00044e  2801              CMP      r0,#1                 ;260
000450  d10b              BNE      |L5.1130|
000452  7920              LDRB     r0,[r4,#4]            ;262
000454  498e              LDR      r1,|L5.1680|
000456  7809              LDRB     r1,[r1,#0]            ;262  ; CAN_ID
000458  4288              CMP      r0,r1                 ;262
00045a  d104              BNE      |L5.1126|
00045c  498d              LDR      r1,|L5.1684|
00045e  7960              LDRB     r0,[r4,#5]            ;264
000460  7048              STRB     r0,[r1,#1]            ;264
000462  2001              MOVS     r0,#1                 ;265
000464  e647              B        |L5.246|
                  |L5.1126|
000466  2003              MOVS     r0,#3                 ;269
000468  e645              B        |L5.246|
                  |L5.1130|
00046a  78a0              LDRB     r0,[r4,#2]            ;272
00046c  2809              CMP      r0,#9                 ;272
00046e  d115              BNE      |L5.1180|
000470  78e0              LDRB     r0,[r4,#3]            ;272
000472  2801              CMP      r0,#1                 ;272
000474  d112              BNE      |L5.1180|
000476  7920              LDRB     r0,[r4,#4]            ;274
000478  4985              LDR      r1,|L5.1680|
00047a  7809              LDRB     r1,[r1,#0]            ;274  ; CAN_ID
00047c  4288              CMP      r0,r1                 ;274
00047e  d10b              BNE      |L5.1176|
000480  4985              LDR      r1,|L5.1688|
000482  7960              LDRB     r0,[r4,#5]            ;276
000484  7048              STRB     r0,[r1,#1]            ;276
000486  1c89              ADDS     r1,r1,#2              ;277
000488  f8d42006          LDR      r2,[r4,#6]            ;277
00048c  600a              STR      r2,[r1,#0]            ;277  ; Scan_Frq
00048e  f8d4000a          LDR      r0,[r4,#0xa]          ;277
000492  6048              STR      r0,[r1,#4]            ;277  ; Scan_Frq
000494  2001              MOVS     r0,#1                 ;278
000496  e62e              B        |L5.246|
                  |L5.1176|
000498  2003              MOVS     r0,#3                 ;282
00049a  e62c              B        |L5.246|
                  |L5.1180|
00049c  78a0              LDRB     r0,[r4,#2]            ;285
00049e  280a              CMP      r0,#0xa               ;285
0004a0  d10e              BNE      |L5.1216|
0004a2  78e0              LDRB     r0,[r4,#3]            ;285
0004a4  2801              CMP      r0,#1                 ;285
0004a6  d10b              BNE      |L5.1216|
0004a8  7920              LDRB     r0,[r4,#4]            ;287
0004aa  4979              LDR      r1,|L5.1680|
0004ac  7809              LDRB     r1,[r1,#0]            ;287  ; CAN_ID
0004ae  4288              CMP      r0,r1                 ;287
0004b0  d104              BNE      |L5.1212|
0004b2  497a              LDR      r1,|L5.1692|
0004b4  7960              LDRB     r0,[r4,#5]            ;289
0004b6  7048              STRB     r0,[r1,#1]            ;289
0004b8  2001              MOVS     r0,#1                 ;290
0004ba  e61c              B        |L5.246|
                  |L5.1212|
0004bc  2003              MOVS     r0,#3                 ;294
0004be  e61a              B        |L5.246|
                  |L5.1216|
0004c0  78a0              LDRB     r0,[r4,#2]            ;297
0004c2  280b              CMP      r0,#0xb               ;297
0004c4  d110              BNE      |L5.1256|
0004c6  78e0              LDRB     r0,[r4,#3]            ;297
0004c8  2801              CMP      r0,#1                 ;297
0004ca  d10d              BNE      |L5.1256|
0004cc  7920              LDRB     r0,[r4,#4]            ;299
0004ce  4970              LDR      r1,|L5.1680|
0004d0  7809              LDRB     r1,[r1,#0]            ;299  ; CAN_ID
0004d2  4288              CMP      r0,r1                 ;299
0004d4  d106              BNE      |L5.1252|
0004d6  4972              LDR      r1,|L5.1696|
0004d8  f8b40005          LDRH     r0,[r4,#5]            ;301
0004dc  f8a10001          STRH     r0,[r1,#1]            ;301
0004e0  2001              MOVS     r0,#1                 ;302
0004e2  e608              B        |L5.246|
                  |L5.1252|
0004e4  2003              MOVS     r0,#3                 ;306
0004e6  e606              B        |L5.246|
                  |L5.1256|
0004e8  78a0              LDRB     r0,[r4,#2]            ;309
0004ea  280c              CMP      r0,#0xc               ;309
0004ec  d110              BNE      |L5.1296|
0004ee  78e0              LDRB     r0,[r4,#3]            ;309
0004f0  2801              CMP      r0,#1                 ;309
0004f2  d10d              BNE      |L5.1296|
0004f4  7920              LDRB     r0,[r4,#4]            ;311
0004f6  4966              LDR      r1,|L5.1680|
0004f8  7809              LDRB     r1,[r1,#0]            ;311  ; CAN_ID
0004fa  4288              CMP      r0,r1                 ;311
0004fc  d106              BNE      |L5.1292|
0004fe  4969              LDR      r1,|L5.1700|
000500  f8b40005          LDRH     r0,[r4,#5]            ;313
000504  f8a10001          STRH     r0,[r1,#1]            ;313
000508  2001              MOVS     r0,#1                 ;314
00050a  e5f4              B        |L5.246|
                  |L5.1292|
00050c  2003              MOVS     r0,#3                 ;318
00050e  e5f2              B        |L5.246|
                  |L5.1296|
000510  78a0              LDRB     r0,[r4,#2]            ;321
000512  280d              CMP      r0,#0xd               ;321
                  |L5.1300|
000514  d17e              BNE      |L5.1556|
000516  78e0              LDRB     r0,[r4,#3]            ;321
000518  2801              CMP      r0,#1                 ;321
00051a  d1fb              BNE      |L5.1300|
00051c  7920              LDRB     r0,[r4,#4]            ;323
00051e  495c              LDR      r1,|L5.1680|
000520  7809              LDRB     r1,[r1,#0]            ;323  ; CAN_ID
000522  4288              CMP      r0,r1                 ;323
000524  d177              BNE      |L5.1558|
000526  4960              LDR      r1,|L5.1704|
000528  7960              LDRB     r0,[r4,#5]            ;325
00052a  7048              STRB     r0,[r1,#1]            ;325
00052c  88e0              LDRH     r0,[r4,#6]            ;326
00052e  8048              STRH     r0,[r1,#2]            ;326
000530  8920              LDRH     r0,[r4,#8]            ;328
000532  8088              STRH     r0,[r1,#4]            ;328
000534  8960              LDRH     r0,[r4,#0xa]          ;329
000536  80c8              STRH     r0,[r1,#6]            ;329
000538  7b20              LDRB     r0,[r4,#0xc]          ;330
00053a  7208              STRB     r0,[r1,#8]            ;330
00053c  f8d4000d          LDR      r0,[r4,#0xd]          ;331
000540  f8c10009          STR      r0,[r1,#9]            ;331  ; Run_Diagram
000544  7c60              LDRB     r0,[r4,#0x11]         ;332
000546  7348              STRB     r0,[r1,#0xd]          ;332
000548  8a60              LDRH     r0,[r4,#0x12]         ;334
00054a  81c8              STRH     r0,[r1,#0xe]          ;334
00054c  8aa0              LDRH     r0,[r4,#0x14]         ;335
00054e  8208              STRH     r0,[r1,#0x10]         ;335
000550  7da0              LDRB     r0,[r4,#0x16]         ;336
000552  7488              STRB     r0,[r1,#0x12]         ;336
000554  f8d40017          LDR      r0,[r4,#0x17]         ;337
000558  f8c10013          STR      r0,[r1,#0x13]         ;337  ; Run_Diagram
00055c  7ee0              LDRB     r0,[r4,#0x1b]         ;338
00055e  75c8              STRB     r0,[r1,#0x17]         ;338
000560  8ba0              LDRH     r0,[r4,#0x1c]         ;340
000562  8308              STRH     r0,[r1,#0x18]         ;340
000564  8be0              LDRH     r0,[r4,#0x1e]         ;341
000566  8348              STRH     r0,[r1,#0x1a]         ;341
000568  2020              MOVS     r0,#0x20              ;342
00056a  5d00              LDRB     r0,[r0,r4]            ;342
00056c  7708              STRB     r0,[r1,#0x1c]         ;342
00056e  f8d40021          LDR      r0,[r4,#0x21]         ;343
000572  f8c1001d          STR      r0,[r1,#0x1d]         ;343  ; Run_Diagram
000576  f8940025          LDRB     r0,[r4,#0x25]         ;344
00057a  f8810021          STRB     r0,[r1,#0x21]         ;344
00057e  8ce0              LDRH     r0,[r4,#0x26]         ;346
000580  8448              STRH     r0,[r1,#0x22]         ;346
000582  8d20              LDRH     r0,[r4,#0x28]         ;347
000584  8488              STRH     r0,[r1,#0x24]         ;347
000586  f894002a          LDRB     r0,[r4,#0x2a]         ;348
00058a  f8810026          STRB     r0,[r1,#0x26]         ;348
00058e  f8d4002b          LDR      r0,[r4,#0x2b]         ;349
000592  f8c10027          STR      r0,[r1,#0x27]         ;349  ; Run_Diagram
000596  f894002f          LDRB     r0,[r4,#0x2f]         ;350
00059a  f881002b          STRB     r0,[r1,#0x2b]         ;350
00059e  8e20              LDRH     r0,[r4,#0x30]         ;352
0005a0  8588              STRH     r0,[r1,#0x2c]         ;352
0005a2  8e60              LDRH     r0,[r4,#0x32]         ;353
0005a4  85c8              STRH     r0,[r1,#0x2e]         ;353
0005a6  f8940034          LDRB     r0,[r4,#0x34]         ;354
0005aa  f8810030          STRB     r0,[r1,#0x30]         ;354
0005ae  f8d40035          LDR      r0,[r4,#0x35]         ;355
0005b2  f8c10031          STR      r0,[r1,#0x31]         ;355  ; Run_Diagram
0005b6  f8940039          LDRB     r0,[r4,#0x39]         ;356
0005ba  f8810035          STRB     r0,[r1,#0x35]         ;356
0005be  8f60              LDRH     r0,[r4,#0x3a]         ;358
0005c0  86c8              STRH     r0,[r1,#0x36]         ;358
0005c2  8fa0              LDRH     r0,[r4,#0x3c]         ;359
0005c4  8708              STRH     r0,[r1,#0x38]         ;359
0005c6  f894003e          LDRB     r0,[r4,#0x3e]         ;360
0005ca  f881003a          STRB     r0,[r1,#0x3a]         ;360
0005ce  f8d4003f          LDR      r0,[r4,#0x3f]         ;361
0005d2  f8c1003b          STR      r0,[r1,#0x3b]         ;361  ; Run_Diagram
0005d6  f8940043          LDRB     r0,[r4,#0x43]         ;362
0005da  f881003f          STRB     r0,[r1,#0x3f]         ;362
0005de  f8b40044          LDRH     r0,[r4,#0x44]         ;364
0005e2  f8a10040          STRH     r0,[r1,#0x40]         ;364
0005e6  f8b40046          LDRH     r0,[r4,#0x46]         ;365
0005ea  f8a10042          STRH     r0,[r1,#0x42]         ;365
0005ee  f8940048          LDRB     r0,[r4,#0x48]         ;366
0005f2  f8810044          STRB     r0,[r1,#0x44]         ;366
0005f6  f8d40049          LDR      r0,[r4,#0x49]         ;367
0005fa  f8c10045          STR      r0,[r1,#0x45]         ;367  ; Run_Diagram
0005fe  f894004d          LDRB     r0,[r4,#0x4d]         ;368
000602  f8810049          STRB     r0,[r1,#0x49]         ;368
000606  f8b4004e          LDRH     r0,[r4,#0x4e]         ;370
00060a  f8a1004a          STRH     r0,[r1,#0x4a]         ;370
00060e  f8b40050          LDRH     r0,[r4,#0x50]         ;371
000612  e001              B        |L5.1560|
                  |L5.1556|
000614  e03a              B        |L5.1676|
                  |L5.1558|
000616  e037              B        |L5.1672|
                  |L5.1560|
000618  f8a1004c          STRH     r0,[r1,#0x4c]         ;371
00061c  f8940052          LDRB     r0,[r4,#0x52]         ;372
000620  f881004e          STRB     r0,[r1,#0x4e]         ;372
000624  f8d40053          LDR      r0,[r4,#0x53]         ;373
000628  f8c1004f          STR      r0,[r1,#0x4f]         ;373  ; Run_Diagram
00062c  f8940057          LDRB     r0,[r4,#0x57]         ;374
000630  f8810053          STRB     r0,[r1,#0x53]         ;374
000634  f8b40058          LDRH     r0,[r4,#0x58]         ;376
000638  f8a10054          STRH     r0,[r1,#0x54]         ;376
00063c  f8b4005a          LDRH     r0,[r4,#0x5a]         ;377
000640  f8a10056          STRH     r0,[r1,#0x56]         ;377
000644  f894005c          LDRB     r0,[r4,#0x5c]         ;378
000648  f8810058          STRB     r0,[r1,#0x58]         ;378
00064c  f8d4005d          LDR      r0,[r4,#0x5d]         ;379
000650  f8c10059          STR      r0,[r1,#0x59]         ;379  ; Run_Diagram
000654  f8940061          LDRB     r0,[r4,#0x61]         ;380
000658  f881005d          STRB     r0,[r1,#0x5d]         ;380
00065c  f8b40062          LDRH     r0,[r4,#0x62]         ;382
000660  f8a1005e          STRH     r0,[r1,#0x5e]         ;382
000664  f8b40064          LDRH     r0,[r4,#0x64]         ;383
000668  f8a10060          STRH     r0,[r1,#0x60]         ;383
00066c  f8940066          LDRB     r0,[r4,#0x66]         ;384
000670  f8810062          STRB     r0,[r1,#0x62]         ;384
000674  f8d40067          LDR      r0,[r4,#0x67]         ;385
000678  f8c10063          STR      r0,[r1,#0x63]         ;385  ; Run_Diagram
00067c  f894006b          LDRB     r0,[r4,#0x6b]         ;386
000680  f8810067          STRB     r0,[r1,#0x67]         ;386
000684  2001              MOVS     r0,#1                 ;388
000686  e536              B        |L5.246|
                  |L5.1672|
000688  2003              MOVS     r0,#3                 ;392
00068a  e534              B        |L5.246|
                  |L5.1676|
00068c  2004              MOVS     r0,#4                 ;396
00068e  e532              B        |L5.246|
;;;398    
                          ENDP

                  |L5.1680|
                          DCD      CAN_ID
                  |L5.1684|
                          DCD      Power_off
                  |L5.1688|
                          DCD      Scan_Frq
                  |L5.1692|
                          DCD      Sacn_stop
                  |L5.1696|
                          DCD      Add_Power
                  |L5.1700|
                          DCD      Sub_Power
                  |L5.1704|
                          DCD      Run_Diagram

                          AREA ||i.Data_extract||, CODE, READONLY, ALIGN=2

                  Data_extract PROC
;;;430    /* 如果是从CAN接收到的数据，去除数据中间的帧头(4个字节) */
;;;431    static uint8_t Data_extract(pc_data_t *p_PC_datextract,pc_data_t *pp_PC_datextract)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;432    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;433        uint8_t j = 0;
000008  2600              MOVS     r6,#0
;;;434        uint8_t _12number  = 0;
00000a  46b2              MOV      r10,r6
;;;435        uint8_t remainder  = 0;
00000c  46b0              MOV      r8,r6
;;;436        uint8_t len_buf  = 0;
00000e  46b1              MOV      r9,r6
;;;437        while((p_PC_datextract->uart_pc[j++] != 0x05) && (p_PC_datextract->uart_pc[j] != 0x02))
000010  bf00              NOP      
                  |L6.18|
000012  4630              MOV      r0,r6
000014  1c71              ADDS     r1,r6,#1
000016  b2ce              UXTB     r6,r1
000018  5c20              LDRB     r0,[r4,r0]
00001a  2805              CMP      r0,#5
00001c  d002              BEQ      |L6.36|
00001e  5da0              LDRB     r0,[r4,r6]
000020  2802              CMP      r0,#2
000022  d1f6              BNE      |L6.18|
                  |L6.36|
;;;438            ;
;;;439        if(j>250)
000024  2efa              CMP      r6,#0xfa
000026  dd03              BLE      |L6.48|
;;;440        {
;;;441            j = 0;
000028  2600              MOVS     r6,#0
;;;442            return 0;
00002a  2000              MOVS     r0,#0
                  |L6.44|
;;;443        }
;;;444        len_buf = p_PC_datextract->uart_pc[j+2];
;;;445        App_printf("len_buf = %d\r\n",len_buf);
;;;446        App_printf("CEIL_DIV(len_buf+8-12,8)) = %d\r\n",CEIL_DIV(len_buf+8-12,8));
;;;447        p_PC_datextract->len = (CEIL_DIV(len_buf+8-12,8))*4+len_buf+8;
;;;448        App_printf("p_PC_datextract->len = %d\r\n",p_PC_datextract->len);
;;;449        _12number = (p_PC_datextract->len)/12;
;;;450        remainder = (p_PC_datextract->len)%12;//这个数肯定大于等于5,或则或则是0
;;;451        if(_12number == 0)   //接到的数小于12个
;;;452        {
;;;453            memcpy(pp_PC_datextract->uart_pc,p_PC_datextract->uart_pc+j-1,remainder);
;;;454            pp_PC_datextract->len = remainder;
;;;455        }
;;;456        else if(_12number == 1 && remainder == 0)     //接到的数等于12个
;;;457        {
;;;458            memcpy(pp_PC_datextract->uart_pc,p_PC_datextract->uart_pc+j-1,12);
;;;459            pp_PC_datextract->len = 12;
;;;460        }
;;;461        else     //串口接到的数大于12个
;;;462        {
;;;463            int i = 1;
;;;464            memcpy(pp_PC_datextract->uart_pc,p_PC_datextract->uart_pc+j-1,12);
;;;465            for(i = 1; i<_12number; i++)
;;;466            {
;;;467                memcpy(pp_PC_datextract->uart_pc+12+8*(i-1),p_PC_datextract->uart_pc+j-1+12*(i-0)+4,8);
;;;468            }
;;;469            if(remainder != 0)
;;;470            {
;;;471                memcpy(pp_PC_datextract->uart_pc+12+8*(i-1),p_PC_datextract->uart_pc+j-1+12*i+4,remainder-4);
;;;472                pp_PC_datextract->len = 12+8*(i-1)+remainder-4;
;;;473            }
;;;474            else
;;;475            {
;;;476                pp_PC_datextract->len = 12+8*(i-1);
;;;477            }
;;;478        }
;;;479        return 1;
;;;480    }
00002c  e8bd9ff0          POP      {r4-r12,pc}
                  |L6.48|
000030  1cb0              ADDS     r0,r6,#2              ;444
000032  f8149000          LDRB     r9,[r4,r0]            ;444
000036  4649              MOV      r1,r9                 ;445
000038  a045              ADR      r0,|L6.336|
00003a  f7fffffe          BL       App_printf
00003e  f1090703          ADD      r7,r9,#3              ;446
000042  17f8              ASRS     r0,r7,#31             ;446
000044  eb077050          ADD      r0,r7,r0,LSR #29      ;446
000048  10c1              ASRS     r1,r0,#3              ;446
00004a  a045              ADR      r0,|L6.352|
00004c  f7fffffe          BL       App_printf
000050  4638              MOV      r0,r7                 ;447
000052  17c1              ASRS     r1,r0,#31             ;447
000054  eb007151          ADD      r1,r0,r1,LSR #29      ;447
000058  10c9              ASRS     r1,r1,#3              ;447
00005a  eb090181          ADD      r1,r9,r1,LSL #2       ;447
00005e  3108              ADDS     r1,r1,#8              ;447
000060  f8841100          STRB     r1,[r4,#0x100]        ;447
000064  f8941100          LDRB     r1,[r4,#0x100]        ;448
000068  a046              ADR      r0,|L6.388|
00006a  f7fffffe          BL       App_printf
00006e  f8940100          LDRB     r0,[r4,#0x100]        ;449
000072  210c              MOVS     r1,#0xc               ;449
000074  fb90f0f1          SDIV     r0,r0,r1              ;449
000078  f0000aff          AND      r10,r0,#0xff          ;449
00007c  f8940100          LDRB     r0,[r4,#0x100]        ;450
000080  fb90f2f1          SDIV     r2,r0,r1              ;450
000084  fb010012          MLS      r0,r1,r2,r0           ;450
000088  f00008ff          AND      r8,r0,#0xff           ;450
00008c  f1ba0f00          CMP      r10,#0                ;451
000090  d108              BNE      |L6.164|
000092  19a0              ADDS     r0,r4,r6              ;453
000094  1e41              SUBS     r1,r0,#1              ;453
000096  4642              MOV      r2,r8                 ;453
000098  4628              MOV      r0,r5                 ;453
00009a  f7fffffe          BL       __aeabi_memcpy
00009e  f8858100          STRB     r8,[r5,#0x100]        ;454
0000a2  e052              B        |L6.330|
                  |L6.164|
0000a4  f1ba0f01          CMP      r10,#1                ;456
0000a8  d10e              BNE      |L6.200|
0000aa  f1b80f00          CMP      r8,#0                 ;456
0000ae  d10b              BNE      |L6.200|
0000b0  19a0              ADDS     r0,r4,r6              ;458
0000b2  f8501d01          LDR      r1,[r0,#-1]!          ;458
0000b6  6029              STR      r1,[r5,#0]            ;458
0000b8  6841              LDR      r1,[r0,#4]            ;458
0000ba  6069              STR      r1,[r5,#4]            ;458
0000bc  6880              LDR      r0,[r0,#8]            ;458
0000be  60a8              STR      r0,[r5,#8]            ;458
0000c0  200c              MOVS     r0,#0xc               ;459
0000c2  f8850100          STRB     r0,[r5,#0x100]        ;459
0000c6  e040              B        |L6.330|
                  |L6.200|
0000c8  2701              MOVS     r7,#1                 ;463
0000ca  19a0              ADDS     r0,r4,r6              ;464
0000cc  f8501d01          LDR      r1,[r0,#-1]!          ;464
0000d0  6029              STR      r1,[r5,#0]            ;464
0000d2  6841              LDR      r1,[r0,#4]            ;464
0000d4  6069              STR      r1,[r5,#4]            ;464
0000d6  6880              LDR      r0,[r0,#8]            ;464
0000d8  60a8              STR      r0,[r5,#8]            ;464
0000da  bf00              NOP                            ;465
0000dc  e010              B        |L6.256|
                  |L6.222|
0000de  19a0              ADDS     r0,r4,r6              ;467
0000e0  1e40              SUBS     r0,r0,#1              ;467
0000e2  4639              MOV      r1,r7                 ;467
0000e4  220c              MOVS     r2,#0xc               ;467
0000e6  fb020201          MLA      r2,r2,r1,r0           ;467
0000ea  1e78              SUBS     r0,r7,#1              ;467
0000ec  f105010c          ADD      r1,r5,#0xc            ;467
0000f0  2308              MOVS     r3,#8                 ;467
0000f2  fb031000          MLA      r0,r3,r0,r1           ;467
0000f6  6851              LDR      r1,[r2,#4]            ;467
0000f8  6001              STR      r1,[r0,#0]            ;467
0000fa  6891              LDR      r1,[r2,#8]            ;467
0000fc  6041              STR      r1,[r0,#4]            ;467
0000fe  1c7f              ADDS     r7,r7,#1              ;465
                  |L6.256|
000100  4557              CMP      r7,r10                ;465
000102  dbec              BLT      |L6.222|
000104  f1b80f00          CMP      r8,#0                 ;469
000108  d019              BEQ      |L6.318|
00010a  19a3              ADDS     r3,r4,r6              ;471
00010c  1e5b              SUBS     r3,r3,#1              ;471
00010e  f04f0c0c          MOV      r12,#0xc              ;471
000112  fb0c3307          MLA      r3,r12,r7,r3          ;471
000116  1d19              ADDS     r1,r3,#4              ;471
000118  f1a80204          SUB      r2,r8,#4              ;471
00011c  1e7b              SUBS     r3,r7,#1              ;471
00011e  f1050c0c          ADD      r12,r5,#0xc           ;471
000122  f04f0b08          MOV      r11,#8                ;471
000126  fb0bc003          MLA      r0,r11,r3,r12         ;471
00012a  f7fffffe          BL       __aeabi_memcpy
00012e  1e78              SUBS     r0,r7,#1              ;472
000130  00c0              LSLS     r0,r0,#3              ;472
000132  300c              ADDS     r0,r0,#0xc            ;472
000134  4440              ADD      r0,r0,r8              ;472
000136  1f00              SUBS     r0,r0,#4              ;472
000138  f8850100          STRB     r0,[r5,#0x100]        ;472
00013c  e004              B        |L6.328|
                  |L6.318|
00013e  1e78              SUBS     r0,r7,#1              ;476
000140  00c0              LSLS     r0,r0,#3              ;476
000142  300c              ADDS     r0,r0,#0xc            ;476
000144  f8850100          STRB     r0,[r5,#0x100]        ;476
                  |L6.328|
000148  bf00              NOP                            ;478
                  |L6.330|
00014a  2001              MOVS     r0,#1                 ;479
00014c  e76e              B        |L6.44|
;;;481    /**************************************************
                          ENDP

00014e  0000              DCW      0x0000
                  |L6.336|
000150  6c656e5f          DCB      "len_buf = %d\r\n",0
000154  62756620
000158  3d202564
00015c  0d0a00  
00015f  00                DCB      0
                  |L6.352|
000160  4345494c          DCB      "CEIL_DIV(len_buf+8-12,8)) = %d\r\n",0
000164  5f444956
000168  286c656e
00016c  5f627566
000170  2b382d31
000174  322c3829
000178  29203d20
00017c  25640d0a
000180  00      
000181  00                DCB      0
000182  00                DCB      0
000183  00                DCB      0
                  |L6.388|
000184  705f5043          DCB      "p_PC_datextract->len = %d\r\n",0
000188  5f646174
00018c  65787472
000190  6163742d
000194  3e6c656e
000198  203d2025
00019c  640d0a00

                          AREA ||i.Send_PC||, CODE, READONLY, ALIGN=2

                  Send_PC PROC
;;;530    ****************************************************/
;;;531    uint8_t Send_PC(uint8_t *Func_code_buf)
000000  b530              PUSH     {r4,r5,lr}
;;;532    {
000002  b0c3              SUB      sp,sp,#0x10c
000004  4604              MOV      r4,r0
;;;533        Assemble_buffer_t COM_buffer;
;;;534    
;;;535        if(Func_code_buf[0] ==0x01 && Func_code_buf[1] == 0x02)			//发射机报警参数初始化请求应答
000006  7820              LDRB     r0,[r4,#0]
000008  2801              CMP      r0,#1
00000a  d128              BNE      |L7.94|
00000c  7860              LDRB     r0,[r4,#1]
00000e  2802              CMP      r0,#2
000010  d125              BNE      |L7.94|
;;;536        {
;;;537            if(Data_Assemble(Func_code_buf,(uint8_t *)&Alarm_backPC,CAN_ID,sizeof(Alarm_backPC),&COM_buffer) == 1)
000012  a802              ADD      r0,sp,#8
000014  2303              MOVS     r3,#3
000016  9000              STR      r0,[sp,#0]
000018  48f8              LDR      r0,|L7.1020|
00001a  7802              LDRB     r2,[r0,#0]  ; CAN_ID
00001c  49f8              LDR      r1,|L7.1024|
00001e  4620              MOV      r0,r4
000020  f7fffffe          BL       Data_Assemble
000024  2801              CMP      r0,#1
000026  d17d              BNE      |L7.292|
;;;538            {
;;;539                comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
000028  f89d2108          LDRB     r2,[sp,#0x108]
00002c  a902              ADD      r1,sp,#8
00002e  2004              MOVS     r0,#4
000030  f7fffffe          BL       comSendBuf
;;;540                App_printf("COM_buffer: ");
000034  a0f3              ADR      r0,|L7.1028|
000036  f7fffffe          BL       App_printf
;;;541                for(int i=0; i<COM_buffer.Len_buffer; i++)
00003a  2500              MOVS     r5,#0
00003c  e005              B        |L7.74|
                  |L7.62|
;;;542                {
;;;543                    App_printf("%02x ",COM_buffer.Data_buffer[i]);
00003e  a802              ADD      r0,sp,#8
000040  5d41              LDRB     r1,[r0,r5]
000042  a0f4              ADR      r0,|L7.1044|
000044  f7fffffe          BL       App_printf
000048  1c6d              ADDS     r5,r5,#1              ;541
                  |L7.74|
00004a  f89d0108          LDRB     r0,[sp,#0x108]        ;541
00004e  42a8              CMP      r0,r5                 ;541
000050  dcf5              BGT      |L7.62|
;;;544                }
;;;545                App_printf("\r\n");
000052  a0f2              ADR      r0,|L7.1052|
000054  f7fffffe          BL       App_printf
;;;546                return 1;
000058  2001              MOVS     r0,#1
                  |L7.90|
;;;547            }
;;;548        }
;;;549        else if(Func_code_buf[0] ==0x02 && Func_code_buf[1] == 0x02)	//查询
;;;550        {
;;;551    #if	NEW_PROTOCOL_EN
;;;552    	/*----------------兼容旧协议，给旧协议的变量赋值-----------------*/
;;;553    	Work_paraBack.Channel[0] = 0x01;		//0x01通道
;;;554    	Work_paraBack.Channel[1] = 0x01;		//0x01通道
;;;555    	Work_paraBack.Channel[2] = 0x01;		//0x01通道
;;;556    	
;;;557    	switch( MT2000_Rx.mode )
;;;558    	{
;;;559    		case '1': Work_paraBack.Type[0] = 0x01; break;	//固频
;;;560    		case '2': Work_paraBack.Type[0] = 0x02; break;	//双频
;;;561    		case '3': Work_paraBack.Type[0] = 0x03; break;	//三频
;;;562    		default: break;
;;;563    	}
;;;564    	
;;;565    	switch( MT2000_Rx.power )
;;;566    	{
;;;567    		case '1': Work_paraBack.Power_grade[0] = 0x02; break;	//1/4功率
;;;568    		case '2': Work_paraBack.Power_grade[0] = 0x01; break;	//1/2功率
;;;569    		case '3': Work_paraBack.Power_grade[0] = 0x00; break;	//全功率
;;;570    		default:	break;
;;;571    	}
;;;572    	
;;;573    	Work_paraBack.Freq[0] = (MT2000_Rx.fre1[0]-'0')<<4 + (MT2000_Rx.fre1[1]-'0');
;;;574    	Work_paraBack.Freq[0] = (MT2000_Rx.fre1[0]-'0')<<4 + (MT2000_Rx.fre1[1]-'0');
;;;575    	Work_paraBack.Freq[0] = (MT2000_Rx.fre1[0]-'0')<<4 + (MT2000_Rx.fre1[1]-'0');
;;;576    	Work_paraBack.Freq[0] = (MT2000_Rx.fre1[0]-'0')<<4 + (MT2000_Rx.fre1[1]-'0');
;;;577    	
;;;578    	/* 固频时无效 */
;;;579    	Work_paraBack.Freq[0] = (MT2000_Rx.fre2[0]-'0')<<4 + (MT2000_Rx.fre2[1]-'0');
;;;580    	Work_paraBack.Freq[1] = (MT2000_Rx.fre2[2]-'0')<<4 + (MT2000_Rx.fre2[3]-'0');
;;;581    	Work_paraBack.Freq[2] = (MT2000_Rx.fre2[4]-'0')<<4 + (MT2000_Rx.fre2[5]-'0');
;;;582    	Work_paraBack.Freq[3] = (MT2000_Rx.fre2[6]-'0')<<4 + (MT2000_Rx.fre2[7]-'0');
;;;583    	
;;;584    	/* 非三频无效 */
;;;585    	Work_paraBack.Freq[0] = (MT2000_Rx.fre3[0]-'0')<<4 + (MT2000_Rx.fre3[1]-'0');
;;;586    	Work_paraBack.Freq[1] = (MT2000_Rx.fre3[2]-'0')<<4 + (MT2000_Rx.fre3[3]-'0');
;;;587    	Work_paraBack.Freq[2] = (MT2000_Rx.fre3[4]-'0')<<4 + (MT2000_Rx.fre3[5]-'0');
;;;588    	Work_paraBack.Freq[3] = (MT2000_Rx.fre3[6]-'0')<<4 + (MT2000_Rx.fre3[7]-'0');
;;;589    #endif		
;;;590            if(Data_Assemble(Func_code_buf,(uint8_t *)&Work_paraBack,CAN_ID,sizeof(Work_paraBack),&COM_buffer) ==1)
;;;591            {
;;;592                comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;593                App_printf("COM_buffer: ");
;;;594                for(int i=0; i<COM_buffer.Len_buffer; i++)
;;;595                {
;;;596                    App_printf("%02x ",COM_buffer.Data_buffer[i]);
;;;597                }
;;;598                App_printf("\r\n");
;;;599                return 1;
;;;600            }
;;;601        }
;;;602        else if(Func_code_buf[0] ==0x03 && Func_code_buf[1] == 0x02)	//发射
;;;603        {
;;;604            if(Data_Assemble(Func_code_buf,(uint8_t *)&Trans_openBack,CAN_ID,sizeof(Trans_openBack),&COM_buffer)  ==1)
;;;605            {
;;;606                comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;607                App_printf("COM_buffer: ");
;;;608                for(int i=0; i<COM_buffer.Len_buffer; i++)
;;;609                {
;;;610                    App_printf("%02x ",COM_buffer.Data_buffer[i]);
;;;611                }
;;;612                App_printf("\r\n");
;;;613                return 1;
;;;614            }
;;;615        }
;;;616        else if(Func_code_buf[0] ==0x04 && Func_code_buf[1] == 0x02)	//停止
;;;617        {
;;;618            if(Data_Assemble(Func_code_buf,(uint8_t *)&Trans_stopBack,CAN_ID,sizeof(Trans_stopBack),&COM_buffer) ==1)
;;;619            {
;;;620                comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;621                App_printf("COM_buffer: ");
;;;622                for(int i=0; i<COM_buffer.Len_buffer; i++)
;;;623                {
;;;624                    App_printf("%02x ",COM_buffer.Data_buffer[i]);
;;;625                }
;;;626                App_printf("\r\n");
;;;627                return 1;
;;;628            }
;;;629        }
;;;630        else if(Func_code_buf[0] ==0x05 && Func_code_buf[1] == 0x02)	//解除报警
;;;631        {
;;;632            if(Data_Assemble(Func_code_buf,(uint8_t *)&DisalarmBack,CAN_ID,sizeof(DisalarmBack),&COM_buffer) ==1)
;;;633            {
;;;634                comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;635                App_printf("COM_buffer: ");
;;;636                for(int i=0; i<COM_buffer.Len_buffer; i++)
;;;637                {
;;;638                    App_printf("%02x ",COM_buffer.Data_buffer[i]);
;;;639                }
;;;640                App_printf("\r\n");
;;;641                return 1;
;;;642            }
;;;643        }
;;;644        else if(Func_code_buf[0] ==0x06 && Func_code_buf[1] == 0x02)	//报警信息查询
;;;645        {
;;;646            if(Data_Assemble(Func_code_buf,(uint8_t *)&Alarm_historyBack,CAN_ID,sizeof(Alarm_historyBack),&COM_buffer) ==1)
;;;647            {
;;;648                comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;649                App_printf("COM_buffer: ");
;;;650                for(int i=0; i<COM_buffer.Len_buffer; i++)
;;;651                {
;;;652                    App_printf("%02x ",COM_buffer.Data_buffer[i]);
;;;653                }
;;;654                App_printf("\r\n");
;;;655                return 1;
;;;656            }
;;;657        }
;;;658        else if(Func_code_buf[0] ==0x07 && Func_code_buf[1] == 0x02)	//开机
;;;659        {
;;;660            if(Data_Assemble(Func_code_buf,(uint8_t *)&Power_onBack,CAN_ID,sizeof(Power_onBack),&COM_buffer) ==1)
;;;661            {
;;;662                comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;663                App_printf("COM_buffer: ");
;;;664                for(int i=0; i<COM_buffer.Len_buffer; i++)
;;;665                {
;;;666                    App_printf("%02x ",COM_buffer.Data_buffer[i]);
;;;667                }
;;;668                App_printf("\r\n");
;;;669                return 1;
;;;670            }
;;;671        }
;;;672        else if(Func_code_buf[0] ==0x08 && Func_code_buf[1] == 0x02)	//关机
;;;673        {
;;;674            if(Data_Assemble(Func_code_buf,(uint8_t *)&Power_offBack,CAN_ID,sizeof(Power_offBack),&COM_buffer) ==1)
;;;675            {
;;;676                comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;677                App_printf("COM_buffer: ");
;;;678                for(int i=0; i<COM_buffer.Len_buffer; i++)
;;;679                {
;;;680                    App_printf("%02x ",COM_buffer.Data_buffer[i]);
;;;681                }
;;;682                App_printf("\r\n");
;;;683                return 1;
;;;684            }
;;;685        }
;;;686        else if(Func_code_buf[0] ==0x09 && Func_code_buf[1] == 0x02)	//扫频
;;;687        {
;;;688            App_printf("COM_buffer sweepning: \r\n");
;;;689            switch(Scan_Freq_flag)
;;;690            {
;;;691            case 0:
;;;692            {
;;;693                if(Data_Assemble(Func_code_buf,(uint8_t *)&Scan_FrqBack,CAN_ID,sizeof(Scan_FrqBack),&COM_buffer) ==1)
;;;694                {
;;;695                    comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;696                    return 1;
;;;697                }
;;;698            }
;;;699            case 1:
;;;700            {
;;;701                if(Data_Assemble(Func_code_buf,(uint8_t *)&Scan_FrqBack1,CAN_ID,sizeof(Scan_FrqBack1),&COM_buffer) ==1)
;;;702                {
;;;703                    comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;704                    return 1;
;;;705                }
;;;706            }
;;;707            case 2:
;;;708            {
;;;709                if(Data_Assemble(Func_code_buf,(uint8_t *)&Scan_FrqBack2,CAN_ID,sizeof(Scan_FrqBack2),&COM_buffer) ==1)
;;;710                {
;;;711                    comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;712                    return 1;
;;;713                }
;;;714            }
;;;715            case 3:
;;;716            {
;;;717                if(Data_Assemble(Func_code_buf,(uint8_t *)&Scan_FrqBack3,CAN_ID,sizeof(Scan_FrqBack3),&COM_buffer) ==1)
;;;718                {
;;;719                    comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;720                    return 1;
;;;721                }
;;;722            }
;;;723            case 4:
;;;724            {
;;;725                if(Data_Assemble(Func_code_buf,(uint8_t *)&Scan_FrqBack4,CAN_ID,sizeof(Scan_FrqBack4),&COM_buffer) ==1)
;;;726                {
;;;727                    comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;728                    return 1;
;;;729                }
;;;730            }
;;;731            case 5:
;;;732            {
;;;733                if(Data_Assemble(Func_code_buf,(uint8_t *)&Scan_FrqBack5,CAN_ID,sizeof(Scan_FrqBack5),&COM_buffer) ==1)
;;;734                {
;;;735                    comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;736                    return 1;
;;;737                }
;;;738            }
;;;739            case 6:
;;;740            {
;;;741                if(Data_Assemble(Func_code_buf,(uint8_t *)&Scan_FrqBack6,CAN_ID,sizeof(Scan_FrqBack6),&COM_buffer) ==1)
;;;742                {
;;;743                    comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;744                    return 1;
;;;745                }
;;;746            }
;;;747            case 7:
;;;748            {
;;;749                if(Data_Assemble(Func_code_buf,(uint8_t *)&Scan_FrqBack7,CAN_ID,sizeof(Scan_FrqBack7),&COM_buffer) ==1)
;;;750                {
;;;751                    comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;752                    return 1;
;;;753                }
;;;754            }
;;;755            case 8:
;;;756            {
;;;757                if(Data_Assemble(Func_code_buf,(uint8_t *)&Scan_FrqBack8,CAN_ID,sizeof(Scan_FrqBack8),&COM_buffer) ==1)
;;;758                {
;;;759                    comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;760                    return 1;
;;;761                }
;;;762            }
;;;763            case 9:
;;;764            {
;;;765                if(Data_Assemble(Func_code_buf,(uint8_t *)&Scan_FrqBack9,CAN_ID,sizeof(Scan_FrqBack9),&COM_buffer) ==1)
;;;766                {
;;;767                    comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;768                    return 1;
;;;769                }
;;;770            }
;;;771            case 10:
;;;772            {
;;;773                if(Data_Assemble(Func_code_buf,(uint8_t *)&Scan_FrqBack10,CAN_ID,sizeof(Scan_FrqBack10),&COM_buffer) ==1)
;;;774                {
;;;775                    comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;776                    return 1;
;;;777                }
;;;778            }
;;;779            case 11:
;;;780            {
;;;781                if(Data_Assemble(Func_code_buf,(uint8_t *)&Scan_FrqBack11,CAN_ID,sizeof(Scan_FrqBack11),&COM_buffer) ==1)
;;;782                {
;;;783                    comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;784                    return 1;
;;;785                }
;;;786            }
;;;787            case 12:
;;;788            {
;;;789                if(Data_Assemble(Func_code_buf,(uint8_t *)&Scan_FrqBack12,CAN_ID,sizeof(Scan_FrqBack12),&COM_buffer) ==1)
;;;790                {
;;;791                    comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;792                    return 1;
;;;793                }
;;;794            }
;;;795            case 13:
;;;796            {
;;;797                if(Data_Assemble(Func_code_buf,(uint8_t *)&Scan_FrqBack13,CAN_ID,sizeof(Scan_FrqBack13),&COM_buffer) ==1)
;;;798                {
;;;799                    comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;800                    return 1;
;;;801                }
;;;802            }
;;;803            }
;;;804        }
;;;805        else if(Func_code_buf[0] ==0x0A && Func_code_buf[1] == 0x02)	//停止扫频
;;;806        {
;;;807            if(Data_Assemble(Func_code_buf,(uint8_t *)&Sacn_stopBack,CAN_ID,sizeof(Sacn_stopBack),&COM_buffer) ==1)
;;;808            {
;;;809                comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;810                App_printf("COM_buffer: ");
;;;811                for(int i=0; i<COM_buffer.Len_buffer; i++)
;;;812                {
;;;813                    App_printf("%02x ",COM_buffer.Data_buffer[i]);
;;;814                }
;;;815                App_printf("\r\n");
;;;816                return 1;
;;;817            }
;;;818        }
;;;819        else if(Func_code_buf[0] ==0x0B && Func_code_buf[1] == 0x02)	//增加功率
;;;820        {
;;;821            if(Data_Assemble(Func_code_buf,(uint8_t *)&Add_PowerBack,CAN_ID,sizeof(Add_PowerBack),&COM_buffer) ==1)
;;;822            {
;;;823                comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;824                App_printf("COM_buffer: ");
;;;825                for(int i=0; i<COM_buffer.Len_buffer; i++)
;;;826                {
;;;827                    App_printf("%02x ",COM_buffer.Data_buffer[i]);
;;;828                }
;;;829                App_printf("\r\n");
;;;830                return 1;
;;;831            }
;;;832        }
;;;833        else if(Func_code_buf[0] ==0x0C && Func_code_buf[1] == 0x02)	//减小功率
;;;834        {
;;;835            if(Data_Assemble(Func_code_buf,(uint8_t *)&Sub_PowerBack,CAN_ID,sizeof(Sub_PowerBack),&COM_buffer) ==1)
;;;836            {
;;;837                comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;838                App_printf("COM_buffer: ");
;;;839                for(int i=0; i<COM_buffer.Len_buffer; i++)
;;;840                {
;;;841                    App_printf("%02x ",COM_buffer.Data_buffer[i]);
;;;842                }
;;;843                App_printf("\r\n");
;;;844                return 1;
;;;845            }
;;;846        }
;;;847        else if(Func_code_buf[0] ==0x0D && Func_code_buf[1] == 0x02)	//运行图
;;;848        {
;;;849            if(Data_Assemble(Func_code_buf,(uint8_t *)&Run_DiagramBack,CAN_ID,sizeof(Run_DiagramBack),&COM_buffer) ==1)
;;;850            {
;;;851                comSendBuf(COM5,COM_buffer.Data_buffer,COM_buffer.Len_buffer);
;;;852                App_printf("COM_buffer: ");
;;;853                for(int i=0; i<COM_buffer.Len_buffer; i++)
;;;854                {
;;;855                    App_printf("%02x ",COM_buffer.Data_buffer[i]);
;;;856                }
;;;857                App_printf("\r\n");
;;;858                return 1;
;;;859            }
;;;860        }
;;;861        return 2;
;;;862    }
00005a  b043              ADD      sp,sp,#0x10c
00005c  bd30              POP      {r4,r5,pc}
                  |L7.94|
00005e  7820              LDRB     r0,[r4,#0]            ;549
000060  2802              CMP      r0,#2                 ;549
                  |L7.98|
000062  d17d              BNE      |L7.352|
000064  7860              LDRB     r0,[r4,#1]            ;549
000066  2802              CMP      r0,#2                 ;549
000068  d1fb              BNE      |L7.98|
00006a  2001              MOVS     r0,#1                 ;553
00006c  49ec              LDR      r1,|L7.1056|
00006e  70c8              STRB     r0,[r1,#3]            ;553
000070  2101              MOVS     r1,#1                 ;554
000072  48eb              LDR      r0,|L7.1056|
000074  7101              STRB     r1,[r0,#4]            ;554
000076  7141              STRB     r1,[r0,#5]            ;555
000078  48ea              LDR      r0,|L7.1060|
00007a  7880              LDRB     r0,[r0,#2]            ;557  ; MT2000_Rx
00007c  2831              CMP      r0,#0x31              ;557
00007e  d004              BEQ      |L7.138|
000080  2832              CMP      r0,#0x32              ;557
000082  d006              BEQ      |L7.146|
000084  2833              CMP      r0,#0x33              ;557
000086  d10c              BNE      |L7.162|
000088  e007              B        |L7.154|
                  |L7.138|
00008a  2001              MOVS     r0,#1                 ;559
00008c  49e4              LDR      r1,|L7.1056|
00008e  7088              STRB     r0,[r1,#2]            ;559
000090  e008              B        |L7.164|
                  |L7.146|
000092  2002              MOVS     r0,#2                 ;560
000094  49e2              LDR      r1,|L7.1056|
000096  7088              STRB     r0,[r1,#2]            ;560
000098  e004              B        |L7.164|
                  |L7.154|
00009a  2003              MOVS     r0,#3                 ;561
00009c  49e0              LDR      r1,|L7.1056|
00009e  7088              STRB     r0,[r1,#2]            ;561
0000a0  e000              B        |L7.164|
                  |L7.162|
0000a2  bf00              NOP                            ;562
                  |L7.164|
0000a4  bf00              NOP                            ;559
0000a6  48df              LDR      r0,|L7.1060|
0000a8  7900              LDRB     r0,[r0,#4]            ;565  ; MT2000_Rx
0000aa  2831              CMP      r0,#0x31              ;565
0000ac  d004              BEQ      |L7.184|
0000ae  2832              CMP      r0,#0x32              ;565
0000b0  d006              BEQ      |L7.192|
0000b2  2833              CMP      r0,#0x33              ;565
0000b4  d10c              BNE      |L7.208|
0000b6  e007              B        |L7.200|
                  |L7.184|
0000b8  2002              MOVS     r0,#2                 ;567
0000ba  49d9              LDR      r1,|L7.1056|
0000bc  7488              STRB     r0,[r1,#0x12]         ;567
0000be  e008              B        |L7.210|
                  |L7.192|
0000c0  2001              MOVS     r0,#1                 ;568
0000c2  49d7              LDR      r1,|L7.1056|
0000c4  7488              STRB     r0,[r1,#0x12]         ;568
0000c6  e004              B        |L7.210|
                  |L7.200|
0000c8  2000              MOVS     r0,#0                 ;569
0000ca  49d5              LDR      r1,|L7.1056|
0000cc  7488              STRB     r0,[r1,#0x12]         ;569
0000ce  e000              B        |L7.210|
                  |L7.208|
0000d0  bf00              NOP                            ;570
                  |L7.210|
0000d2  bf00              NOP                            ;567
0000d4  48d3              LDR      r0,|L7.1060|
0000d6  7a00              LDRB     r0,[r0,#8]            ;573  ; MT2000_Rx
0000d8  3830              SUBS     r0,r0,#0x30           ;573
0000da  49d2              LDR      r1,|L7.1060|
0000dc  7a49              LDRB     r1,[r1,#9]            ;573
0000de  392c              SUBS     r1,r1,#0x2c           ;573
0000e0  4088              LSLS     r0,r0,r1              ;573
0000e2  49cf              LDR      r1,|L7.1056|
0000e4  7188              STRB     r0,[r1,#6]            ;573
0000e6  48cf              LDR      r0,|L7.1060|
0000e8  7a00              LDRB     r0,[r0,#8]            ;574  ; MT2000_Rx
0000ea  3830              SUBS     r0,r0,#0x30           ;574
0000ec  49cd              LDR      r1,|L7.1060|
0000ee  7a49              LDRB     r1,[r1,#9]            ;574
0000f0  392c              SUBS     r1,r1,#0x2c           ;574
0000f2  4088              LSLS     r0,r0,r1              ;574
0000f4  49ca              LDR      r1,|L7.1056|
0000f6  7188              STRB     r0,[r1,#6]            ;574
0000f8  48ca              LDR      r0,|L7.1060|
0000fa  7a00              LDRB     r0,[r0,#8]            ;575  ; MT2000_Rx
0000fc  3830              SUBS     r0,r0,#0x30           ;575
0000fe  49c9              LDR      r1,|L7.1060|
000100  7a49              LDRB     r1,[r1,#9]            ;575
000102  392c              SUBS     r1,r1,#0x2c           ;575
000104  4088              LSLS     r0,r0,r1              ;575
000106  49c6              LDR      r1,|L7.1056|
000108  7188              STRB     r0,[r1,#6]            ;575
00010a  48c6              LDR      r0,|L7.1060|
00010c  7a00              LDRB     r0,[r0,#8]            ;576  ; MT2000_Rx
00010e  3830              SUBS     r0,r0,#0x30           ;576
000110  49c4              LDR      r1,|L7.1060|
000112  7a49              LDRB     r1,[r1,#9]            ;576
000114  392c              SUBS     r1,r1,#0x2c           ;576
000116  4088              LSLS     r0,r0,r1              ;576
000118  49c1              LDR      r1,|L7.1056|
00011a  7188              STRB     r0,[r1,#6]            ;576
00011c  48c1              LDR      r0,|L7.1060|
00011e  7c80              LDRB     r0,[r0,#0x12]         ;579  ; MT2000_Rx
000120  3830              SUBS     r0,r0,#0x30           ;579
000122  e000              B        |L7.294|
                  |L7.292|
000124  e0cb              B        |L7.702|
                  |L7.294|
000126  49bf              LDR      r1,|L7.1060|
000128  7cc9              LDRB     r1,[r1,#0x13]         ;579
00012a  392c              SUBS     r1,r1,#0x2c           ;579
00012c  4088              LSLS     r0,r0,r1              ;579
00012e  49bc              LDR      r1,|L7.1056|
000130  7188              STRB     r0,[r1,#6]            ;579
000132  48bc              LDR      r0,|L7.1060|
000134  7d00              LDRB     r0,[r0,#0x14]         ;580
000136  3830              SUBS     r0,r0,#0x30           ;580
000138  49ba              LDR      r1,|L7.1060|
00013a  7d49              LDRB     r1,[r1,#0x15]         ;580
00013c  392c              SUBS     r1,r1,#0x2c           ;580
00013e  4088              LSLS     r0,r0,r1              ;580
000140  b2c1              UXTB     r1,r0                 ;580
000142  48b7              LDR      r0,|L7.1056|
000144  71c1              STRB     r1,[r0,#7]            ;580
000146  48b7              LDR      r0,|L7.1060|
000148  7d80              LDRB     r0,[r0,#0x16]         ;581
00014a  3830              SUBS     r0,r0,#0x30           ;581
00014c  49b5              LDR      r1,|L7.1060|
00014e  7dc9              LDRB     r1,[r1,#0x17]         ;581
000150  392c              SUBS     r1,r1,#0x2c           ;581
000152  4088              LSLS     r0,r0,r1              ;581
000154  b2c1              UXTB     r1,r0                 ;581
000156  48b2              LDR      r0,|L7.1056|
000158  7201              STRB     r1,[r0,#8]            ;581
00015a  48b2              LDR      r0,|L7.1060|
00015c  7e00              LDRB     r0,[r0,#0x18]         ;582
00015e  e000              B        |L7.354|
                  |L7.352|
000160  e057              B        |L7.530|
                  |L7.354|
000162  3830              SUBS     r0,r0,#0x30           ;582
000164  49af              LDR      r1,|L7.1060|
000166  7e49              LDRB     r1,[r1,#0x19]         ;582
000168  392c              SUBS     r1,r1,#0x2c           ;582
00016a  4088              LSLS     r0,r0,r1              ;582
00016c  b2c1              UXTB     r1,r0                 ;582
00016e  48ac              LDR      r0,|L7.1056|
000170  7241              STRB     r1,[r0,#9]            ;582
000172  48ac              LDR      r0,|L7.1060|
000174  7f00              LDRB     r0,[r0,#0x1c]         ;585  ; MT2000_Rx
000176  3830              SUBS     r0,r0,#0x30           ;585
000178  49aa              LDR      r1,|L7.1060|
00017a  7f49              LDRB     r1,[r1,#0x1d]         ;585
00017c  392c              SUBS     r1,r1,#0x2c           ;585
00017e  4088              LSLS     r0,r0,r1              ;585
000180  49a7              LDR      r1,|L7.1056|
000182  7188              STRB     r0,[r1,#6]            ;585
000184  48a7              LDR      r0,|L7.1060|
000186  7f80              LDRB     r0,[r0,#0x1e]         ;586
000188  3830              SUBS     r0,r0,#0x30           ;586
00018a  49a6              LDR      r1,|L7.1060|
00018c  7fc9              LDRB     r1,[r1,#0x1f]         ;586
00018e  392c              SUBS     r1,r1,#0x2c           ;586
000190  4088              LSLS     r0,r0,r1              ;586
000192  b2c1              UXTB     r1,r0                 ;586
000194  48a2              LDR      r0,|L7.1056|
000196  71c1              STRB     r1,[r0,#7]            ;586
000198  48a2              LDR      r0,|L7.1060|
00019a  f8900020          LDRB     r0,[r0,#0x20]         ;587
00019e  3830              SUBS     r0,r0,#0x30           ;587
0001a0  49a0              LDR      r1,|L7.1060|
0001a2  f8911021          LDRB     r1,[r1,#0x21]         ;587
0001a6  392c              SUBS     r1,r1,#0x2c           ;587
0001a8  4088              LSLS     r0,r0,r1              ;587
0001aa  b2c1              UXTB     r1,r0                 ;587
0001ac  489c              LDR      r0,|L7.1056|
0001ae  7201              STRB     r1,[r0,#8]            ;587
0001b0  489c              LDR      r0,|L7.1060|
0001b2  f8900022          LDRB     r0,[r0,#0x22]         ;588
0001b6  3830              SUBS     r0,r0,#0x30           ;588
0001b8  499a              LDR      r1,|L7.1060|
0001ba  f8911023          LDRB     r1,[r1,#0x23]         ;588
0001be  392c              SUBS     r1,r1,#0x2c           ;588
0001c0  4088              LSLS     r0,r0,r1              ;588
0001c2  b2c1              UXTB     r1,r0                 ;588
0001c4  4896              LDR      r0,|L7.1056|
0001c6  7241              STRB     r1,[r0,#9]            ;588
0001c8  a802              ADD      r0,sp,#8              ;590
0001ca  232e              MOVS     r3,#0x2e              ;590
0001cc  9000              STR      r0,[sp,#0]            ;590
0001ce  488b              LDR      r0,|L7.1020|
0001d0  7802              LDRB     r2,[r0,#0]            ;590  ; CAN_ID
0001d2  4993              LDR      r1,|L7.1056|
0001d4  4620              MOV      r0,r4                 ;590
0001d6  f7fffffe          BL       Data_Assemble
0001da  2801              CMP      r0,#1                 ;590
                  |L7.476|
0001dc  d16f              BNE      |L7.702|
0001de  f89d2108          LDRB     r2,[sp,#0x108]        ;592
0001e2  a902              ADD      r1,sp,#8              ;592
0001e4  2004              MOVS     r0,#4                 ;592
0001e6  f7fffffe          BL       comSendBuf
0001ea  a086              ADR      r0,|L7.1028|
0001ec  f7fffffe          BL       App_printf
0001f0  2500              MOVS     r5,#0                 ;594
0001f2  e005              B        |L7.512|
                  |L7.500|
0001f4  a802              ADD      r0,sp,#8              ;596
0001f6  5d41              LDRB     r1,[r0,r5]            ;596
0001f8  a086              ADR      r0,|L7.1044|
0001fa  f7fffffe          BL       App_printf
0001fe  1c6d              ADDS     r5,r5,#1              ;594
                  |L7.512|
000200  f89d0108          LDRB     r0,[sp,#0x108]        ;594
000204  42a8              CMP      r0,r5                 ;594
000206  dcf5              BGT      |L7.500|
000208  a084              ADR      r0,|L7.1052|
00020a  f7fffffe          BL       App_printf
00020e  2001              MOVS     r0,#1                 ;599
                  |L7.528|
000210  e723              B        |L7.90|
                  |L7.530|
000212  7820              LDRB     r0,[r4,#0]            ;602
000214  2803              CMP      r0,#3                 ;602
000216  d127              BNE      |L7.616|
000218  7860              LDRB     r0,[r4,#1]            ;602
00021a  2802              CMP      r0,#2                 ;602
00021c  d124              BNE      |L7.616|
00021e  a802              ADD      r0,sp,#8              ;604
000220  2303              MOVS     r3,#3                 ;604
000222  9000              STR      r0,[sp,#0]            ;604
000224  4875              LDR      r0,|L7.1020|
000226  7802              LDRB     r2,[r0,#0]            ;604  ; CAN_ID
000228  497f              LDR      r1,|L7.1064|
00022a  4620              MOV      r0,r4                 ;604
00022c  f7fffffe          BL       Data_Assemble
000230  2801              CMP      r0,#1                 ;604
                  |L7.562|
000232  d1d3              BNE      |L7.476|
000234  f89d2108          LDRB     r2,[sp,#0x108]        ;606
000238  a902              ADD      r1,sp,#8              ;606
00023a  2004              MOVS     r0,#4                 ;606
00023c  f7fffffe          BL       comSendBuf
000240  a070              ADR      r0,|L7.1028|
000242  f7fffffe          BL       App_printf
000246  2500              MOVS     r5,#0                 ;608
000248  e005              B        |L7.598|
                  |L7.586|
00024a  a802              ADD      r0,sp,#8              ;610
00024c  5d41              LDRB     r1,[r0,r5]            ;610
00024e  a071              ADR      r0,|L7.1044|
000250  f7fffffe          BL       App_printf
000254  1c6d              ADDS     r5,r5,#1              ;608
                  |L7.598|
000256  f89d0108          LDRB     r0,[sp,#0x108]        ;608
00025a  42a8              CMP      r0,r5                 ;608
00025c  dcf5              BGT      |L7.586|
00025e  a06f              ADR      r0,|L7.1052|
000260  f7fffffe          BL       App_printf
000264  2001              MOVS     r0,#1                 ;613
000266  e6f8              B        |L7.90|
                  |L7.616|
000268  7820              LDRB     r0,[r4,#0]            ;616
00026a  2804              CMP      r0,#4                 ;616
00026c  d128              BNE      |L7.704|
00026e  7860              LDRB     r0,[r4,#1]            ;616
000270  2802              CMP      r0,#2                 ;616
000272  d125              BNE      |L7.704|
000274  a802              ADD      r0,sp,#8              ;618
000276  2302              MOVS     r3,#2                 ;618
000278  9000              STR      r0,[sp,#0]            ;618
00027a  4860              LDR      r0,|L7.1020|
00027c  7802              LDRB     r2,[r0,#0]            ;618  ; CAN_ID
00027e  496b              LDR      r1,|L7.1068|
000280  4620              MOV      r0,r4                 ;618
000282  f7fffffe          BL       Data_Assemble
000286  2801              CMP      r0,#1                 ;618
                  |L7.648|
000288  d1a8              BNE      |L7.476|
00028a  f89d2108          LDRB     r2,[sp,#0x108]        ;620
00028e  a902              ADD      r1,sp,#8              ;620
000290  2004              MOVS     r0,#4                 ;620
000292  f7fffffe          BL       comSendBuf
000296  a05b              ADR      r0,|L7.1028|
000298  f7fffffe          BL       App_printf
00029c  2500              MOVS     r5,#0                 ;622
00029e  e005              B        |L7.684|
                  |L7.672|
0002a0  a802              ADD      r0,sp,#8              ;624
0002a2  5d41              LDRB     r1,[r0,r5]            ;624
0002a4  a05b              ADR      r0,|L7.1044|
0002a6  f7fffffe          BL       App_printf
0002aa  1c6d              ADDS     r5,r5,#1              ;622
                  |L7.684|
0002ac  f89d0108          LDRB     r0,[sp,#0x108]        ;622
0002b0  42a8              CMP      r0,r5                 ;622
0002b2  dcf5              BGT      |L7.672|
0002b4  a059              ADR      r0,|L7.1052|
0002b6  f7fffffe          BL       App_printf
0002ba  2001              MOVS     r0,#1                 ;627
0002bc  e6cd              B        |L7.90|
                  |L7.702|
0002be  e14a              B        |L7.1366|
                  |L7.704|
0002c0  7820              LDRB     r0,[r4,#0]            ;630
0002c2  2805              CMP      r0,#5                 ;630
0002c4  d127              BNE      |L7.790|
0002c6  7860              LDRB     r0,[r4,#1]            ;630
0002c8  2802              CMP      r0,#2                 ;630
0002ca  d124              BNE      |L7.790|
0002cc  a802              ADD      r0,sp,#8              ;632
0002ce  2305              MOVS     r3,#5                 ;632
0002d0  9000              STR      r0,[sp,#0]            ;632
0002d2  484a              LDR      r0,|L7.1020|
0002d4  7802              LDRB     r2,[r0,#0]            ;632  ; CAN_ID
0002d6  4956              LDR      r1,|L7.1072|
0002d8  4620              MOV      r0,r4                 ;632
0002da  f7fffffe          BL       Data_Assemble
0002de  2801              CMP      r0,#1                 ;632
                  |L7.736|
0002e0  d1a7              BNE      |L7.562|
0002e2  f89d2108          LDRB     r2,[sp,#0x108]        ;634
0002e6  a902              ADD      r1,sp,#8              ;634
0002e8  2004              MOVS     r0,#4                 ;634
0002ea  f7fffffe          BL       comSendBuf
0002ee  a045              ADR      r0,|L7.1028|
0002f0  f7fffffe          BL       App_printf
0002f4  2500              MOVS     r5,#0                 ;636
0002f6  e005              B        |L7.772|
                  |L7.760|
0002f8  a802              ADD      r0,sp,#8              ;638
0002fa  5d41              LDRB     r1,[r0,r5]            ;638
0002fc  a045              ADR      r0,|L7.1044|
0002fe  f7fffffe          BL       App_printf
000302  1c6d              ADDS     r5,r5,#1              ;636
                  |L7.772|
000304  f89d0108          LDRB     r0,[sp,#0x108]        ;636
000308  42a8              CMP      r0,r5                 ;636
00030a  dcf5              BGT      |L7.760|
00030c  a043              ADR      r0,|L7.1052|
00030e  f7fffffe          BL       App_printf
000312  2001              MOVS     r0,#1                 ;641
000314  e6a1              B        |L7.90|
                  |L7.790|
000316  7820              LDRB     r0,[r4,#0]            ;644
000318  2806              CMP      r0,#6                 ;644
00031a  d127              BNE      |L7.876|
00031c  7860              LDRB     r0,[r4,#1]            ;644
00031e  2802              CMP      r0,#2                 ;644
000320  d124              BNE      |L7.876|
000322  a802              ADD      r0,sp,#8              ;646
000324  2347              MOVS     r3,#0x47              ;646
000326  9000              STR      r0,[sp,#0]            ;646
000328  4834              LDR      r0,|L7.1020|
00032a  7802              LDRB     r2,[r0,#0]            ;646  ; CAN_ID
00032c  4941              LDR      r1,|L7.1076|
00032e  4620              MOV      r0,r4                 ;646
000330  f7fffffe          BL       Data_Assemble
000334  2801              CMP      r0,#1                 ;646
                  |L7.822|
000336  d1a7              BNE      |L7.648|
000338  f89d2108          LDRB     r2,[sp,#0x108]        ;648
00033c  a902              ADD      r1,sp,#8              ;648
00033e  2004              MOVS     r0,#4                 ;648
000340  f7fffffe          BL       comSendBuf
000344  a02f              ADR      r0,|L7.1028|
000346  f7fffffe          BL       App_printf
00034a  2500              MOVS     r5,#0                 ;650
00034c  e005              B        |L7.858|
                  |L7.846|
00034e  a802              ADD      r0,sp,#8              ;652
000350  5d41              LDRB     r1,[r0,r5]            ;652
000352  a030              ADR      r0,|L7.1044|
000354  f7fffffe          BL       App_printf
000358  1c6d              ADDS     r5,r5,#1              ;650
                  |L7.858|
00035a  f89d0108          LDRB     r0,[sp,#0x108]        ;650
00035e  42a8              CMP      r0,r5                 ;650
000360  dcf5              BGT      |L7.846|
000362  a02e              ADR      r0,|L7.1052|
000364  f7fffffe          BL       App_printf
000368  2001              MOVS     r0,#1                 ;655
00036a  e676              B        |L7.90|
                  |L7.876|
00036c  7820              LDRB     r0,[r4,#0]            ;658
00036e  2807              CMP      r0,#7                 ;658
000370  d127              BNE      |L7.962|
000372  7860              LDRB     r0,[r4,#1]            ;658
000374  2802              CMP      r0,#2                 ;658
000376  d124              BNE      |L7.962|
000378  a802              ADD      r0,sp,#8              ;660
00037a  2302              MOVS     r3,#2                 ;660
00037c  9000              STR      r0,[sp,#0]            ;660
00037e  481f              LDR      r0,|L7.1020|
000380  7802              LDRB     r2,[r0,#0]            ;660  ; CAN_ID
000382  492d              LDR      r1,|L7.1080|
000384  4620              MOV      r0,r4                 ;660
000386  f7fffffe          BL       Data_Assemble
00038a  2801              CMP      r0,#1                 ;660
00038c  d1a8              BNE      |L7.736|
00038e  f89d2108          LDRB     r2,[sp,#0x108]        ;662
000392  a902              ADD      r1,sp,#8              ;662
000394  2004              MOVS     r0,#4                 ;662
000396  f7fffffe          BL       comSendBuf
00039a  a01a              ADR      r0,|L7.1028|
00039c  f7fffffe          BL       App_printf
0003a0  2500              MOVS     r5,#0                 ;664
0003a2  e005              B        |L7.944|
                  |L7.932|
0003a4  a802              ADD      r0,sp,#8              ;666
0003a6  5d41              LDRB     r1,[r0,r5]            ;666
0003a8  a01a              ADR      r0,|L7.1044|
0003aa  f7fffffe          BL       App_printf
0003ae  1c6d              ADDS     r5,r5,#1              ;664
                  |L7.944|
0003b0  f89d0108          LDRB     r0,[sp,#0x108]        ;664
0003b4  42a8              CMP      r0,r5                 ;664
0003b6  dcf5              BGT      |L7.932|
0003b8  a018              ADR      r0,|L7.1052|
0003ba  f7fffffe          BL       App_printf
0003be  2001              MOVS     r0,#1                 ;669
0003c0  e64b              B        |L7.90|
                  |L7.962|
0003c2  7820              LDRB     r0,[r4,#0]            ;672
0003c4  2808              CMP      r0,#8                 ;672
0003c6  d14c              BNE      |L7.1122|
0003c8  7860              LDRB     r0,[r4,#1]            ;672
0003ca  2802              CMP      r0,#2                 ;672
0003cc  d149              BNE      |L7.1122|
0003ce  a802              ADD      r0,sp,#8              ;674
0003d0  2302              MOVS     r3,#2                 ;674
0003d2  9000              STR      r0,[sp,#0]            ;674
0003d4  4809              LDR      r0,|L7.1020|
0003d6  7802              LDRB     r2,[r0,#0]            ;674  ; CAN_ID
0003d8  4918              LDR      r1,|L7.1084|
0003da  4620              MOV      r0,r4                 ;674
0003dc  f7fffffe          BL       Data_Assemble
0003e0  2801              CMP      r0,#1                 ;674
0003e2  d1a8              BNE      |L7.822|
0003e4  f89d2108          LDRB     r2,[sp,#0x108]        ;676
0003e8  a902              ADD      r1,sp,#8              ;676
0003ea  2004              MOVS     r0,#4                 ;676
0003ec  f7fffffe          BL       comSendBuf
0003f0  a004              ADR      r0,|L7.1028|
0003f2  f7fffffe          BL       App_printf
0003f6  2500              MOVS     r5,#0                 ;678
0003f8  e029              B        |L7.1102|
0003fa  0000              DCW      0x0000
                  |L7.1020|
                          DCD      CAN_ID
                  |L7.1024|
                          DCD      Alarm_backPC
                  |L7.1028|
000404  434f4d5f          DCB      "COM_buffer: ",0
000408  62756666
00040c  65723a20
000410  00      
000411  00                DCB      0
000412  00                DCB      0
000413  00                DCB      0
                  |L7.1044|
000414  25303278          DCB      "%02x ",0
000418  2000    
00041a  00                DCB      0
00041b  00                DCB      0
                  |L7.1052|
00041c  0d0a00            DCB      "\r\n",0
00041f  00                DCB      0
                  |L7.1056|
                          DCD      Work_paraBack
                  |L7.1060|
                          DCD      MT2000_Rx
                  |L7.1064|
                          DCD      Trans_openBack
                  |L7.1068|
                          DCD      Trans_stopBack
                  |L7.1072|
                          DCD      DisalarmBack
                  |L7.1076|
                          DCD      Alarm_historyBack
                  |L7.1080|
                          DCD      Power_onBack
                  |L7.1084|
                          DCD      Power_offBack
                  |L7.1088|
000440  a802              ADD      r0,sp,#8              ;680
000442  5d41              LDRB     r1,[r0,r5]            ;680
000444  f2af0034          ADR      r0,|L7.1044|
000448  f7fffffe          BL       App_printf
00044c  1c6d              ADDS     r5,r5,#1              ;678
                  |L7.1102|
00044e  f89d0108          LDRB     r0,[sp,#0x108]        ;678
000452  42a8              CMP      r0,r5                 ;678
000454  dcf4              BGT      |L7.1088|
000456  f2af003c          ADR      r0,|L7.1052|
00045a  f7fffffe          BL       App_printf
00045e  2001              MOVS     r0,#1                 ;683
000460  e5fb              B        |L7.90|
                  |L7.1122|
000462  7820              LDRB     r0,[r4,#0]            ;686
000464  2809              CMP      r0,#9                 ;686
                  |L7.1126|
000466  d175              BNE      |L7.1364|
000468  7860              LDRB     r0,[r4,#1]            ;686
00046a  2802              CMP      r0,#2                 ;686
00046c  d1fb              BNE      |L7.1126|
00046e  a0f2              ADR      r0,|L7.2104|
000470  f7fffffe          BL       App_printf
000474  48f7              LDR      r0,|L7.2132|
000476  7800              LDRB     r0,[r0,#0]            ;689  ; Scan_Freq_flag
000478  280e              CMP      r0,#0xe               ;689
00047a  d26c              BCS      |L7.1366|
00047c  e8dff000          TBB      [pc,r0]               ;689
000480  071b2f43          DCB      0x07,0x1b,0x2f,0x43
000484  576d8195          DCB      0x57,0x6d,0x81,0x95
000488  a9bdd1e5          DCB      0xa9,0xbd,0xd1,0xe5
00048c  fbf8              DCB      0xfb,0xf8
00048e  a802              ADD      r0,sp,#8              ;693
000490  236e              MOVS     r3,#0x6e              ;693
000492  9000              STR      r0,[sp,#0]            ;693
000494  48f0              LDR      r0,|L7.2136|
000496  7802              LDRB     r2,[r0,#0]            ;693  ; CAN_ID
000498  49f0              LDR      r1,|L7.2140|
00049a  4620              MOV      r0,r4                 ;693
00049c  f7fffffe          BL       Data_Assemble
0004a0  2801              CMP      r0,#1                 ;693
0004a2  d107              BNE      |L7.1204|
0004a4  f89d2108          LDRB     r2,[sp,#0x108]        ;695
0004a8  a902              ADD      r1,sp,#8              ;695
0004aa  2004              MOVS     r0,#4                 ;695
0004ac  f7fffffe          BL       comSendBuf
0004b0  2001              MOVS     r0,#1                 ;696
0004b2  e5d2              B        |L7.90|
                  |L7.1204|
0004b4  bf00              NOP                            ;699
0004b6  a802              ADD      r0,sp,#8              ;701
0004b8  236e              MOVS     r3,#0x6e              ;701
0004ba  9000              STR      r0,[sp,#0]            ;701
0004bc  48e6              LDR      r0,|L7.2136|
0004be  7802              LDRB     r2,[r0,#0]            ;701  ; CAN_ID
0004c0  49e7              LDR      r1,|L7.2144|
0004c2  4620              MOV      r0,r4                 ;701
0004c4  f7fffffe          BL       Data_Assemble
0004c8  2801              CMP      r0,#1                 ;701
0004ca  d107              BNE      |L7.1244|
0004cc  f89d2108          LDRB     r2,[sp,#0x108]        ;703
0004d0  a902              ADD      r1,sp,#8              ;703
0004d2  2004              MOVS     r0,#4                 ;703
0004d4  f7fffffe          BL       comSendBuf
0004d8  2001              MOVS     r0,#1                 ;704
0004da  e5be              B        |L7.90|
                  |L7.1244|
0004dc  bf00              NOP                            ;707
0004de  a802              ADD      r0,sp,#8              ;709
0004e0  236e              MOVS     r3,#0x6e              ;709
0004e2  9000              STR      r0,[sp,#0]            ;709
0004e4  48dc              LDR      r0,|L7.2136|
0004e6  7802              LDRB     r2,[r0,#0]            ;709  ; CAN_ID
0004e8  49de              LDR      r1,|L7.2148|
0004ea  4620              MOV      r0,r4                 ;709
0004ec  f7fffffe          BL       Data_Assemble
0004f0  2801              CMP      r0,#1                 ;709
0004f2  d107              BNE      |L7.1284|
0004f4  f89d2108          LDRB     r2,[sp,#0x108]        ;711
0004f8  a902              ADD      r1,sp,#8              ;711
0004fa  2004              MOVS     r0,#4                 ;711
0004fc  f7fffffe          BL       comSendBuf
000500  2001              MOVS     r0,#1                 ;712
000502  e5aa              B        |L7.90|
                  |L7.1284|
000504  bf00              NOP                            ;715
000506  a802              ADD      r0,sp,#8              ;717
000508  236e              MOVS     r3,#0x6e              ;717
00050a  9000              STR      r0,[sp,#0]            ;717
00050c  48d2              LDR      r0,|L7.2136|
00050e  7802              LDRB     r2,[r0,#0]            ;717  ; CAN_ID
000510  49d5              LDR      r1,|L7.2152|
000512  4620              MOV      r0,r4                 ;717
000514  f7fffffe          BL       Data_Assemble
000518  2801              CMP      r0,#1                 ;717
00051a  d107              BNE      |L7.1324|
00051c  f89d2108          LDRB     r2,[sp,#0x108]        ;719
000520  a902              ADD      r1,sp,#8              ;719
000522  2004              MOVS     r0,#4                 ;719
000524  f7fffffe          BL       comSendBuf
000528  2001              MOVS     r0,#1                 ;720
00052a  e596              B        |L7.90|
                  |L7.1324|
00052c  bf00              NOP                            ;723
00052e  a802              ADD      r0,sp,#8              ;725
000530  236e              MOVS     r3,#0x6e              ;725
000532  9000              STR      r0,[sp,#0]            ;725
000534  48c8              LDR      r0,|L7.2136|
000536  7802              LDRB     r2,[r0,#0]            ;725  ; CAN_ID
000538  49cc              LDR      r1,|L7.2156|
00053a  4620              MOV      r0,r4                 ;725
00053c  f7fffffe          BL       Data_Assemble
000540  2801              CMP      r0,#1                 ;725
000542  d109              BNE      |L7.1368|
000544  f89d2108          LDRB     r2,[sp,#0x108]        ;727
000548  a902              ADD      r1,sp,#8              ;727
00054a  2004              MOVS     r0,#4                 ;727
00054c  f7fffffe          BL       comSendBuf
000550  2001              MOVS     r0,#1                 ;728
000552  e582              B        |L7.90|
                  |L7.1364|
000554  e0b6              B        |L7.1732|
                  |L7.1366|
000556  e12b              B        |L7.1968|
                  |L7.1368|
000558  bf00              NOP                            ;731
00055a  a802              ADD      r0,sp,#8              ;733
00055c  236e              MOVS     r3,#0x6e              ;733
00055e  9000              STR      r0,[sp,#0]            ;733
000560  48bd              LDR      r0,|L7.2136|
000562  7802              LDRB     r2,[r0,#0]            ;733  ; CAN_ID
000564  49c2              LDR      r1,|L7.2160|
000566  4620              MOV      r0,r4                 ;733
000568  f7fffffe          BL       Data_Assemble
00056c  2801              CMP      r0,#1                 ;733
00056e  d107              BNE      |L7.1408|
000570  f89d2108          LDRB     r2,[sp,#0x108]        ;735
000574  a902              ADD      r1,sp,#8              ;735
000576  2004              MOVS     r0,#4                 ;735
000578  f7fffffe          BL       comSendBuf
00057c  2001              MOVS     r0,#1                 ;736
00057e  e56c              B        |L7.90|
                  |L7.1408|
000580  bf00              NOP                            ;739
000582  a802              ADD      r0,sp,#8              ;741
000584  236e              MOVS     r3,#0x6e              ;741
000586  9000              STR      r0,[sp,#0]            ;741
000588  48b3              LDR      r0,|L7.2136|
00058a  7802              LDRB     r2,[r0,#0]            ;741  ; CAN_ID
00058c  49b9              LDR      r1,|L7.2164|
00058e  4620              MOV      r0,r4                 ;741
000590  f7fffffe          BL       Data_Assemble
000594  2801              CMP      r0,#1                 ;741
000596  d107              BNE      |L7.1448|
000598  f89d2108          LDRB     r2,[sp,#0x108]        ;743
00059c  a902              ADD      r1,sp,#8              ;743
00059e  2004              MOVS     r0,#4                 ;743
0005a0  f7fffffe          BL       comSendBuf
0005a4  2001              MOVS     r0,#1                 ;744
0005a6  e558              B        |L7.90|
                  |L7.1448|
0005a8  bf00              NOP                            ;747
0005aa  a802              ADD      r0,sp,#8              ;749
0005ac  236e              MOVS     r3,#0x6e              ;749
0005ae  9000              STR      r0,[sp,#0]            ;749
0005b0  48a9              LDR      r0,|L7.2136|
0005b2  7802              LDRB     r2,[r0,#0]            ;749  ; CAN_ID
0005b4  49b0              LDR      r1,|L7.2168|
0005b6  4620              MOV      r0,r4                 ;749
0005b8  f7fffffe          BL       Data_Assemble
0005bc  2801              CMP      r0,#1                 ;749
0005be  d107              BNE      |L7.1488|
0005c0  f89d2108          LDRB     r2,[sp,#0x108]        ;751
0005c4  a902              ADD      r1,sp,#8              ;751
0005c6  2004              MOVS     r0,#4                 ;751
0005c8  f7fffffe          BL       comSendBuf
0005cc  2001              MOVS     r0,#1                 ;752
0005ce  e544              B        |L7.90|
                  |L7.1488|
0005d0  bf00              NOP                            ;755
0005d2  a802              ADD      r0,sp,#8              ;757
0005d4  236e              MOVS     r3,#0x6e              ;757
0005d6  9000              STR      r0,[sp,#0]            ;757
0005d8  489f              LDR      r0,|L7.2136|
0005da  7802              LDRB     r2,[r0,#0]            ;757  ; CAN_ID
0005dc  49a7              LDR      r1,|L7.2172|
0005de  4620              MOV      r0,r4                 ;757
0005e0  f7fffffe          BL       Data_Assemble
0005e4  2801              CMP      r0,#1                 ;757
0005e6  d107              BNE      |L7.1528|
0005e8  f89d2108          LDRB     r2,[sp,#0x108]        ;759
0005ec  a902              ADD      r1,sp,#8              ;759
0005ee  2004              MOVS     r0,#4                 ;759
0005f0  f7fffffe          BL       comSendBuf
0005f4  2001              MOVS     r0,#1                 ;760
0005f6  e530              B        |L7.90|
                  |L7.1528|
0005f8  bf00              NOP                            ;763
0005fa  a802              ADD      r0,sp,#8              ;765
0005fc  236e              MOVS     r3,#0x6e              ;765
0005fe  9000              STR      r0,[sp,#0]            ;765
000600  4895              LDR      r0,|L7.2136|
000602  7802              LDRB     r2,[r0,#0]            ;765  ; CAN_ID
000604  499e              LDR      r1,|L7.2176|
000606  4620              MOV      r0,r4                 ;765
000608  f7fffffe          BL       Data_Assemble
00060c  2801              CMP      r0,#1                 ;765
00060e  d107              BNE      |L7.1568|
000610  f89d2108          LDRB     r2,[sp,#0x108]        ;767
000614  a902              ADD      r1,sp,#8              ;767
000616  2004              MOVS     r0,#4                 ;767
000618  f7fffffe          BL       comSendBuf
00061c  2001              MOVS     r0,#1                 ;768
00061e  e51c              B        |L7.90|
                  |L7.1568|
000620  bf00              NOP                            ;771
000622  a802              ADD      r0,sp,#8              ;773
000624  236e              MOVS     r3,#0x6e              ;773
000626  9000              STR      r0,[sp,#0]            ;773
000628  488b              LDR      r0,|L7.2136|
00062a  7802              LDRB     r2,[r0,#0]            ;773  ; CAN_ID
00062c  4995              LDR      r1,|L7.2180|
00062e  4620              MOV      r0,r4                 ;773
000630  f7fffffe          BL       Data_Assemble
000634  2801              CMP      r0,#1                 ;773
000636  d107              BNE      |L7.1608|
000638  f89d2108          LDRB     r2,[sp,#0x108]        ;775
00063c  a902              ADD      r1,sp,#8              ;775
00063e  2004              MOVS     r0,#4                 ;775
000640  f7fffffe          BL       comSendBuf
000644  2001              MOVS     r0,#1                 ;776
000646  e508              B        |L7.90|
                  |L7.1608|
000648  bf00              NOP                            ;779
00064a  a802              ADD      r0,sp,#8              ;781
00064c  236e              MOVS     r3,#0x6e              ;781
00064e  9000              STR      r0,[sp,#0]            ;781
000650  4881              LDR      r0,|L7.2136|
000652  7802              LDRB     r2,[r0,#0]            ;781  ; CAN_ID
000654  498c              LDR      r1,|L7.2184|
000656  4620              MOV      r0,r4                 ;781
000658  f7fffffe          BL       Data_Assemble
00065c  2801              CMP      r0,#1                 ;781
00065e  d109              BNE      |L7.1652|
000660  f89d2108          LDRB     r2,[sp,#0x108]        ;783
000664  a902              ADD      r1,sp,#8              ;783
000666  2004              MOVS     r0,#4                 ;783
000668  f7fffffe          BL       comSendBuf
00066c  2001              MOVS     r0,#1                 ;784
00066e  e4f4              B        |L7.90|
000670  e015              B        |L7.1694|
000672  e000              B        |L7.1654|
                  |L7.1652|
000674  bf00              NOP                            ;787
                  |L7.1654|
000676  a802              ADD      r0,sp,#8              ;789
000678  236e              MOVS     r3,#0x6e              ;789
00067a  9000              STR      r0,[sp,#0]            ;789
00067c  4876              LDR      r0,|L7.2136|
00067e  7802              LDRB     r2,[r0,#0]            ;789  ; CAN_ID
000680  4982              LDR      r1,|L7.2188|
000682  4620              MOV      r0,r4                 ;789
000684  f7fffffe          BL       Data_Assemble
000688  2801              CMP      r0,#1                 ;789
00068a  d107              BNE      |L7.1692|
00068c  f89d2108          LDRB     r2,[sp,#0x108]        ;791
000690  a902              ADD      r1,sp,#8              ;791
000692  2004              MOVS     r0,#4                 ;791
000694  f7fffffe          BL       comSendBuf
000698  2001              MOVS     r0,#1                 ;792
00069a  e4de              B        |L7.90|
                  |L7.1692|
00069c  bf00              NOP                            ;795
                  |L7.1694|
00069e  a802              ADD      r0,sp,#8              ;797
0006a0  236e              MOVS     r3,#0x6e              ;797
0006a2  9000              STR      r0,[sp,#0]            ;797
0006a4  486c              LDR      r0,|L7.2136|
0006a6  7802              LDRB     r2,[r0,#0]            ;797  ; CAN_ID
0006a8  4979              LDR      r1,|L7.2192|
0006aa  4620              MOV      r0,r4                 ;797
0006ac  f7fffffe          BL       Data_Assemble
0006b0  2801              CMP      r0,#1                 ;797
                  |L7.1714|
0006b2  d17d              BNE      |L7.1968|
0006b4  f89d2108          LDRB     r2,[sp,#0x108]        ;799
0006b8  a902              ADD      r1,sp,#8              ;799
0006ba  2004              MOVS     r0,#4                 ;799
0006bc  f7fffffe          BL       comSendBuf
0006c0  2001              MOVS     r0,#1                 ;800
0006c2  e4ca              B        |L7.90|
                  |L7.1732|
0006c4  7820              LDRB     r0,[r4,#0]            ;805
0006c6  280a              CMP      r0,#0xa               ;805
0006c8  d12a              BNE      |L7.1824|
0006ca  7860              LDRB     r0,[r4,#1]            ;805
0006cc  2802              CMP      r0,#2                 ;805
0006ce  d127              BNE      |L7.1824|
0006d0  a802              ADD      r0,sp,#8              ;807
0006d2  2302              MOVS     r3,#2                 ;807
0006d4  9000              STR      r0,[sp,#0]            ;807
0006d6  4860              LDR      r0,|L7.2136|
0006d8  7802              LDRB     r2,[r0,#0]            ;807  ; CAN_ID
0006da  496e              LDR      r1,|L7.2196|
0006dc  4620              MOV      r0,r4                 ;807
0006de  f7fffffe          BL       Data_Assemble
0006e2  2801              CMP      r0,#1                 ;807
0006e4  d1e5              BNE      |L7.1714|
0006e6  f89d2108          LDRB     r2,[sp,#0x108]        ;809
0006ea  a902              ADD      r1,sp,#8              ;809
0006ec  2004              MOVS     r0,#4                 ;809
0006ee  f7fffffe          BL       comSendBuf
0006f2  f2af20f0          ADR      r0,|L7.1028|
0006f6  f7fffffe          BL       App_printf
0006fa  2500              MOVS     r5,#0                 ;811
0006fc  e006              B        |L7.1804|
                  |L7.1790|
0006fe  a802              ADD      r0,sp,#8              ;813
000700  5d41              LDRB     r1,[r0,r5]            ;813
000702  f2af20f0          ADR      r0,|L7.1044|
000706  f7fffffe          BL       App_printf
00070a  1c6d              ADDS     r5,r5,#1              ;811
                  |L7.1804|
00070c  f89d0108          LDRB     r0,[sp,#0x108]        ;811
000710  42a8              CMP      r0,r5                 ;811
000712  dcf4              BGT      |L7.1790|
000714  f2af20fc          ADR      r0,|L7.1052|
000718  f7fffffe          BL       App_printf
00071c  2001              MOVS     r0,#1                 ;816
00071e  e49c              B        |L7.90|
                  |L7.1824|
000720  7820              LDRB     r0,[r4,#0]            ;819
000722  280b              CMP      r0,#0xb               ;819
000724  d12a              BNE      |L7.1916|
000726  7860              LDRB     r0,[r4,#1]            ;819
000728  2802              CMP      r0,#2                 ;819
00072a  d127              BNE      |L7.1916|
00072c  a802              ADD      r0,sp,#8              ;821
00072e  2302              MOVS     r3,#2                 ;821
000730  9000              STR      r0,[sp,#0]            ;821
000732  4849              LDR      r0,|L7.2136|
000734  7802              LDRB     r2,[r0,#0]            ;821  ; CAN_ID
000736  4958              LDR      r1,|L7.2200|
000738  4620              MOV      r0,r4                 ;821
00073a  f7fffffe          BL       Data_Assemble
00073e  2801              CMP      r0,#1                 ;821
000740  d136              BNE      |L7.1968|
000742  f89d2108          LDRB     r2,[sp,#0x108]        ;823
000746  a902              ADD      r1,sp,#8              ;823
000748  2004              MOVS     r0,#4                 ;823
00074a  f7fffffe          BL       comSendBuf
00074e  f2af304c          ADR      r0,|L7.1028|
000752  f7fffffe          BL       App_printf
000756  2500              MOVS     r5,#0                 ;825
000758  e006              B        |L7.1896|
                  |L7.1882|
00075a  a802              ADD      r0,sp,#8              ;827
00075c  5d41              LDRB     r1,[r0,r5]            ;827
00075e  f2af304c          ADR      r0,|L7.1044|
000762  f7fffffe          BL       App_printf
000766  1c6d              ADDS     r5,r5,#1              ;825
                  |L7.1896|
000768  f89d0108          LDRB     r0,[sp,#0x108]        ;825
00076c  42a8              CMP      r0,r5                 ;825
00076e  dcf4              BGT      |L7.1882|
000770  f2af3058          ADR      r0,|L7.1052|
000774  f7fffffe          BL       App_printf
000778  2001              MOVS     r0,#1                 ;830
00077a  e46e              B        |L7.90|
                  |L7.1916|
00077c  7820              LDRB     r0,[r4,#0]            ;833
00077e  280c              CMP      r0,#0xc               ;833
000780  d12c              BNE      |L7.2012|
000782  7860              LDRB     r0,[r4,#1]            ;833
000784  2802              CMP      r0,#2                 ;833
000786  d129              BNE      |L7.2012|
000788  a802              ADD      r0,sp,#8              ;835
00078a  2302              MOVS     r3,#2                 ;835
00078c  9000              STR      r0,[sp,#0]            ;835
00078e  4832              LDR      r0,|L7.2136|
000790  7802              LDRB     r2,[r0,#0]            ;835  ; CAN_ID
000792  4942              LDR      r1,|L7.2204|
000794  4620              MOV      r0,r4                 ;835
000796  f7fffffe          BL       Data_Assemble
00079a  2801              CMP      r0,#1                 ;835
00079c  d108              BNE      |L7.1968|
00079e  f89d2108          LDRB     r2,[sp,#0x108]        ;837
0007a2  a902              ADD      r1,sp,#8              ;837
0007a4  2004              MOVS     r0,#4                 ;837
0007a6  f7fffffe          BL       comSendBuf
0007aa  f2af30a8          ADR      r0,|L7.1028|
0007ae  e000              B        |L7.1970|
                  |L7.1968|
0007b0  e078              B        |L7.2212|
                  |L7.1970|
0007b2  f7fffffe          BL       App_printf
0007b6  2500              MOVS     r5,#0                 ;839
0007b8  e006              B        |L7.1992|
                  |L7.1978|
0007ba  a802              ADD      r0,sp,#8              ;841
0007bc  5d41              LDRB     r1,[r0,r5]            ;841
0007be  f2af30ac          ADR      r0,|L7.1044|
0007c2  f7fffffe          BL       App_printf
0007c6  1c6d              ADDS     r5,r5,#1              ;839
                  |L7.1992|
0007c8  f89d0108          LDRB     r0,[sp,#0x108]        ;839
0007cc  42a8              CMP      r0,r5                 ;839
0007ce  dcf4              BGT      |L7.1978|
0007d0  f2af30b8          ADR      r0,|L7.1052|
0007d4  f7fffffe          BL       App_printf
0007d8  2001              MOVS     r0,#1                 ;844
0007da  e43e              B        |L7.90|
                  |L7.2012|
0007dc  7820              LDRB     r0,[r4,#0]            ;847
0007de  280d              CMP      r0,#0xd               ;847
0007e0  d160              BNE      |L7.2212|
0007e2  7860              LDRB     r0,[r4,#1]            ;847
0007e4  2802              CMP      r0,#2                 ;847
0007e6  d15d              BNE      |L7.2212|
0007e8  a802              ADD      r0,sp,#8              ;849
0007ea  2302              MOVS     r3,#2                 ;849
0007ec  9000              STR      r0,[sp,#0]            ;849
0007ee  481a              LDR      r0,|L7.2136|
0007f0  7802              LDRB     r2,[r0,#0]            ;849  ; CAN_ID
0007f2  492b              LDR      r1,|L7.2208|
0007f4  4620              MOV      r0,r4                 ;849
0007f6  f7fffffe          BL       Data_Assemble
0007fa  2801              CMP      r0,#1                 ;849
0007fc  d152              BNE      |L7.2212|
0007fe  f89d2108          LDRB     r2,[sp,#0x108]        ;851
000802  a902              ADD      r1,sp,#8              ;851
000804  2004              MOVS     r0,#4                 ;851
000806  f7fffffe          BL       comSendBuf
00080a  f2af4008          ADR      r0,|L7.1028|
00080e  f7fffffe          BL       App_printf
000812  2500              MOVS     r5,#0                 ;853
000814  e006              B        |L7.2084|
                  |L7.2070|
000816  a802              ADD      r0,sp,#8              ;855
000818  5d41              LDRB     r1,[r0,r5]            ;855
00081a  f2af4008          ADR      r0,|L7.1044|
00081e  f7fffffe          BL       App_printf
000822  1c6d              ADDS     r5,r5,#1              ;853
                  |L7.2084|
000824  f89d0108          LDRB     r0,[sp,#0x108]        ;853
000828  42a8              CMP      r0,r5                 ;853
00082a  dcf4              BGT      |L7.2070|
00082c  f2af4014          ADR      r0,|L7.1052|
000830  f7fffffe          BL       App_printf
000834  2001              MOVS     r0,#1                 ;858
000836  e410              B        |L7.90|
                  |L7.2104|
000838  434f4d5f          DCB      "COM_buffer sweepning: \r\n",0
00083c  62756666
000840  65722073
000844  77656570
000848  6e696e67
00084c  3a200d0a
000850  00      
000851  00                DCB      0
000852  00                DCB      0
000853  00                DCB      0
                  |L7.2132|
                          DCD      Scan_Freq_flag
                  |L7.2136|
                          DCD      CAN_ID
                  |L7.2140|
                          DCD      Scan_FrqBack
                  |L7.2144|
                          DCD      Scan_FrqBack1
                  |L7.2148|
                          DCD      Scan_FrqBack2
                  |L7.2152|
                          DCD      Scan_FrqBack3
                  |L7.2156|
                          DCD      Scan_FrqBack4
                  |L7.2160|
                          DCD      Scan_FrqBack5
                  |L7.2164|
                          DCD      Scan_FrqBack6
                  |L7.2168|
                          DCD      Scan_FrqBack7
                  |L7.2172|
                          DCD      Scan_FrqBack8
                  |L7.2176|
                          DCD      Scan_FrqBack9
                  |L7.2180|
                          DCD      Scan_FrqBack10
                  |L7.2184|
                          DCD      Scan_FrqBack11
                  |L7.2188|
                          DCD      Scan_FrqBack12
                  |L7.2192|
                          DCD      Scan_FrqBack13
                  |L7.2196|
                          DCD      Sacn_stopBack
                  |L7.2200|
                          DCD      Add_PowerBack
                  |L7.2204|
                          DCD      Sub_PowerBack
                  |L7.2208|
                          DCD      Run_DiagramBack
                  |L7.2212|
0008a4  2002              MOVS     r0,#2                 ;861
0008a6  e4b3              B        |L7.528|
;;;863    
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=3

                  Assemble_buffer
                          %        264
                  pp_PC_dat
                          %        257

                          AREA ||.data||, DATA, ALIGN=0

                  Scan_Freq_flag
000000  00                DCB      0x00
                  CAN_ID
000001  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\Data_pars.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_Data_pars_c_CAN_ID____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_Data_pars_c_CAN_ID____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_Data_pars_c_CAN_ID____REVSH|
#line 128
|__asm___11_Data_pars_c_CAN_ID____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
