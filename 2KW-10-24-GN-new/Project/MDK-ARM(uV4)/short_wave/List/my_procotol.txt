; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\short_wave\obj\my_procotol.o --asm_dir=.\short_wave\List\ --list_dir=.\short_wave\List\ --depend=.\short_wave\obj\my_procotol.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\adc -I..\..\User\rtc -I..\..\User\internal_flash -I..\..\User\iwdg -I..\..\Task -ID:\Keil5\Keil_v5\ARM\RV31\INC -ID:\Keil5\Keil_v5\ARM\CMSIS\Include -ID:\Keil5\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=515 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\short_wave\obj\my_procotol.crf ..\..\User\my_procotol.c]
                          THUMB

                          AREA ||i.Band_scan||, CODE, READONLY, ALIGN=2

                  Band_scan PROC
;;;1034   /*------------------------------------扫频函数----------------------------------------*/
;;;1035   int Band_scan(TickType_t xTicksToWait,int index)
000000  b503              PUSH     {r0,r1,lr}
;;;1036   {
000002  f2ad5d04          SUB      sp,sp,#0x504
;;;1037   //	//八段，17个点测试
;;;1038   //	float swr_compare[17]={3.2,3.6999,4.2,4.8499,5.5,6.3499,7.2,8.3499,9.5,10.9999,12.5,14.4999,16.5,\
;;;1039   //	19.1499,21.8,23.95,26.1};
;;;1040       //八段
;;;1041       //float swr_compare[8]={3.6999,4.8499,6.3499,8.3499,10.9999,14.4999,19.1499,23.95};
;;;1042   
;;;1043   #if defined(Eight_seg)
;;;1044       float swr_compare[8]= {3.6999,4.8499,6.3499,8.3499,10.9999,14.4999,19.1499,23.95};
;;;1045       int SIZE =8;
;;;1046   #else
;;;1047       int SIZE = ceil((freq_end-freq_begin))+1;	//freq_begin和freq_end是全局变量
000006  48f9              LDR      r0,|L1.1004|
000008  6801              LDR      r1,[r0,#0]  ; freq_begin
00000a  48f9              LDR      r0,|L1.1008|
00000c  6800              LDR      r0,[r0,#0]  ; freq_end
00000e  f7fffffe          BL       __aeabi_fsub
000012  9007              STR      r0,[sp,#0x1c]
000014  f7fffffe          BL       __aeabi_f2d
000018  e9cd0108          STRD     r0,r1,[sp,#0x20]
00001c  f7fffffe          BL       ceil
000020  2200              MOVS     r2,#0
000022  4bf4              LDR      r3,|L1.1012|
000024  e9cd010a          STRD     r0,r1,[sp,#0x28]
000028  f7fffffe          BL       __aeabi_dadd
00002c  e9cd010c          STRD     r0,r1,[sp,#0x30]
000030  f7fffffe          BL       __aeabi_d2iz
000034  f8cd04fc          STR      r0,[sp,#0x4fc]
;;;1048       float temp_begain = freq_begin;	
000038  48ec              LDR      r0,|L1.1004|
00003a  6800              LDR      r0,[r0,#0]  ; freq_begin
00003c  f8cd04f8          STR      r0,[sp,#0x4f8]
;;;1049   #endif
;;;1050       float temp_Forward_power;
;;;1051       float temp_Reverse_power;
;;;1052       float temp_Standing_wave_ratio;
;;;1053   
;;;1054   	int ret = 0;
000040  2000              MOVS     r0,#0
000042  f8cd04e8          STR      r0,[sp,#0x4e8]
;;;1055   	float eADC0_buff[100];
;;;1056   	float eADC1_buff[100];
;;;1057   //	float eADC2_buff[100];
;;;1058   	float eADC3_buff[100];
;;;1059   	
;;;1060   	//channel method都在MT2000_Cmd_Channel()固定写死了的，不需要再设置
;;;1061   	MT2000_Tx.mode = '1';	//固频
000046  2031              MOVS     r0,#0x31
000048  49eb              LDR      r1,|L1.1016|
00004a  7088              STRB     r0,[r1,#2]
;;;1062   	MT2000_Tx.power = '2';	//功率等级 '1':1/4		'2':1/2		'3':1
00004c  2132              MOVS     r1,#0x32
00004e  48ea              LDR      r0,|L1.1016|
000050  7101              STRB     r1,[r0,#4]
;;;1063   
;;;1064   	MT2000_Tx.fre1[0] = '0' + (int)temp_begain / 10;
000052  f8dd04f8          LDR      r0,[sp,#0x4f8]
000056  f7fffffe          BL       __aeabi_f2iz
00005a  210a              MOVS     r1,#0xa
00005c  fb90f0f1          SDIV     r0,r0,r1
000060  3030              ADDS     r0,r0,#0x30
000062  49e5              LDR      r1,|L1.1016|
000064  7208              STRB     r0,[r1,#8]
;;;1065   	MT2000_Tx.fre1[1] = '0' + (int)temp_begain % 10;
000066  f8dd04f8          LDR      r0,[sp,#0x4f8]
00006a  f7fffffe          BL       __aeabi_f2iz
00006e  210a              MOVS     r1,#0xa
000070  fb90f2f1          SDIV     r2,r0,r1
000074  fb010012          MLS      r0,r1,r2,r0
000078  3030              ADDS     r0,r0,#0x30
00007a  b2c1              UXTB     r1,r0
00007c  48de              LDR      r0,|L1.1016|
00007e  7241              STRB     r1,[r0,#9]
;;;1066   	MT2000_Tx.fre1[2] = '0' + (int)(10*temp_begain) % 10;
000080  48de              LDR      r0,|L1.1020|
000082  f8dd14f8          LDR      r1,[sp,#0x4f8]
000086  f7fffffe          BL       __aeabi_fmul
00008a  900d              STR      r0,[sp,#0x34]
00008c  f7fffffe          BL       __aeabi_f2iz
000090  210a              MOVS     r1,#0xa
000092  fb90f2f1          SDIV     r2,r0,r1
000096  fb010012          MLS      r0,r1,r2,r0
00009a  3030              ADDS     r0,r0,#0x30
00009c  b2c1              UXTB     r1,r0
00009e  48d6              LDR      r0,|L1.1016|
0000a0  7281              STRB     r1,[r0,#0xa]
;;;1067   	MT2000_Tx.fre1[3] = '0' + 0;
0000a2  2130              MOVS     r1,#0x30
0000a4  72c1              STRB     r1,[r0,#0xb]
;;;1068   	MT2000_Tx.fre1[4] = '0' + 0;
0000a6  7301              STRB     r1,[r0,#0xc]
;;;1069   	MT2000_Tx.fre1[5] = '0' + 0;
0000a8  7341              STRB     r1,[r0,#0xd]
;;;1070   	MT2000_Tx.fre1[6] = '0' + 0;
0000aa  7381              STRB     r1,[r0,#0xe]
;;;1071   	MT2000_Tx.fre1[7] = '0' + 0;
0000ac  73c1              STRB     r1,[r0,#0xf]
;;;1072   	
;;;1073   	for(int i=0; i<SIZE; i++)
0000ae  2000              MOVS     r0,#0
0000b0  900d              STR      r0,[sp,#0x34]
0000b2  e3f5              B        |L1.2208|
                  |L1.180|
;;;1074   	{
;;;1075   		if(temp_begain<3.2)
0000b4  f8dd04f8          LDR      r0,[sp,#0x4f8]
0000b8  f7fffffe          BL       __aeabi_f2d
0000bc  4ad0              LDR      r2,|L1.1024|
0000be  4bd1              LDR      r3,|L1.1028|
0000c0  e9cd010a          STRD     r0,r1,[sp,#0x28]
0000c4  f7fffffe          BL       __aeabi_cdcmple
0000c8  d203              BCS      |L1.210|
;;;1076   		{
;;;1077   			temp_begain=3.2;
0000ca  48cf              LDR      r0,|L1.1032|
0000cc  f8cd04f8          STR      r0,[sp,#0x4f8]
0000d0  e00d              B        |L1.238|
                  |L1.210|
;;;1078   		}
;;;1079   		else if(temp_begain>26.1)
0000d2  f8dd04f8          LDR      r0,[sp,#0x4f8]
0000d6  f7fffffe          BL       __aeabi_f2d
0000da  4ac9              LDR      r2,|L1.1024|
0000dc  4bcb              LDR      r3,|L1.1036|
0000de  e9cd010a          STRD     r0,r1,[sp,#0x28]
0000e2  f7fffffe          BL       __aeabi_cdrcmple
0000e6  d202              BCS      |L1.238|
;;;1080   		{
;;;1081   			temp_begain=26.1;
0000e8  48c9              LDR      r0,|L1.1040|
0000ea  f8cd04f8          STR      r0,[sp,#0x4f8]
                  |L1.238|
;;;1082   		}
;;;1083   #if defined(Eight_seg)
;;;1084   		Pre_EmissionSend(&EmissionCmd,FREQUENCY,swr_compare[i]);//选择第一频段的最低值	//旧协议
;;;1085   #else
;;;1086   		MT2000_Cmd_Channel();
0000ee  f7fffffe          BL       MT2000_Cmd_Channel
;;;1087   		ret = MT2000_Wait_Ack(MT2000_ACK_OK);
0000f2  2001              MOVS     r0,#1
0000f4  f7fffffe          BL       MT2000_Wait_Ack
0000f8  f8cd04e8          STR      r0,[sp,#0x4e8]
;;;1088   		
;;;1089   		temp_begain +=1;
0000fc  f04f517e          MOV      r1,#0x3f800000
000100  f8dd04f8          LDR      r0,[sp,#0x4f8]
000104  f7fffffe          BL       __aeabi_fadd
000108  f8cd04f8          STR      r0,[sp,#0x4f8]
;;;1090   		MT2000_Tx.fre1[0] = '0' + (int)temp_begain / 10;
00010c  f8dd04f8          LDR      r0,[sp,#0x4f8]
000110  f7fffffe          BL       __aeabi_f2iz
000114  210a              MOVS     r1,#0xa
000116  fb90f0f1          SDIV     r0,r0,r1
00011a  3030              ADDS     r0,r0,#0x30
00011c  49b6              LDR      r1,|L1.1016|
00011e  7208              STRB     r0,[r1,#8]
;;;1091   		MT2000_Tx.fre1[1] = '0' + (int)temp_begain % 10;
000120  f8dd04f8          LDR      r0,[sp,#0x4f8]
000124  f7fffffe          BL       __aeabi_f2iz
000128  210a              MOVS     r1,#0xa
00012a  fb90f2f1          SDIV     r2,r0,r1
00012e  fb010012          MLS      r0,r1,r2,r0
000132  3030              ADDS     r0,r0,#0x30
000134  b2c1              UXTB     r1,r0
000136  48b0              LDR      r0,|L1.1016|
000138  7241              STRB     r1,[r0,#9]
;;;1092   		MT2000_Tx.fre1[2] = '0' + (int)(10*temp_begain) % 10;
00013a  48b0              LDR      r0,|L1.1020|
00013c  f8dd14f8          LDR      r1,[sp,#0x4f8]
000140  f7fffffe          BL       __aeabi_fmul
000144  900c              STR      r0,[sp,#0x30]
000146  f7fffffe          BL       __aeabi_f2iz
00014a  210a              MOVS     r1,#0xa
00014c  fb90f2f1          SDIV     r2,r0,r1
000150  fb010012          MLS      r0,r1,r2,r0
000154  3030              ADDS     r0,r0,#0x30
000156  b2c1              UXTB     r1,r0
000158  48a7              LDR      r0,|L1.1016|
00015a  7281              STRB     r1,[r0,#0xa]
;;;1093   #endif
;;;1094   		if( ret == MT2000_ACK_OK )
00015c  f8dd04e8          LDR      r0,[sp,#0x4e8]
000160  2801              CMP      r0,#1
000162  d17c              BNE      |L1.606|
;;;1095   		{
;;;1096   			MT2000_Cmd_Tune();			//调谐
000164  f7fffffe          BL       MT2000_Cmd_Tune
;;;1097   			ret = MT2000_Wait_Ack(MT2000_ACK_OK);
000168  2001              MOVS     r0,#1
00016a  f7fffffe          BL       MT2000_Wait_Ack
00016e  f8cd04e8          STR      r0,[sp,#0x4e8]
;;;1098   			if( ret == MT2000_ACK_OK )
000172  f8dd04e8          LDR      r0,[sp,#0x4e8]
000176  2801              CMP      r0,#1
000178  d172              BNE      |L1.608|
;;;1099   			{
;;;1100   				MT2000_Cmd_Emit();		//发射
00017a  f7fffffe          BL       MT2000_Cmd_Emit
;;;1101   				ret = MT2000_Wait_Ack(MT2000_ACK_OK);
00017e  2001              MOVS     r0,#1
000180  f7fffffe          BL       MT2000_Wait_Ack
000184  f8cd04e8          STR      r0,[sp,#0x4e8]
;;;1102   				if( ret == MT2000_ACK_OK )
000188  f8dd04e8          LDR      r0,[sp,#0x4e8]
00018c  2801              CMP      r0,#1
00018e  d168              BNE      |L1.610|
;;;1103   				{
;;;1104   					vTaskDelay(3000);//发射3s之后开始采集
000190  f64030b8          MOV      r0,#0xbb8
000194  f7fffffe          BL       vTaskDelay
;;;1105   						
;;;1106   					for(int i=0; i<100; i++)
000198  2000              MOVS     r0,#0
00019a  900c              STR      r0,[sp,#0x30]
00019c  e06a              B        |L1.628|
                  |L1.414|
;;;1107   					{
;;;1108   						eADC0_buff[i] =(float) ADC_ConvertedValue[0]/4096*3.3*3;
00019e  489d              LDR      r0,|L1.1044|
0001a0  8800              LDRH     r0,[r0,#0]  ; ADC_ConvertedValue
0001a2  9003              STR      r0,[sp,#0xc]
0001a4  f7fffffe          BL       __aeabi_ui2f
0001a8  f04f418b          MOV      r1,#0x45800000
0001ac  9004              STR      r0,[sp,#0x10]
0001ae  f7fffffe          BL       __aeabi_fdiv
0001b2  9005              STR      r0,[sp,#0x14]
0001b4  f7fffffe          BL       __aeabi_f2d
0001b8  f04f3266          MOV      r2,#0x66666666
0001bc  4b96              LDR      r3,|L1.1048|
0001be  e9cd0106          STRD     r0,r1,[sp,#0x18]
0001c2  f7fffffe          BL       __aeabi_dmul
0001c6  2200              MOVS     r2,#0
0001c8  4b94              LDR      r3,|L1.1052|
0001ca  e9cd0108          STRD     r0,r1,[sp,#0x20]
0001ce  f7fffffe          BL       __aeabi_dmul
0001d2  e9cd010a          STRD     r0,r1,[sp,#0x28]
0001d6  f7fffffe          BL       __aeabi_d2f
0001da  aad6              ADD      r2,sp,#0x358
0001dc  990c              LDR      r1,[sp,#0x30]
0001de  f8420021          STR      r0,[r2,r1,LSL #2]
;;;1109   						eADC1_buff[i] =(float) ADC_ConvertedValue[1]/4096*3.3;
0001e2  488c              LDR      r0,|L1.1044|
0001e4  8840              LDRH     r0,[r0,#2]  ; ADC_ConvertedValue
0001e6  9005              STR      r0,[sp,#0x14]
0001e8  f7fffffe          BL       __aeabi_ui2f
0001ec  f04f418b          MOV      r1,#0x45800000
0001f0  9006              STR      r0,[sp,#0x18]
0001f2  f7fffffe          BL       __aeabi_fdiv
0001f6  9007              STR      r0,[sp,#0x1c]
0001f8  f7fffffe          BL       __aeabi_f2d
0001fc  f04f3266          MOV      r2,#0x66666666
000200  4b85              LDR      r3,|L1.1048|
000202  e9cd0108          STRD     r0,r1,[sp,#0x20]
000206  f7fffffe          BL       __aeabi_dmul
00020a  e9cd010a          STRD     r0,r1,[sp,#0x28]
00020e  f7fffffe          BL       __aeabi_d2f
000212  aa72              ADD      r2,sp,#0x1c8
000214  990c              LDR      r1,[sp,#0x30]
000216  f8420021          STR      r0,[r2,r1,LSL #2]
;;;1110   						//	eADC2_buff[i] =(float) ADC_ConvertedValue[2]/4096*3.3*2;
;;;1111   						eADC3_buff[i] =(float) ADC_ConvertedValue[3]/4096*3.3*2;
00021a  487e              LDR      r0,|L1.1044|
00021c  88c0              LDRH     r0,[r0,#6]  ; ADC_ConvertedValue
00021e  9003              STR      r0,[sp,#0xc]
000220  f7fffffe          BL       __aeabi_ui2f
000224  f04f418b          MOV      r1,#0x45800000
000228  9004              STR      r0,[sp,#0x10]
00022a  f7fffffe          BL       __aeabi_fdiv
00022e  9005              STR      r0,[sp,#0x14]
000230  f7fffffe          BL       __aeabi_f2d
000234  f04f3266          MOV      r2,#0x66666666
000238  4b77              LDR      r3,|L1.1048|
00023a  e9cd0106          STRD     r0,r1,[sp,#0x18]
00023e  f7fffffe          BL       __aeabi_dmul
000242  2200              MOVS     r2,#0
000244  f04f4380          MOV      r3,#0x40000000
000248  e9cd0108          STRD     r0,r1,[sp,#0x20]
00024c  f7fffffe          BL       __aeabi_dmul
000250  e9cd010a          STRD     r0,r1,[sp,#0x28]
000254  f7fffffe          BL       __aeabi_d2f
000258  aa0e              ADD      r2,sp,#0x38
00025a  990c              LDR      r1,[sp,#0x30]
00025c  e002              B        |L1.612|
                  |L1.606|
00025e  e3fd              B        |L1.2652|
                  |L1.608|
000260  e3fd              B        |L1.2654|
                  |L1.610|
000262  e3fd              B        |L1.2656|
                  |L1.612|
000264  f8420021          STR      r0,[r2,r1,LSL #2]
;;;1112   						vTaskDelay(1);
000268  2001              MOVS     r0,#1
00026a  f7fffffe          BL       vTaskDelay
00026e  980c              LDR      r0,[sp,#0x30]         ;1106
000270  1c40              ADDS     r0,r0,#1              ;1106
000272  900c              STR      r0,[sp,#0x30]         ;1106
                  |L1.628|
000274  980c              LDR      r0,[sp,#0x30]         ;1106
000276  2864              CMP      r0,#0x64              ;1106
000278  db91              BLT      |L1.414|
;;;1113   					}
;;;1114   					
;;;1115   					for(int i=1; i<100; i++)   //100次数据求和
00027a  2001              MOVS     r0,#1
00027c  900c              STR      r0,[sp,#0x30]
00027e  e023              B        |L1.712|
                  |L1.640|
;;;1116   					{
;;;1117   						eADC0_buff[0]+=eADC0_buff[i];
000280  a9d6              ADD      r1,sp,#0x358
000282  980c              LDR      r0,[sp,#0x30]
000284  f8510020          LDR      r0,[r1,r0,LSL #2]
000288  900b              STR      r0,[sp,#0x2c]
00028a  98d6              LDR      r0,[sp,#0x358]
00028c  900a              STR      r0,[sp,#0x28]
00028e  990b              LDR      r1,[sp,#0x2c]
000290  f7fffffe          BL       __aeabi_fadd
000294  90d6              STR      r0,[sp,#0x358]
;;;1118   						eADC1_buff[0]+=eADC1_buff[i];
000296  a972              ADD      r1,sp,#0x1c8
000298  980c              LDR      r0,[sp,#0x30]
00029a  f8510020          LDR      r0,[r1,r0,LSL #2]
00029e  900b              STR      r0,[sp,#0x2c]
0002a0  9872              LDR      r0,[sp,#0x1c8]
0002a2  900a              STR      r0,[sp,#0x28]
0002a4  990b              LDR      r1,[sp,#0x2c]
0002a6  f7fffffe          BL       __aeabi_fadd
0002aa  9072              STR      r0,[sp,#0x1c8]
;;;1119   						//	eADC2_buff[0]+=eADC2_buff[i];
;;;1120   						eADC3_buff[0]+=eADC3_buff[i];
0002ac  a90e              ADD      r1,sp,#0x38
0002ae  980c              LDR      r0,[sp,#0x30]
0002b0  f8510020          LDR      r0,[r1,r0,LSL #2]
0002b4  900b              STR      r0,[sp,#0x2c]
0002b6  980e              LDR      r0,[sp,#0x38]
0002b8  900a              STR      r0,[sp,#0x28]
0002ba  990b              LDR      r1,[sp,#0x2c]
0002bc  f7fffffe          BL       __aeabi_fadd
0002c0  900e              STR      r0,[sp,#0x38]
0002c2  980c              LDR      r0,[sp,#0x30]         ;1115
0002c4  1c40              ADDS     r0,r0,#1              ;1115
0002c6  900c              STR      r0,[sp,#0x30]         ;1115
                  |L1.712|
0002c8  980c              LDR      r0,[sp,#0x30]         ;1115
0002ca  2864              CMP      r0,#0x64              ;1115
0002cc  dbd8              BLT      |L1.640|
;;;1121   					}
;;;1122   					
;;;1123   					//取100次平均值
;;;1124   					Show_Parameter.Forward_Power=eADC0_buff[0]/100;//正向功率
0002ce  98d6              LDR      r0,[sp,#0x358]
0002d0  4953              LDR      r1,|L1.1056|
0002d2  900c              STR      r0,[sp,#0x30]
0002d4  f7fffffe          BL       __aeabi_fdiv
0002d8  4952              LDR      r1,|L1.1060|
0002da  6008              STR      r0,[r1,#0]  ; Show_Parameter
;;;1125   					Show_Parameter.Reverse_Power=eADC1_buff[0]/100;//反向功率
0002dc  9872              LDR      r0,[sp,#0x1c8]
0002de  4950              LDR      r1,|L1.1056|
0002e0  900c              STR      r0,[sp,#0x30]
0002e2  f7fffffe          BL       __aeabi_fdiv
0002e6  494f              LDR      r1,|L1.1060|
0002e8  6048              STR      r0,[r1,#4]  ; Show_Parameter
;;;1126   					//Show_Parameter.M_45V=eADC2_buff[0]/100;//电压
;;;1127   					Show_Parameter.M_45I=eADC3_buff[0]/100;//电流
0002ea  980e              LDR      r0,[sp,#0x38]
0002ec  494c              LDR      r1,|L1.1056|
0002ee  900c              STR      r0,[sp,#0x30]
0002f0  f7fffffe          BL       __aeabi_fdiv
0002f4  494b              LDR      r1,|L1.1060|
0002f6  60c8              STR      r0,[r1,#0xc]  ; Show_Parameter
;;;1128   
;;;1129   					/*觉得应该使用功率而不是使用电压的比值，因为正反向功率比值不是线性的，如下可见不同段位驻波比不同*/
;;;1130   					/*但是直接使用电压比值似乎更精确？*/
;;;1131   					if(Show_Parameter.Forward_Power>5)   //正向功率的电压大于5V时，400的步进
0002f8  4608              MOV      r0,r1
0002fa  6800              LDR      r0,[r0,#0]  ; Show_Parameter
0002fc  494a              LDR      r1,|L1.1064|
0002fe  900c              STR      r0,[sp,#0x30]
000300  f7fffffe          BL       __aeabi_cfrcmple
000304  d227              BCS      |L1.854|
;;;1132   					{
;;;1133   						Work_paraBack.Forward_power[0]=(Show_Parameter.Forward_Power-5)*Forward_P+1000+20;
000306  4847              LDR      r0,|L1.1060|
000308  6800              LDR      r0,[r0,#0]  ; Show_Parameter
00030a  4947              LDR      r1,|L1.1064|
00030c  9009              STR      r0,[sp,#0x24]
00030e  f7fffffe          BL       __aeabi_fsub
000312  4946              LDR      r1,|L1.1068|
000314  900a              STR      r0,[sp,#0x28]
000316  f7fffffe          BL       __aeabi_fmul
00031a  4945              LDR      r1,|L1.1072|
00031c  900b              STR      r0,[sp,#0x2c]
00031e  f7fffffe          BL       __aeabi_fadd
000322  4944              LDR      r1,|L1.1076|
000324  900c              STR      r0,[sp,#0x30]
000326  f7fffffe          BL       __aeabi_fadd
00032a  4943              LDR      r1,|L1.1080|
00032c  6188              STR      r0,[r1,#0x18]  ; Work_paraBack
;;;1134   						//Work_paraBack.Reverse_power[0]=Show_Parameter.Reverse_Power*Forward_P;//反向功率倍数待现场考察
;;;1135   						Work_paraBack.Reverse_power[0]=Show_Parameter.Reverse_Power*Work_paraBack.Forward_power[0]/Show_Parameter.Forward_Power;
00032e  4608              MOV      r0,r1
000330  6980              LDR      r0,[r0,#0x18]  ; Work_paraBack
000332  900b              STR      r0,[sp,#0x2c]
000334  483b              LDR      r0,|L1.1060|
000336  6840              LDR      r0,[r0,#4]  ; Show_Parameter
000338  900a              STR      r0,[sp,#0x28]
00033a  990b              LDR      r1,[sp,#0x2c]
00033c  f7fffffe          BL       __aeabi_fmul
000340  900c              STR      r0,[sp,#0x30]
000342  4838              LDR      r0,|L1.1060|
000344  6800              LDR      r0,[r0,#0]  ; Show_Parameter
000346  4601              MOV      r1,r0
000348  900b              STR      r0,[sp,#0x2c]
00034a  980c              LDR      r0,[sp,#0x30]
00034c  f7fffffe          BL       __aeabi_fdiv
000350  4939              LDR      r1,|L1.1080|
000352  61c8              STR      r0,[r1,#0x1c]  ; Work_paraBack
000354  e0a8              B        |L1.1192|
                  |L1.854|
;;;1136   					}
;;;1137   					else if(Show_Parameter.Forward_Power<=5&&Show_Parameter.Forward_Power>3.2)     //小于5V时，200倍的步进
000356  4833              LDR      r0,|L1.1060|
000358  6800              LDR      r0,[r0,#0]  ; Show_Parameter
00035a  4933              LDR      r1,|L1.1064|
00035c  900c              STR      r0,[sp,#0x30]
00035e  f7fffffe          BL       __aeabi_cfcmple
000362  d873              BHI      |L1.1100|
000364  482f              LDR      r0,|L1.1060|
000366  6800              LDR      r0,[r0,#0]  ; Show_Parameter
000368  9009              STR      r0,[sp,#0x24]
00036a  f7fffffe          BL       __aeabi_f2d
00036e  4a24              LDR      r2,|L1.1024|
000370  4b24              LDR      r3,|L1.1028|
000372  e9cd010a          STRD     r0,r1,[sp,#0x28]
000376  f7fffffe          BL       __aeabi_cdrcmple
00037a  d267              BCS      |L1.1100|
;;;1138   					{
;;;1139   						Work_paraBack.Forward_power[0]=(Show_Parameter.Forward_Power-3.2)*277.8+500+20;
00037c  4829              LDR      r0,|L1.1060|
00037e  6800              LDR      r0,[r0,#0]  ; Show_Parameter
000380  9001              STR      r0,[sp,#4]
000382  f7fffffe          BL       __aeabi_f2d
000386  4a1e              LDR      r2,|L1.1024|
000388  4b1e              LDR      r3,|L1.1028|
00038a  e9cd0102          STRD     r0,r1,[sp,#8]
00038e  f7fffffe          BL       __aeabi_dsub
000392  4a2a              LDR      r2,|L1.1084|
000394  4b2a              LDR      r3,|L1.1088|
000396  e9cd0104          STRD     r0,r1,[sp,#0x10]
00039a  f7fffffe          BL       __aeabi_dmul
00039e  2200              MOVS     r2,#0
0003a0  4b28              LDR      r3,|L1.1092|
0003a2  e9cd0106          STRD     r0,r1,[sp,#0x18]
0003a6  f7fffffe          BL       __aeabi_dadd
0003aa  2200              MOVS     r2,#0
0003ac  4b26              LDR      r3,|L1.1096|
0003ae  e9cd0108          STRD     r0,r1,[sp,#0x20]
0003b2  f7fffffe          BL       __aeabi_dadd
0003b6  e9cd010a          STRD     r0,r1,[sp,#0x28]
0003ba  f7fffffe          BL       __aeabi_d2f
0003be  491e              LDR      r1,|L1.1080|
0003c0  6188              STR      r0,[r1,#0x18]  ; Work_paraBack
;;;1140   						//Work_paraBack.Reverse_power[0]=Show_Parameter.Reverse_Power*277.8;//反向功率倍数待现场考察
;;;1141   						Work_paraBack.Reverse_power[0]=Show_Parameter.Reverse_Power*Work_paraBack.Forward_power[0]/Show_Parameter.Forward_Power;
0003c2  4608              MOV      r0,r1
0003c4  6980              LDR      r0,[r0,#0x18]  ; Work_paraBack
0003c6  900b              STR      r0,[sp,#0x2c]
0003c8  4816              LDR      r0,|L1.1060|
0003ca  6840              LDR      r0,[r0,#4]  ; Show_Parameter
0003cc  900a              STR      r0,[sp,#0x28]
0003ce  990b              LDR      r1,[sp,#0x2c]
0003d0  f7fffffe          BL       __aeabi_fmul
0003d4  900c              STR      r0,[sp,#0x30]
0003d6  4813              LDR      r0,|L1.1060|
0003d8  6800              LDR      r0,[r0,#0]  ; Show_Parameter
0003da  4601              MOV      r1,r0
0003dc  900b              STR      r0,[sp,#0x2c]
0003de  980c              LDR      r0,[sp,#0x30]
0003e0  f7fffffe          BL       __aeabi_fdiv
0003e4  4914              LDR      r1,|L1.1080|
0003e6  61c8              STR      r0,[r1,#0x1c]  ; Work_paraBack
0003e8  e05e              B        |L1.1192|
0003ea  e02f              B        |L1.1100|
                  |L1.1004|
                          DCD      freq_begin
                  |L1.1008|
                          DCD      freq_end
                  |L1.1012|
                          DCD      0x3ff00000
                  |L1.1016|
                          DCD      MT2000_Tx
                  |L1.1020|
                          DCD      0x41200000
                  |L1.1024|
                          DCD      0x9999999a
                  |L1.1028|
                          DCD      0x40099999
                  |L1.1032|
                          DCD      0x404ccccd
                  |L1.1036|
                          DCD      0x403a1999
                  |L1.1040|
                          DCD      0x41d0cccd
                  |L1.1044|
                          DCD      ADC_ConvertedValue
                  |L1.1048|
                          DCD      0x400a6666
                  |L1.1052|
                          DCD      0x40080000
                  |L1.1056|
                          DCD      0x42c80000
                  |L1.1060|
                          DCD      Show_Parameter
                  |L1.1064|
                          DCD      0x40a00000
                  |L1.1068|
                          DCD      0x43c80000
                  |L1.1072|
                          DCD      0x447a0000
                  |L1.1076|
                          DCD      0x41a00000
                  |L1.1080|
                          DCD      Work_paraBack
                  |L1.1084|
                          DCD      0xcccccccd
                  |L1.1088|
                          DCD      0x40715ccc
                  |L1.1092|
                          DCD      0x407f4000
                  |L1.1096|
                          DCD      0x40340000
                  |L1.1100|
;;;1142   					}
;;;1143   					else     //小于3.2v
;;;1144   					{
;;;1145   						Work_paraBack.Forward_power[0]=(Show_Parameter.Forward_Power)*500/3.2+20;
00044c  48fe              LDR      r0,|L1.2120|
00044e  6800              LDR      r0,[r0,#0]  ; Show_Parameter
000450  49fe              LDR      r1,|L1.2124|
000452  9004              STR      r0,[sp,#0x10]
000454  f7fffffe          BL       __aeabi_fmul
000458  9005              STR      r0,[sp,#0x14]
00045a  f7fffffe          BL       __aeabi_f2d
00045e  4afc              LDR      r2,|L1.2128|
000460  4bfc              LDR      r3,|L1.2132|
000462  e9cd0106          STRD     r0,r1,[sp,#0x18]
000466  f7fffffe          BL       __aeabi_ddiv
00046a  2200              MOVS     r2,#0
00046c  4bfa              LDR      r3,|L1.2136|
00046e  e9cd0108          STRD     r0,r1,[sp,#0x20]
000472  f7fffffe          BL       __aeabi_dadd
000476  e9cd010a          STRD     r0,r1,[sp,#0x28]
00047a  f7fffffe          BL       __aeabi_d2f
00047e  49f7              LDR      r1,|L1.2140|
000480  6188              STR      r0,[r1,#0x18]  ; Work_paraBack
;;;1146   						//Work_paraBack.Reverse_power[0]=Show_Parameter.Reverse_Power*500/3.2;//反向功率倍数待现场考察
;;;1147   						Work_paraBack.Reverse_power[0]=Show_Parameter.Reverse_Power*Work_paraBack.Forward_power[0]/Show_Parameter.Forward_Power;
000482  4608              MOV      r0,r1
000484  6980              LDR      r0,[r0,#0x18]  ; Work_paraBack
000486  900b              STR      r0,[sp,#0x2c]
000488  48ef              LDR      r0,|L1.2120|
00048a  6840              LDR      r0,[r0,#4]  ; Show_Parameter
00048c  900a              STR      r0,[sp,#0x28]
00048e  990b              LDR      r1,[sp,#0x2c]
000490  f7fffffe          BL       __aeabi_fmul
000494  900c              STR      r0,[sp,#0x30]
000496  48ec              LDR      r0,|L1.2120|
000498  6800              LDR      r0,[r0,#0]  ; Show_Parameter
00049a  4601              MOV      r1,r0
00049c  900b              STR      r0,[sp,#0x2c]
00049e  980c              LDR      r0,[sp,#0x30]
0004a0  f7fffffe          BL       __aeabi_fdiv
0004a4  49ed              LDR      r1,|L1.2140|
0004a6  61c8              STR      r0,[r1,#0x1c]  ; Work_paraBack
                  |L1.1192|
;;;1148   					}
;;;1149   					
;;;1150   					Show_Parameter.Standing_wave_ratio = get_Standing_wave_ratio(Work_paraBack.Forward_power[0],Work_paraBack.Reverse_power[0]);
0004a8  48ec              LDR      r0,|L1.2140|
0004aa  69c0              LDR      r0,[r0,#0x1c]  ; Work_paraBack
0004ac  900c              STR      r0,[sp,#0x30]
0004ae  48eb              LDR      r0,|L1.2140|
0004b0  6980              LDR      r0,[r0,#0x18]  ; Work_paraBack
0004b2  900b              STR      r0,[sp,#0x2c]
0004b4  990c              LDR      r1,[sp,#0x30]
0004b6  f7fffffe          BL       get_Standing_wave_ratio
0004ba  49e3              LDR      r1,|L1.2120|
0004bc  6108              STR      r0,[r1,#0x10]  ; Show_Parameter
;;;1151   
;;;1152   					
;;;1153   					if(Show_Parameter.Standing_wave_ratio>=2.0||Show_Parameter.Standing_wave_ratio<1)	//驻波比报警
0004be  4608              MOV      r0,r1
0004c0  6900              LDR      r0,[r0,#0x10]  ; Show_Parameter
0004c2  9009              STR      r0,[sp,#0x24]
0004c4  f7fffffe          BL       __aeabi_f2d
0004c8  2200              MOVS     r2,#0
0004ca  f04f4380          MOV      r3,#0x40000000
0004ce  e9cd010a          STRD     r0,r1,[sp,#0x28]
0004d2  f7fffffe          BL       __aeabi_cdrcmple
0004d6  d97d              BLS      |L1.1492|
0004d8  48db              LDR      r0,|L1.2120|
0004da  6900              LDR      r0,[r0,#0x10]  ; Show_Parameter
0004dc  f04f517e          MOV      r1,#0x3f800000
0004e0  900c              STR      r0,[sp,#0x30]
0004e2  f7fffffe          BL       __aeabi_cfcmple
0004e6  d375              BCC      |L1.1492|
;;;1154   					{
;;;1155   						//需要立即停止
;;;1156   					}
;;;1157   					else	//正常
;;;1158   					{
;;;1159   						for(int count=0; count<7; count++)
0004e8  2000              MOVS     r0,#0
0004ea  900c              STR      r0,[sp,#0x30]
0004ec  e1fd              B        |L1.2282|
                  |L1.1262|
;;;1160   						{
;;;1161   							//延时10s等待机器稳定再采集
;;;1162   							vTaskDelay(900);//发射1s之后再次开始采集
0004ee  f44f7061          MOV      r0,#0x384
0004f2  f7fffffe          BL       vTaskDelay
;;;1163   							for(int i=0; i<100; i++)
0004f6  2000              MOVS     r0,#0
0004f8  900b              STR      r0,[sp,#0x2c]
0004fa  e066              B        |L1.1482|
                  |L1.1276|
;;;1164   							{
;;;1165   								eADC0_buff[i] =(float) ADC_ConvertedValue[0]/4096*3.3*3;
0004fc  48d8              LDR      r0,|L1.2144|
0004fe  8800              LDRH     r0,[r0,#0]  ; ADC_ConvertedValue
000500  9001              STR      r0,[sp,#4]
000502  f7fffffe          BL       __aeabi_ui2f
000506  f04f418b          MOV      r1,#0x45800000
00050a  9002              STR      r0,[sp,#8]
00050c  f7fffffe          BL       __aeabi_fdiv
000510  9003              STR      r0,[sp,#0xc]
000512  f7fffffe          BL       __aeabi_f2d
000516  f04f3266          MOV      r2,#0x66666666
00051a  4bd2              LDR      r3,|L1.2148|
00051c  e9cd0104          STRD     r0,r1,[sp,#0x10]
000520  f7fffffe          BL       __aeabi_dmul
000524  2200              MOVS     r2,#0
000526  4bd0              LDR      r3,|L1.2152|
000528  e9cd0106          STRD     r0,r1,[sp,#0x18]
00052c  f7fffffe          BL       __aeabi_dmul
000530  e9cd0108          STRD     r0,r1,[sp,#0x20]
000534  f7fffffe          BL       __aeabi_d2f
000538  aad6              ADD      r2,sp,#0x358
00053a  990b              LDR      r1,[sp,#0x2c]
00053c  f8420021          STR      r0,[r2,r1,LSL #2]
;;;1166   								eADC1_buff[i] =(float) ADC_ConvertedValue[1]/4096*3.3;
000540  48c7              LDR      r0,|L1.2144|
000542  8840              LDRH     r0,[r0,#2]  ; ADC_ConvertedValue
000544  9003              STR      r0,[sp,#0xc]
000546  f7fffffe          BL       __aeabi_ui2f
00054a  f04f418b          MOV      r1,#0x45800000
00054e  9004              STR      r0,[sp,#0x10]
000550  f7fffffe          BL       __aeabi_fdiv
000554  9005              STR      r0,[sp,#0x14]
000556  f7fffffe          BL       __aeabi_f2d
00055a  f04f3266          MOV      r2,#0x66666666
00055e  4bc1              LDR      r3,|L1.2148|
000560  e9cd0106          STRD     r0,r1,[sp,#0x18]
000564  f7fffffe          BL       __aeabi_dmul
000568  e9cd0108          STRD     r0,r1,[sp,#0x20]
00056c  f7fffffe          BL       __aeabi_d2f
000570  aa72              ADD      r2,sp,#0x1c8
000572  990b              LDR      r1,[sp,#0x2c]
000574  f8420021          STR      r0,[r2,r1,LSL #2]
;;;1167   								//	eADC2_buff[i] =(float) ADC_ConvertedValue[2]/4096*3.3*2;
;;;1168   								eADC3_buff[i] =(float) ADC_ConvertedValue[3]/4096*3.3*2;
000578  48b9              LDR      r0,|L1.2144|
00057a  88c0              LDRH     r0,[r0,#6]  ; ADC_ConvertedValue
00057c  9001              STR      r0,[sp,#4]
00057e  f7fffffe          BL       __aeabi_ui2f
000582  f04f418b          MOV      r1,#0x45800000
000586  9002              STR      r0,[sp,#8]
000588  f7fffffe          BL       __aeabi_fdiv
00058c  9003              STR      r0,[sp,#0xc]
00058e  f7fffffe          BL       __aeabi_f2d
000592  f04f3266          MOV      r2,#0x66666666
000596  4bb3              LDR      r3,|L1.2148|
000598  e9cd0104          STRD     r0,r1,[sp,#0x10]
00059c  f7fffffe          BL       __aeabi_dmul
0005a0  2200              MOVS     r2,#0
0005a2  f04f4380          MOV      r3,#0x40000000
0005a6  e9cd0106          STRD     r0,r1,[sp,#0x18]
0005aa  f7fffffe          BL       __aeabi_dmul
0005ae  e9cd0108          STRD     r0,r1,[sp,#0x20]
0005b2  f7fffffe          BL       __aeabi_d2f
0005b6  aa0e              ADD      r2,sp,#0x38
0005b8  990b              LDR      r1,[sp,#0x2c]
0005ba  f8420021          STR      r0,[r2,r1,LSL #2]
;;;1169   								vTaskDelay(1);
0005be  2001              MOVS     r0,#1
0005c0  f7fffffe          BL       vTaskDelay
0005c4  980b              LDR      r0,[sp,#0x2c]         ;1163
0005c6  1c40              ADDS     r0,r0,#1              ;1163
0005c8  900b              STR      r0,[sp,#0x2c]         ;1163
                  |L1.1482|
0005ca  980b              LDR      r0,[sp,#0x2c]         ;1163
0005cc  2864              CMP      r0,#0x64              ;1163
0005ce  db95              BLT      |L1.1276|
;;;1170   							}
;;;1171   							
;;;1172   							for(int i=1; i<100; i++)   //100次数据求和
0005d0  2001              MOVS     r0,#1
0005d2  e000              B        |L1.1494|
                  |L1.1492|
0005d4  e3d7              B        |L1.3462|
                  |L1.1494|
0005d6  900b              STR      r0,[sp,#0x2c]
0005d8  e023              B        |L1.1570|
                  |L1.1498|
;;;1173   							{
;;;1174   								eADC0_buff[0]+=eADC0_buff[i];
0005da  a9d6              ADD      r1,sp,#0x358
0005dc  980b              LDR      r0,[sp,#0x2c]
0005de  f8510020          LDR      r0,[r1,r0,LSL #2]
0005e2  900a              STR      r0,[sp,#0x28]
0005e4  98d6              LDR      r0,[sp,#0x358]
0005e6  9009              STR      r0,[sp,#0x24]
0005e8  990a              LDR      r1,[sp,#0x28]
0005ea  f7fffffe          BL       __aeabi_fadd
0005ee  90d6              STR      r0,[sp,#0x358]
;;;1175   								eADC1_buff[0]+=eADC1_buff[i];
0005f0  a972              ADD      r1,sp,#0x1c8
0005f2  980b              LDR      r0,[sp,#0x2c]
0005f4  f8510020          LDR      r0,[r1,r0,LSL #2]
0005f8  900a              STR      r0,[sp,#0x28]
0005fa  9872              LDR      r0,[sp,#0x1c8]
0005fc  9009              STR      r0,[sp,#0x24]
0005fe  990a              LDR      r1,[sp,#0x28]
000600  f7fffffe          BL       __aeabi_fadd
000604  9072              STR      r0,[sp,#0x1c8]
;;;1176   								//	eADC2_buff[0]+=eADC2_buff[i];
;;;1177   								eADC3_buff[0]+=eADC3_buff[i];
000606  a90e              ADD      r1,sp,#0x38
000608  980b              LDR      r0,[sp,#0x2c]
00060a  f8510020          LDR      r0,[r1,r0,LSL #2]
00060e  900a              STR      r0,[sp,#0x28]
000610  980e              LDR      r0,[sp,#0x38]
000612  9009              STR      r0,[sp,#0x24]
000614  990a              LDR      r1,[sp,#0x28]
000616  f7fffffe          BL       __aeabi_fadd
00061a  900e              STR      r0,[sp,#0x38]
00061c  980b              LDR      r0,[sp,#0x2c]         ;1172
00061e  1c40              ADDS     r0,r0,#1              ;1172
000620  900b              STR      r0,[sp,#0x2c]         ;1172
                  |L1.1570|
000622  980b              LDR      r0,[sp,#0x2c]         ;1172
000624  2864              CMP      r0,#0x64              ;1172
000626  dbd8              BLT      |L1.1498|
;;;1178   							}
;;;1179   							
;;;1180   							//取100次平均值
;;;1181   							Show_Parameter.Forward_Power=eADC0_buff[0]/100;//正向功率
000628  98d6              LDR      r0,[sp,#0x358]
00062a  4990              LDR      r1,|L1.2156|
00062c  900b              STR      r0,[sp,#0x2c]
00062e  f7fffffe          BL       __aeabi_fdiv
000632  4985              LDR      r1,|L1.2120|
000634  6008              STR      r0,[r1,#0]  ; Show_Parameter
;;;1182   							Show_Parameter.Reverse_Power=eADC1_buff[0]/100;//反向功率
000636  9872              LDR      r0,[sp,#0x1c8]
000638  498c              LDR      r1,|L1.2156|
00063a  900b              STR      r0,[sp,#0x2c]
00063c  f7fffffe          BL       __aeabi_fdiv
000640  4981              LDR      r1,|L1.2120|
000642  6048              STR      r0,[r1,#4]  ; Show_Parameter
;;;1183   							//Show_Parameter.M_45V=eADC2_buff[0]/100;//电压
;;;1184   							Show_Parameter.M_45I=eADC3_buff[0]/100;//电流
000644  980e              LDR      r0,[sp,#0x38]
000646  4989              LDR      r1,|L1.2156|
000648  900b              STR      r0,[sp,#0x2c]
00064a  f7fffffe          BL       __aeabi_fdiv
00064e  497e              LDR      r1,|L1.2120|
000650  60c8              STR      r0,[r1,#0xc]  ; Show_Parameter
;;;1185   
;;;1186   							/*觉得应该使用功率而不是使用电压的比值，因为正反向功率比值不是线性的，如下可见不同段位驻波比不同*/
;;;1187   							/*但是直接使用电压比值似乎更精确？*/
;;;1188   							if(Show_Parameter.M_45I>1.5)   //2.3-1.5V=0.8V =>对应 30A，步进37.5
000652  4608              MOV      r0,r1
000654  68c0              LDR      r0,[r0,#0xc]  ; Show_Parameter
000656  9009              STR      r0,[sp,#0x24]
000658  f7fffffe          BL       __aeabi_f2d
00065c  2200              MOVS     r2,#0
00065e  4b84              LDR      r3,|L1.2160|
000660  e9cd010a          STRD     r0,r1,[sp,#0x28]
000664  f7fffffe          BL       __aeabi_cdrcmple
000668  d21d              BCS      |L1.1702|
;;;1189   							{
;;;1190   								Work_paraBack.Power_45_intensity[0]=(Show_Parameter.M_45I-1.5)*Debug_M_45I+60;
00066a  4877              LDR      r0,|L1.2120|
00066c  68c0              LDR      r0,[r0,#0xc]  ; Show_Parameter
00066e  9003              STR      r0,[sp,#0xc]
000670  f7fffffe          BL       __aeabi_f2d
000674  2200              MOVS     r2,#0
000676  4b7e              LDR      r3,|L1.2160|
000678  e9cd0104          STRD     r0,r1,[sp,#0x10]
00067c  f7fffffe          BL       __aeabi_dsub
000680  2200              MOVS     r2,#0
000682  4b7c              LDR      r3,|L1.2164|
000684  e9cd0106          STRD     r0,r1,[sp,#0x18]
000688  f7fffffe          BL       __aeabi_dmul
00068c  2200              MOVS     r2,#0
00068e  4b7a              LDR      r3,|L1.2168|
000690  e9cd0108          STRD     r0,r1,[sp,#0x20]
000694  f7fffffe          BL       __aeabi_dadd
000698  e9cd010a          STRD     r0,r1,[sp,#0x28]
00069c  f7fffffe          BL       __aeabi_d2f
0006a0  496e              LDR      r1,|L1.2140|
0006a2  6208              STR      r0,[r1,#0x20]  ; Work_paraBack
0006a4  e007              B        |L1.1718|
                  |L1.1702|
;;;1191   							}
;;;1192   							else     //小于 1.5V电流系数为40
;;;1193   							{
;;;1194   								Work_paraBack.Power_45_intensity[0]=Show_Parameter.M_45I*40;
0006a6  4868              LDR      r0,|L1.2120|
0006a8  68c0              LDR      r0,[r0,#0xc]  ; Show_Parameter
0006aa  4974              LDR      r1,|L1.2172|
0006ac  900b              STR      r0,[sp,#0x2c]
0006ae  f7fffffe          BL       __aeabi_fmul
0006b2  496a              LDR      r1,|L1.2140|
0006b4  6208              STR      r0,[r1,#0x20]  ; Work_paraBack
                  |L1.1718|
;;;1195   							}
;;;1196   							
;;;1197   							if(Show_Parameter.Forward_Power>5)   //正向功率的电压大于5V时，400的步进
0006b6  4864              LDR      r0,|L1.2120|
0006b8  6800              LDR      r0,[r0,#0]  ; Show_Parameter
0006ba  4971              LDR      r1,|L1.2176|
0006bc  900b              STR      r0,[sp,#0x2c]
0006be  f7fffffe          BL       __aeabi_cfrcmple
0006c2  d227              BCS      |L1.1812|
;;;1198   							{
;;;1199   								Work_paraBack.Forward_power[0]=(Show_Parameter.Forward_Power-5)*Forward_P+1000+20;
0006c4  4860              LDR      r0,|L1.2120|
0006c6  6800              LDR      r0,[r0,#0]  ; Show_Parameter
0006c8  496d              LDR      r1,|L1.2176|
0006ca  9008              STR      r0,[sp,#0x20]
0006cc  f7fffffe          BL       __aeabi_fsub
0006d0  496c              LDR      r1,|L1.2180|
0006d2  9009              STR      r0,[sp,#0x24]
0006d4  f7fffffe          BL       __aeabi_fmul
0006d8  496b              LDR      r1,|L1.2184|
0006da  900a              STR      r0,[sp,#0x28]
0006dc  f7fffffe          BL       __aeabi_fadd
0006e0  496a              LDR      r1,|L1.2188|
0006e2  900b              STR      r0,[sp,#0x2c]
0006e4  f7fffffe          BL       __aeabi_fadd
0006e8  495c              LDR      r1,|L1.2140|
0006ea  6188              STR      r0,[r1,#0x18]  ; Work_paraBack
;;;1200   								//Work_paraBack.Reverse_power[0]=Show_Parameter.Reverse_Power*Forward_P;//反向功率倍数待现场考察
;;;1201   								Work_paraBack.Reverse_power[0]=Show_Parameter.Reverse_Power*Work_paraBack.Forward_power[0]/Show_Parameter.Forward_Power;
0006ec  4608              MOV      r0,r1
0006ee  6980              LDR      r0,[r0,#0x18]  ; Work_paraBack
0006f0  900a              STR      r0,[sp,#0x28]
0006f2  4855              LDR      r0,|L1.2120|
0006f4  6840              LDR      r0,[r0,#4]  ; Show_Parameter
0006f6  9009              STR      r0,[sp,#0x24]
0006f8  990a              LDR      r1,[sp,#0x28]
0006fa  f7fffffe          BL       __aeabi_fmul
0006fe  900b              STR      r0,[sp,#0x2c]
000700  4851              LDR      r0,|L1.2120|
000702  6800              LDR      r0,[r0,#0]  ; Show_Parameter
000704  4601              MOV      r1,r0
000706  900a              STR      r0,[sp,#0x28]
000708  980b              LDR      r0,[sp,#0x2c]
00070a  f7fffffe          BL       __aeabi_fdiv
00070e  4953              LDR      r1,|L1.2140|
000710  61c8              STR      r0,[r1,#0x1c]  ; Work_paraBack
000712  e077              B        |L1.2052|
                  |L1.1812|
;;;1202   							}
;;;1203   							else if(Show_Parameter.Forward_Power<=5&&Show_Parameter.Forward_Power>3.2)     //小于5V时，200倍的步进
000714  484c              LDR      r0,|L1.2120|
000716  6800              LDR      r0,[r0,#0]  ; Show_Parameter
000718  4959              LDR      r1,|L1.2176|
00071a  900b              STR      r0,[sp,#0x2c]
00071c  f7fffffe          BL       __aeabi_cfcmple
000720  d842              BHI      |L1.1960|
000722  4849              LDR      r0,|L1.2120|
000724  6800              LDR      r0,[r0,#0]  ; Show_Parameter
000726  9009              STR      r0,[sp,#0x24]
000728  f7fffffe          BL       __aeabi_f2d
00072c  4a48              LDR      r2,|L1.2128|
00072e  4b49              LDR      r3,|L1.2132|
000730  e9cd010a          STRD     r0,r1,[sp,#0x28]
000734  f7fffffe          BL       __aeabi_cdrcmple
000738  d236              BCS      |L1.1960|
;;;1204   							{
;;;1205   								Work_paraBack.Forward_power[0]=(Show_Parameter.Forward_Power-3.2)*277.8+500+20;
00073a  4843              LDR      r0,|L1.2120|
00073c  6800              LDR      r0,[r0,#0]  ; Show_Parameter
00073e  9001              STR      r0,[sp,#4]
000740  f7fffffe          BL       __aeabi_f2d
000744  4a42              LDR      r2,|L1.2128|
000746  4b43              LDR      r3,|L1.2132|
000748  e9cd0102          STRD     r0,r1,[sp,#8]
00074c  f7fffffe          BL       __aeabi_dsub
000750  4a4f              LDR      r2,|L1.2192|
000752  4b50              LDR      r3,|L1.2196|
000754  e9cd0104          STRD     r0,r1,[sp,#0x10]
000758  f7fffffe          BL       __aeabi_dmul
00075c  2200              MOVS     r2,#0
00075e  4b4e              LDR      r3,|L1.2200|
000760  e9cd0106          STRD     r0,r1,[sp,#0x18]
000764  f7fffffe          BL       __aeabi_dadd
000768  2200              MOVS     r2,#0
00076a  4b3b              LDR      r3,|L1.2136|
00076c  e9cd0108          STRD     r0,r1,[sp,#0x20]
000770  f7fffffe          BL       __aeabi_dadd
000774  e9cd010a          STRD     r0,r1,[sp,#0x28]
000778  f7fffffe          BL       __aeabi_d2f
00077c  4937              LDR      r1,|L1.2140|
00077e  6188              STR      r0,[r1,#0x18]  ; Work_paraBack
;;;1206   								//Work_paraBack.Reverse_power[0]=Show_Parameter.Reverse_Power*277.8;//反向功率倍数待现场考察
;;;1207   								Work_paraBack.Reverse_power[0]=Show_Parameter.Reverse_Power*Work_paraBack.Forward_power[0]/Show_Parameter.Forward_Power;
000780  4608              MOV      r0,r1
000782  6980              LDR      r0,[r0,#0x18]  ; Work_paraBack
000784  900a              STR      r0,[sp,#0x28]
000786  4830              LDR      r0,|L1.2120|
000788  6840              LDR      r0,[r0,#4]  ; Show_Parameter
00078a  9009              STR      r0,[sp,#0x24]
00078c  990a              LDR      r1,[sp,#0x28]
00078e  f7fffffe          BL       __aeabi_fmul
000792  900b              STR      r0,[sp,#0x2c]
000794  482c              LDR      r0,|L1.2120|
000796  6800              LDR      r0,[r0,#0]  ; Show_Parameter
000798  4601              MOV      r1,r0
00079a  900a              STR      r0,[sp,#0x28]
00079c  980b              LDR      r0,[sp,#0x2c]
00079e  f7fffffe          BL       __aeabi_fdiv
0007a2  492e              LDR      r1,|L1.2140|
0007a4  61c8              STR      r0,[r1,#0x1c]  ; Work_paraBack
0007a6  e02d              B        |L1.2052|
                  |L1.1960|
;;;1208   							}
;;;1209   							else     //小于3.2v
;;;1210   							{
;;;1211   								Work_paraBack.Forward_power[0]=(Show_Parameter.Forward_Power)*500/3.2+20;
0007a8  4827              LDR      r0,|L1.2120|
0007aa  6800              LDR      r0,[r0,#0]  ; Show_Parameter
0007ac  4927              LDR      r1,|L1.2124|
0007ae  9004              STR      r0,[sp,#0x10]
0007b0  f7fffffe          BL       __aeabi_fmul
0007b4  9005              STR      r0,[sp,#0x14]
0007b6  f7fffffe          BL       __aeabi_f2d
0007ba  4a25              LDR      r2,|L1.2128|
0007bc  4b25              LDR      r3,|L1.2132|
0007be  e9cd0106          STRD     r0,r1,[sp,#0x18]
0007c2  f7fffffe          BL       __aeabi_ddiv
0007c6  2200              MOVS     r2,#0
0007c8  4b23              LDR      r3,|L1.2136|
0007ca  e9cd0108          STRD     r0,r1,[sp,#0x20]
0007ce  f7fffffe          BL       __aeabi_dadd
0007d2  e9cd010a          STRD     r0,r1,[sp,#0x28]
0007d6  f7fffffe          BL       __aeabi_d2f
0007da  4920              LDR      r1,|L1.2140|
0007dc  6188              STR      r0,[r1,#0x18]  ; Work_paraBack
;;;1212   								//Work_paraBack.Reverse_power[0]=Show_Parameter.Reverse_Power*500/3.2;//反向功率倍数待现场考察
;;;1213   								Work_paraBack.Reverse_power[0]=Show_Parameter.Reverse_Power*Work_paraBack.Forward_power[0]/Show_Parameter.Forward_Power;
0007de  4608              MOV      r0,r1
0007e0  6980              LDR      r0,[r0,#0x18]  ; Work_paraBack
0007e2  900a              STR      r0,[sp,#0x28]
0007e4  4818              LDR      r0,|L1.2120|
0007e6  6840              LDR      r0,[r0,#4]  ; Show_Parameter
0007e8  9009              STR      r0,[sp,#0x24]
0007ea  990a              LDR      r1,[sp,#0x28]
0007ec  f7fffffe          BL       __aeabi_fmul
0007f0  900b              STR      r0,[sp,#0x2c]
0007f2  4815              LDR      r0,|L1.2120|
0007f4  6800              LDR      r0,[r0,#0]  ; Show_Parameter
0007f6  4601              MOV      r1,r0
0007f8  900a              STR      r0,[sp,#0x28]
0007fa  980b              LDR      r0,[sp,#0x2c]
0007fc  f7fffffe          BL       __aeabi_fdiv
000800  4916              LDR      r1,|L1.2140|
000802  61c8              STR      r0,[r1,#0x1c]  ; Work_paraBack
                  |L1.2052|
;;;1214   							}
;;;1215   							
;;;1216   							Show_Parameter.Standing_wave_ratio =get_Standing_wave_ratio(Work_paraBack.Forward_power[0],Work_paraBack.Reverse_power[0]);
000804  4815              LDR      r0,|L1.2140|
000806  69c0              LDR      r0,[r0,#0x1c]  ; Work_paraBack
000808  900b              STR      r0,[sp,#0x2c]
00080a  4814              LDR      r0,|L1.2140|
00080c  6980              LDR      r0,[r0,#0x18]  ; Work_paraBack
00080e  900a              STR      r0,[sp,#0x28]
000810  990b              LDR      r1,[sp,#0x2c]
000812  f7fffffe          BL       get_Standing_wave_ratio
000816  490c              LDR      r1,|L1.2120|
000818  6108              STR      r0,[r1,#0x10]  ; Show_Parameter
;;;1217   							if(Show_Parameter.Standing_wave_ratio>=1.8||Show_Parameter.Standing_wave_ratio<1 || Work_paraBack.Power_45_intensity[0]>=100)
00081a  4608              MOV      r0,r1
00081c  6900              LDR      r0,[r0,#0x10]  ; Show_Parameter
00081e  9009              STR      r0,[sp,#0x24]
000820  f7fffffe          BL       __aeabi_f2d
000824  4a1a              LDR      r2,|L1.2192|
000826  4b1d              LDR      r3,|L1.2204|
000828  e9cd010a          STRD     r0,r1,[sp,#0x28]
00082c  f7fffffe          BL       __aeabi_cdrcmple
000830  d93c              BLS      |L1.2220|
000832  4805              LDR      r0,|L1.2120|
000834  6900              LDR      r0,[r0,#0x10]  ; Show_Parameter
000836  f04f517e          MOV      r1,#0x3f800000
00083a  900b              STR      r0,[sp,#0x2c]
00083c  f7fffffe          BL       __aeabi_cfcmple
000840  d334              BCC      |L1.2220|
000842  4806              LDR      r0,|L1.2140|
000844  6a00              LDR      r0,[r0,#0x20]  ; Work_paraBack
000846  e02c              B        |L1.2210|
                  |L1.2120|
                          DCD      Show_Parameter
                  |L1.2124|
                          DCD      0x43fa0000
                  |L1.2128|
                          DCD      0x9999999a
                  |L1.2132|
                          DCD      0x40099999
                  |L1.2136|
                          DCD      0x40340000
                  |L1.2140|
                          DCD      Work_paraBack
                  |L1.2144|
                          DCD      ADC_ConvertedValue
                  |L1.2148|
                          DCD      0x400a6666
                  |L1.2152|
                          DCD      0x40080000
                  |L1.2156|
                          DCD      0x42c80000
                  |L1.2160|
                          DCD      0x3ff80000
                  |L1.2164|
                          DCD      0x4042c000
                  |L1.2168|
                          DCD      0x404e0000
                  |L1.2172|
                          DCD      0x42200000
                  |L1.2176|
                          DCD      0x40a00000
                  |L1.2180|
                          DCD      0x43c80000
                  |L1.2184|
                          DCD      0x447a0000
                  |L1.2188|
                          DCD      0x41a00000
                  |L1.2192|
                          DCD      0xcccccccd
                  |L1.2196|
                          DCD      0x40715ccc
                  |L1.2200|
                          DCD      0x407f4000
                  |L1.2204|
                          DCD      0x3ffccccc
                  |L1.2208|
0008a0  e321              B        |L1.3814|
                  |L1.2210|
0008a2  49fe              LDR      r1,|L1.3228|
0008a4  900b              STR      r0,[sp,#0x2c]
0008a6  f7fffffe          BL       __aeabi_cfrcmple
0008aa  d80f              BHI      |L1.2252|
                  |L1.2220|
;;;1218   							{
;;;1219   								SWR_array[i*10+index]=Show_Parameter.Standing_wave_ratio;
0008ac  48fc              LDR      r0,|L1.3232|
0008ae  6901              LDR      r1,[r0,#0x10]  ; Show_Parameter
0008b0  980d              LDR      r0,[sp,#0x34]
0008b2  eb000280          ADD      r2,r0,r0,LSL #2
0008b6  f8dd0508          LDR      r0,[sp,#0x508]
0008ba  eb000042          ADD      r0,r0,r2,LSL #1
0008be  4af9              LDR      r2,|L1.3236|
0008c0  f8421020          STR      r1,[r2,r0,LSL #2]
;;;1220   								return 0;
0008c4  2000              MOVS     r0,#0
                  |L1.2246|
;;;1221   							}
;;;1222   							else
;;;1223   							{
;;;1224   								SWR_array[i*10+index]=Show_Parameter.Standing_wave_ratio;
;;;1225   							}
;;;1226   						}
;;;1227   						
;;;1228   						for(int count=0; count<30; count++)   //最多加30次
;;;1229   						{
;;;1230   							MT2000_Cmd_Power_Add();
;;;1231   							ret = MT2000_Wait_Ack(MT2000_ACK_OK);
;;;1232   							if( ret == MT2000_ACK_OK )
;;;1233   							{
;;;1234   								//延时10s等待机器稳定再采集
;;;1235   								vTaskDelay(300);//发射300ms之后再次开始采集
;;;1236   								for(int i=0; i<100; i++)
;;;1237   								{
;;;1238   									eADC0_buff[i] =(float) ADC_ConvertedValue[0]/4096*3.3*3;
;;;1239   									eADC1_buff[i] =(float) ADC_ConvertedValue[1]/4096*3.3;
;;;1240   									//	eADC2_buff[i] =(float) ADC_ConvertedValue[2]/4096*3.3*2;
;;;1241   									eADC3_buff[i] =(float) ADC_ConvertedValue[3]/4096*3.3*2;
;;;1242   									vTaskDelay(1);
;;;1243   								}
;;;1244   								
;;;1245   								for(int i=1; i<100; i++)   //100次数据求和
;;;1246   								{
;;;1247   									eADC0_buff[0]+=eADC0_buff[i];
;;;1248   									eADC1_buff[0]+=eADC1_buff[i];
;;;1249   									//	eADC2_buff[0]+=eADC2_buff[i];
;;;1250   									eADC3_buff[0]+=eADC3_buff[i];
;;;1251   								}
;;;1252   								
;;;1253   								//取100次平均值
;;;1254   								Show_Parameter.Forward_Power=eADC0_buff[0]/100;//正向功率
;;;1255   								Show_Parameter.Reverse_Power=eADC1_buff[0]/100;//反向功率
;;;1256   								//Show_Parameter.M_45V=eADC2_buff[0]/100;//电压
;;;1257   								Show_Parameter.M_45I=eADC3_buff[0]/100;//电流
;;;1258   								
;;;1259   								//电流显示
;;;1260   								if(Show_Parameter.M_45I>1.5)   //2.3-1.5V=0.8V =>对应 30A，步进37.5
;;;1261   								{
;;;1262   									Work_paraBack.Power_45_intensity[0]=(Show_Parameter.M_45I-1.5)*Debug_M_45I+60;
;;;1263   								}
;;;1264   								else     //小于 1.5V电流系数为40
;;;1265   								{
;;;1266   									Work_paraBack.Power_45_intensity[0]=Show_Parameter.M_45I*40;
;;;1267   								}
;;;1268   								
;;;1269   								if(Show_Parameter.Forward_Power>5)   //正向功率的电压大于5V时，400的步进
;;;1270   								{
;;;1271   									temp_Forward_power=Work_paraBack.Forward_power[0];
;;;1272   									temp_Reverse_power=Work_paraBack.Reverse_power[0];
;;;1273   									Work_paraBack.Forward_power[0]=(Show_Parameter.Forward_Power-5)*Forward_P+1000+20;
;;;1274   									//Work_paraBack.Reverse_power[0]=Show_Parameter.Reverse_Power*Forward_P;//反向功率倍数待现场考察
;;;1275   									Work_paraBack.Reverse_power[0]=Show_Parameter.Reverse_Power*Work_paraBack.Forward_power[0]/Show_Parameter.Forward_Power;
;;;1276   								}
;;;1277   								else if(Show_Parameter.Forward_Power<=5&&Show_Parameter.Forward_Power>3.2)     //小于5V时，200倍的步进
;;;1278   								{
;;;1279   									temp_Forward_power=Work_paraBack.Forward_power[0];
;;;1280   									temp_Reverse_power=Work_paraBack.Reverse_power[0];
;;;1281   									Work_paraBack.Forward_power[0]=(Show_Parameter.Forward_Power-3.2)*277.8+500+20;
;;;1282   									//Work_paraBack.Reverse_power[0]=Show_Parameter.Reverse_Power*277.8;//反向功率倍数待现场考察
;;;1283   									Work_paraBack.Reverse_power[0]=Show_Parameter.Reverse_Power*Work_paraBack.Forward_power[0]/Show_Parameter.Forward_Power;
;;;1284   								}
;;;1285   								else     //小于3.2v
;;;1286   								{
;;;1287   									temp_Forward_power=Work_paraBack.Forward_power[0];
;;;1288   									temp_Reverse_power=Work_paraBack.Reverse_power[0];
;;;1289   									Work_paraBack.Forward_power[0]=(Show_Parameter.Forward_Power)*500/3.2+20;
;;;1290   									//Work_paraBack.Reverse_power[0]=Show_Parameter.Reverse_Power*500/3.2;//反向功率倍数待现场考察
;;;1291   									Work_paraBack.Reverse_power[0]=Show_Parameter.Reverse_Power*Work_paraBack.Forward_power[0]/Show_Parameter.Forward_Power;
;;;1292   								}
;;;1293   	//							temp_Standing_wave_ratio=Show_Parameter.Standing_wave_ratio ;
;;;1294   								temp_Standing_wave_ratio =get_Standing_wave_ratio(Work_paraBack.Forward_power[0],Work_paraBack.Reverse_power[0]);
;;;1295   
;;;1296   								//	if(Work_paraBack.Forward_power[0]>1500||(fabs(temp_Forward_power-Work_paraBack.Forward_power[0])<=5)\//
;;;1297   								if(Work_paraBack.Forward_power[0]>1500 ||temp_Standing_wave_ratio>=1.8||temp_Standing_wave_ratio<1 || Work_paraBack.Power_45_intensity[0]>=100)
;;;1298   								{
;;;1299   									z[i*10+index]=temp_Forward_power;
;;;1300   									f[i*10+index]=temp_Reverse_power;
;;;1301   									return 0;
;;;1302   								}
;;;1303   								else
;;;1304   								{
;;;1305   									z[i*10+index]=Work_paraBack.Forward_power[0];
;;;1306   									f[i*10+index]=Work_paraBack.Reverse_power[0];
;;;1307   								}
;;;1308   							}
;;;1309   						}
;;;1310   					}
;;;1311   				}
;;;1312   				else	//发射应答错误
;;;1313   				{
;;;1314   					return 0;
;;;1315   				}
;;;1316   			}
;;;1317   			else		//调谐应答错误
;;;1318   			{
;;;1319   				return 0;
;;;1320   			}
;;;1321   		}
;;;1322   		else			//调频应答错误
;;;1323   		{
;;;1324   			return 0;
;;;1325   		}
;;;1326   
;;;1327   		z[i*10+index]=Work_paraBack.Forward_power[0];//212
;;;1328   		f[i*10+index]=Work_paraBack.Reverse_power[0];
;;;1329   		SWR_array[i*10+index]=Show_Parameter.Standing_wave_ratio;
;;;1330   		
;;;1331   		App_printf("Forward_power=%f \r\n",z[i*10+index]);
;;;1332   		App_printf("Reverse_power=%f \r\n",f[i*10+index]);
;;;1333   		App_printf("Standing_wave_ratio=%f \r\n",SWR_array[i*10+index]);
;;;1334   		
;;;1335   		MT2000_Cmd_Stop();		//停止
;;;1336   		ret = MT2000_Wait_Ack(MT2000_ACK_OK);
;;;1337   		if( ret == MT2000_ACK_OK )		//停止成功
;;;1338   		{
;;;1339   			if(i!=SIZE-1)
;;;1340   			{
;;;1341   				vTaskDelay(10000);		//延时10s之后开机(保护机器)
;;;1342   			}
;;;1343   			
;;;1344   			if(i<SIZE-1)
;;;1345   			{
;;;1346   				System.status = SYSTEM_SCAN;	//正在扫频
;;;1347   			}
;;;1348   			else if(i==SIZE-1)
;;;1349   			{
;;;1350   				get_better_SWR(SWR_array,index);//获取更佳驻波比，置位不合理驻波比包的字段
;;;1351   				if(index==9)   //2
;;;1352   				{
;;;1353   					if(InternalFlash_SaveData_2()==1)
;;;1354   					{
;;;1355   						Flash2_to_AcceptAPP();
;;;1356   						App_printf("flash save successed!\r\n");
;;;1357   						System.already_swept = 1;
;;;1358   						System.sweep = 2;
;;;1359   					}
;;;1360   					else
;;;1361   					{
;;;1362   						App_printf("flash save error!\r\n");
;;;1363   						System.sweep = 0;
;;;1364   					}
;;;1365   				}
;;;1366   			}
;;;1367   		}
;;;1368   		else     //不成功，返回停止失败
;;;1369   		{
;;;1370   			return 0;
;;;1371   		}
;;;1372   	}
;;;1373   	
;;;1374       return 0;
;;;1375   }
0008c6  f20d5d0c          ADD      sp,sp,#0x50c
0008ca  bd00              POP      {pc}
                  |L1.2252|
0008cc  48f4              LDR      r0,|L1.3232|
0008ce  6901              LDR      r1,[r0,#0x10]         ;1224  ; Show_Parameter
0008d0  980d              LDR      r0,[sp,#0x34]         ;1224
0008d2  eb000280          ADD      r2,r0,r0,LSL #2       ;1224
0008d6  f8dd0508          LDR      r0,[sp,#0x508]        ;1224
0008da  eb000042          ADD      r0,r0,r2,LSL #1       ;1224
0008de  4af1              LDR      r2,|L1.3236|
0008e0  f8421020          STR      r1,[r2,r0,LSL #2]     ;1224
0008e4  980c              LDR      r0,[sp,#0x30]         ;1159
0008e6  1c40              ADDS     r0,r0,#1              ;1159
0008e8  900c              STR      r0,[sp,#0x30]         ;1159
                  |L1.2282|
0008ea  980c              LDR      r0,[sp,#0x30]         ;1159
0008ec  2807              CMP      r0,#7                 ;1159
0008ee  f6ffadfe          BLT      |L1.1262|
0008f2  2000              MOVS     r0,#0                 ;1228
0008f4  900c              STR      r0,[sp,#0x30]         ;1228
0008f6  e242              B        |L1.3454|
                  |L1.2296|
0008f8  f7fffffe          BL       MT2000_Cmd_Power_Add
0008fc  2001              MOVS     r0,#1                 ;1231
0008fe  f7fffffe          BL       MT2000_Wait_Ack
000902  f8cd04e8          STR      r0,[sp,#0x4e8]        ;1231
000906  f8dd04e8          LDR      r0,[sp,#0x4e8]        ;1232
00090a  2801              CMP      r0,#1                 ;1232
00090c  d173              BNE      |L1.2550|
00090e  f44f7096          MOV      r0,#0x12c             ;1235
000912  f7fffffe          BL       vTaskDelay
000916  2000              MOVS     r0,#0                 ;1236
000918  900b              STR      r0,[sp,#0x2c]         ;1236
00091a  e066              B        |L1.2538|
                  |L1.2332|
00091c  48e2              LDR      r0,|L1.3240|
00091e  8800              LDRH     r0,[r0,#0]            ;1238  ; ADC_ConvertedValue
000920  9001              STR      r0,[sp,#4]            ;1238
000922  f7fffffe          BL       __aeabi_ui2f
000926  f04f418b          MOV      r1,#0x45800000        ;1238
00092a  9002              STR      r0,[sp,#8]            ;1238
00092c  f7fffffe          BL       __aeabi_fdiv
000930  9003              STR      r0,[sp,#0xc]          ;1238
000932  f7fffffe          BL       __aeabi_f2d
000936  f04f3266          MOV      r2,#0x66666666        ;1238
00093a  4bdc              LDR      r3,|L1.3244|
00093c  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1238
000940  f7fffffe          BL       __aeabi_dmul
000944  2200              MOVS     r2,#0                 ;1238
000946  4bda              LDR      r3,|L1.3248|
000948  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;1238
00094c  f7fffffe          BL       __aeabi_dmul
000950  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1238
000954  f7fffffe          BL       __aeabi_d2f
000958  aad6              ADD      r2,sp,#0x358          ;1238
00095a  990b              LDR      r1,[sp,#0x2c]         ;1238
00095c  f8420021          STR      r0,[r2,r1,LSL #2]     ;1238
000960  48d1              LDR      r0,|L1.3240|
000962  8840              LDRH     r0,[r0,#2]            ;1239  ; ADC_ConvertedValue
000964  9003              STR      r0,[sp,#0xc]          ;1239
000966  f7fffffe          BL       __aeabi_ui2f
00096a  f04f418b          MOV      r1,#0x45800000        ;1239
00096e  9004              STR      r0,[sp,#0x10]         ;1239
000970  f7fffffe          BL       __aeabi_fdiv
000974  9005              STR      r0,[sp,#0x14]         ;1239
000976  f7fffffe          BL       __aeabi_f2d
00097a  f04f3266          MOV      r2,#0x66666666        ;1239
00097e  4bcb              LDR      r3,|L1.3244|
000980  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;1239
000984  f7fffffe          BL       __aeabi_dmul
000988  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1239
00098c  f7fffffe          BL       __aeabi_d2f
000990  aa72              ADD      r2,sp,#0x1c8          ;1239
000992  990b              LDR      r1,[sp,#0x2c]         ;1239
000994  f8420021          STR      r0,[r2,r1,LSL #2]     ;1239
000998  48c3              LDR      r0,|L1.3240|
00099a  88c0              LDRH     r0,[r0,#6]            ;1241  ; ADC_ConvertedValue
00099c  9001              STR      r0,[sp,#4]            ;1241
00099e  f7fffffe          BL       __aeabi_ui2f
0009a2  f04f418b          MOV      r1,#0x45800000        ;1241
0009a6  9002              STR      r0,[sp,#8]            ;1241
0009a8  f7fffffe          BL       __aeabi_fdiv
0009ac  9003              STR      r0,[sp,#0xc]          ;1241
0009ae  f7fffffe          BL       __aeabi_f2d
0009b2  f04f3266          MOV      r2,#0x66666666        ;1241
0009b6  4bbd              LDR      r3,|L1.3244|
0009b8  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1241
0009bc  f7fffffe          BL       __aeabi_dmul
0009c0  2200              MOVS     r2,#0                 ;1241
0009c2  f04f4380          MOV      r3,#0x40000000        ;1241
0009c6  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;1241
0009ca  f7fffffe          BL       __aeabi_dmul
0009ce  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1241
0009d2  f7fffffe          BL       __aeabi_d2f
0009d6  aa0e              ADD      r2,sp,#0x38           ;1241
0009d8  990b              LDR      r1,[sp,#0x2c]         ;1241
0009da  f8420021          STR      r0,[r2,r1,LSL #2]     ;1241
0009de  2001              MOVS     r0,#1                 ;1242
0009e0  f7fffffe          BL       vTaskDelay
0009e4  980b              LDR      r0,[sp,#0x2c]         ;1236
0009e6  1c40              ADDS     r0,r0,#1              ;1236
0009e8  900b              STR      r0,[sp,#0x2c]         ;1236
                  |L1.2538|
0009ea  980b              LDR      r0,[sp,#0x2c]         ;1236
0009ec  2864              CMP      r0,#0x64              ;1236
0009ee  db95              BLT      |L1.2332|
0009f0  2001              MOVS     r0,#1                 ;1245
0009f2  900b              STR      r0,[sp,#0x2c]         ;1245
0009f4  e024              B        |L1.2624|
                  |L1.2550|
0009f6  e1bf              B        |L1.3448|
                  |L1.2552|
0009f8  a9d6              ADD      r1,sp,#0x358          ;1247
0009fa  980b              LDR      r0,[sp,#0x2c]         ;1247
0009fc  f8510020          LDR      r0,[r1,r0,LSL #2]     ;1247
000a00  900a              STR      r0,[sp,#0x28]         ;1247
000a02  98d6              LDR      r0,[sp,#0x358]        ;1247
000a04  9009              STR      r0,[sp,#0x24]         ;1247
000a06  990a              LDR      r1,[sp,#0x28]         ;1247
000a08  f7fffffe          BL       __aeabi_fadd
000a0c  90d6              STR      r0,[sp,#0x358]        ;1247
000a0e  a972              ADD      r1,sp,#0x1c8          ;1248
000a10  980b              LDR      r0,[sp,#0x2c]         ;1248
000a12  f8510020          LDR      r0,[r1,r0,LSL #2]     ;1248
000a16  900a              STR      r0,[sp,#0x28]         ;1248
000a18  9872              LDR      r0,[sp,#0x1c8]        ;1248
000a1a  9009              STR      r0,[sp,#0x24]         ;1248
000a1c  990a              LDR      r1,[sp,#0x28]         ;1248
000a1e  f7fffffe          BL       __aeabi_fadd
000a22  9072              STR      r0,[sp,#0x1c8]        ;1248
000a24  a90e              ADD      r1,sp,#0x38           ;1250
000a26  980b              LDR      r0,[sp,#0x2c]         ;1250
000a28  f8510020          LDR      r0,[r1,r0,LSL #2]     ;1250
000a2c  900a              STR      r0,[sp,#0x28]         ;1250
000a2e  980e              LDR      r0,[sp,#0x38]         ;1250
000a30  9009              STR      r0,[sp,#0x24]         ;1250
000a32  990a              LDR      r1,[sp,#0x28]         ;1250
000a34  f7fffffe          BL       __aeabi_fadd
000a38  900e              STR      r0,[sp,#0x38]         ;1250
000a3a  980b              LDR      r0,[sp,#0x2c]         ;1245
000a3c  1c40              ADDS     r0,r0,#1              ;1245
000a3e  900b              STR      r0,[sp,#0x2c]         ;1245
                  |L1.2624|
000a40  980b              LDR      r0,[sp,#0x2c]         ;1245
000a42  2864              CMP      r0,#0x64              ;1245
000a44  dbd8              BLT      |L1.2552|
000a46  98d6              LDR      r0,[sp,#0x358]        ;1254
000a48  4994              LDR      r1,|L1.3228|
000a4a  900b              STR      r0,[sp,#0x2c]         ;1254
000a4c  f7fffffe          BL       __aeabi_fdiv
000a50  4993              LDR      r1,|L1.3232|
000a52  6008              STR      r0,[r1,#0]            ;1254  ; Show_Parameter
000a54  9872              LDR      r0,[sp,#0x1c8]        ;1255
000a56  4991              LDR      r1,|L1.3228|
000a58  900b              STR      r0,[sp,#0x2c]         ;1255
000a5a  e002              B        |L1.2658|
                  |L1.2652|
000a5c  e198              B        |L1.3472|
                  |L1.2654|
000a5e  e195              B        |L1.3468|
                  |L1.2656|
000a60  e192              B        |L1.3464|
                  |L1.2658|
000a62  f7fffffe          BL       __aeabi_fdiv
000a66  498e              LDR      r1,|L1.3232|
000a68  6048              STR      r0,[r1,#4]            ;1255  ; Show_Parameter
000a6a  980e              LDR      r0,[sp,#0x38]         ;1257
000a6c  498b              LDR      r1,|L1.3228|
000a6e  900b              STR      r0,[sp,#0x2c]         ;1257
000a70  f7fffffe          BL       __aeabi_fdiv
000a74  498a              LDR      r1,|L1.3232|
000a76  60c8              STR      r0,[r1,#0xc]          ;1257  ; Show_Parameter
000a78  4608              MOV      r0,r1                 ;1260
000a7a  68c0              LDR      r0,[r0,#0xc]          ;1260  ; Show_Parameter
000a7c  9009              STR      r0,[sp,#0x24]         ;1260
000a7e  f7fffffe          BL       __aeabi_f2d
000a82  2200              MOVS     r2,#0                 ;1260
000a84  4b8b              LDR      r3,|L1.3252|
000a86  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1260
000a8a  f7fffffe          BL       __aeabi_cdrcmple
000a8e  d21d              BCS      |L1.2764|
000a90  4883              LDR      r0,|L1.3232|
000a92  68c0              LDR      r0,[r0,#0xc]          ;1262  ; Show_Parameter
000a94  9003              STR      r0,[sp,#0xc]          ;1262
000a96  f7fffffe          BL       __aeabi_f2d
000a9a  2200              MOVS     r2,#0                 ;1262
000a9c  4b85              LDR      r3,|L1.3252|
000a9e  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1262
000aa2  f7fffffe          BL       __aeabi_dsub
000aa6  2200              MOVS     r2,#0                 ;1262
000aa8  4b83              LDR      r3,|L1.3256|
000aaa  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;1262
000aae  f7fffffe          BL       __aeabi_dmul
000ab2  2200              MOVS     r2,#0                 ;1262
000ab4  4b81              LDR      r3,|L1.3260|
000ab6  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1262
000aba  f7fffffe          BL       __aeabi_dadd
000abe  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1262
000ac2  f7fffffe          BL       __aeabi_d2f
000ac6  497e              LDR      r1,|L1.3264|
000ac8  6208              STR      r0,[r1,#0x20]         ;1262  ; Work_paraBack
000aca  e007              B        |L1.2780|
                  |L1.2764|
000acc  4874              LDR      r0,|L1.3232|
000ace  68c0              LDR      r0,[r0,#0xc]          ;1266  ; Show_Parameter
000ad0  497c              LDR      r1,|L1.3268|
000ad2  900b              STR      r0,[sp,#0x2c]         ;1266
000ad4  f7fffffe          BL       __aeabi_fmul
000ad8  4979              LDR      r1,|L1.3264|
000ada  6208              STR      r0,[r1,#0x20]         ;1266  ; Work_paraBack
                  |L1.2780|
000adc  4870              LDR      r0,|L1.3232|
000ade  6800              LDR      r0,[r0,#0]            ;1269  ; Show_Parameter
000ae0  4979              LDR      r1,|L1.3272|
000ae2  900b              STR      r0,[sp,#0x2c]         ;1269
000ae4  f7fffffe          BL       __aeabi_cfrcmple
000ae8  d22f              BCS      |L1.2890|
000aea  4875              LDR      r0,|L1.3264|
000aec  6980              LDR      r0,[r0,#0x18]         ;1271  ; Work_paraBack
000aee  f8cd04f4          STR      r0,[sp,#0x4f4]        ;1271
000af2  4873              LDR      r0,|L1.3264|
000af4  69c0              LDR      r0,[r0,#0x1c]         ;1272  ; Work_paraBack
000af6  f8cd04f0          STR      r0,[sp,#0x4f0]        ;1272
000afa  4869              LDR      r0,|L1.3232|
000afc  6800              LDR      r0,[r0,#0]            ;1273  ; Show_Parameter
000afe  4972              LDR      r1,|L1.3272|
000b00  9008              STR      r0,[sp,#0x20]         ;1273
000b02  f7fffffe          BL       __aeabi_fsub
000b06  4971              LDR      r1,|L1.3276|
000b08  9009              STR      r0,[sp,#0x24]         ;1273
000b0a  f7fffffe          BL       __aeabi_fmul
000b0e  4970              LDR      r1,|L1.3280|
000b10  900a              STR      r0,[sp,#0x28]         ;1273
000b12  f7fffffe          BL       __aeabi_fadd
000b16  496f              LDR      r1,|L1.3284|
000b18  900b              STR      r0,[sp,#0x2c]         ;1273
000b1a  f7fffffe          BL       __aeabi_fadd
000b1e  4968              LDR      r1,|L1.3264|
000b20  6188              STR      r0,[r1,#0x18]         ;1273  ; Work_paraBack
000b22  4608              MOV      r0,r1                 ;1275
000b24  6980              LDR      r0,[r0,#0x18]         ;1275  ; Work_paraBack
000b26  900a              STR      r0,[sp,#0x28]         ;1275
000b28  485d              LDR      r0,|L1.3232|
000b2a  6840              LDR      r0,[r0,#4]            ;1275  ; Show_Parameter
000b2c  9009              STR      r0,[sp,#0x24]         ;1275
000b2e  990a              LDR      r1,[sp,#0x28]         ;1275
000b30  f7fffffe          BL       __aeabi_fmul
000b34  900b              STR      r0,[sp,#0x2c]         ;1275
000b36  485a              LDR      r0,|L1.3232|
000b38  6800              LDR      r0,[r0,#0]            ;1275  ; Show_Parameter
000b3a  4601              MOV      r1,r0                 ;1275
000b3c  900a              STR      r0,[sp,#0x28]         ;1275
000b3e  980b              LDR      r0,[sp,#0x2c]         ;1275
000b40  f7fffffe          BL       __aeabi_fdiv
000b44  495e              LDR      r1,|L1.3264|
000b46  61c8              STR      r0,[r1,#0x1c]         ;1275  ; Work_paraBack
000b48  e087              B        |L1.3162|
                  |L1.2890|
000b4a  4855              LDR      r0,|L1.3232|
000b4c  6800              LDR      r0,[r0,#0]            ;1277  ; Show_Parameter
000b4e  495e              LDR      r1,|L1.3272|
000b50  900b              STR      r0,[sp,#0x2c]         ;1277
000b52  f7fffffe          BL       __aeabi_cfcmple
000b56  d84a              BHI      |L1.3054|
000b58  4851              LDR      r0,|L1.3232|
000b5a  6800              LDR      r0,[r0,#0]            ;1277  ; Show_Parameter
000b5c  9009              STR      r0,[sp,#0x24]         ;1277
000b5e  f7fffffe          BL       __aeabi_f2d
000b62  4a5d              LDR      r2,|L1.3288|
000b64  4b5d              LDR      r3,|L1.3292|
000b66  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1277
000b6a  f7fffffe          BL       __aeabi_cdrcmple
000b6e  d23e              BCS      |L1.3054|
000b70  4853              LDR      r0,|L1.3264|
000b72  6980              LDR      r0,[r0,#0x18]         ;1279  ; Work_paraBack
000b74  f8cd04f4          STR      r0,[sp,#0x4f4]        ;1279
000b78  4851              LDR      r0,|L1.3264|
000b7a  69c0              LDR      r0,[r0,#0x1c]         ;1280  ; Work_paraBack
000b7c  f8cd04f0          STR      r0,[sp,#0x4f0]        ;1280
000b80  4847              LDR      r0,|L1.3232|
000b82  6800              LDR      r0,[r0,#0]            ;1281  ; Show_Parameter
000b84  9001              STR      r0,[sp,#4]            ;1281
000b86  f7fffffe          BL       __aeabi_f2d
000b8a  4a53              LDR      r2,|L1.3288|
000b8c  4b53              LDR      r3,|L1.3292|
000b8e  e9cd0102          STRD     r0,r1,[sp,#8]         ;1281
000b92  f7fffffe          BL       __aeabi_dsub
000b96  4a52              LDR      r2,|L1.3296|
000b98  4b52              LDR      r3,|L1.3300|
000b9a  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1281
000b9e  f7fffffe          BL       __aeabi_dmul
000ba2  2200              MOVS     r2,#0                 ;1281
000ba4  4b50              LDR      r3,|L1.3304|
000ba6  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;1281
000baa  f7fffffe          BL       __aeabi_dadd
000bae  2200              MOVS     r2,#0                 ;1281
000bb0  4b4e              LDR      r3,|L1.3308|
000bb2  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1281
000bb6  f7fffffe          BL       __aeabi_dadd
000bba  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1281
000bbe  f7fffffe          BL       __aeabi_d2f
000bc2  493f              LDR      r1,|L1.3264|
000bc4  6188              STR      r0,[r1,#0x18]         ;1281  ; Work_paraBack
000bc6  4608              MOV      r0,r1                 ;1283
000bc8  6980              LDR      r0,[r0,#0x18]         ;1283  ; Work_paraBack
000bca  900a              STR      r0,[sp,#0x28]         ;1283
000bcc  4834              LDR      r0,|L1.3232|
000bce  6840              LDR      r0,[r0,#4]            ;1283  ; Show_Parameter
000bd0  9009              STR      r0,[sp,#0x24]         ;1283
000bd2  990a              LDR      r1,[sp,#0x28]         ;1283
000bd4  f7fffffe          BL       __aeabi_fmul
000bd8  900b              STR      r0,[sp,#0x2c]         ;1283
000bda  4831              LDR      r0,|L1.3232|
000bdc  6800              LDR      r0,[r0,#0]            ;1283  ; Show_Parameter
000bde  4601              MOV      r1,r0                 ;1283
000be0  900a              STR      r0,[sp,#0x28]         ;1283
000be2  980b              LDR      r0,[sp,#0x2c]         ;1283
000be4  f7fffffe          BL       __aeabi_fdiv
000be8  4935              LDR      r1,|L1.3264|
000bea  61c8              STR      r0,[r1,#0x1c]         ;1283  ; Work_paraBack
000bec  e035              B        |L1.3162|
                  |L1.3054|
000bee  4834              LDR      r0,|L1.3264|
000bf0  6980              LDR      r0,[r0,#0x18]         ;1287  ; Work_paraBack
000bf2  f8cd04f4          STR      r0,[sp,#0x4f4]        ;1287
000bf6  4832              LDR      r0,|L1.3264|
000bf8  69c0              LDR      r0,[r0,#0x1c]         ;1288  ; Work_paraBack
000bfa  f8cd04f0          STR      r0,[sp,#0x4f0]        ;1288
000bfe  4828              LDR      r0,|L1.3232|
000c00  6800              LDR      r0,[r0,#0]            ;1289  ; Show_Parameter
000c02  493b              LDR      r1,|L1.3312|
000c04  9004              STR      r0,[sp,#0x10]         ;1289
000c06  f7fffffe          BL       __aeabi_fmul
000c0a  9005              STR      r0,[sp,#0x14]         ;1289
000c0c  f7fffffe          BL       __aeabi_f2d
000c10  4a31              LDR      r2,|L1.3288|
000c12  4b32              LDR      r3,|L1.3292|
000c14  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;1289
000c18  f7fffffe          BL       __aeabi_ddiv
000c1c  2200              MOVS     r2,#0                 ;1289
000c1e  4b33              LDR      r3,|L1.3308|
000c20  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1289
000c24  f7fffffe          BL       __aeabi_dadd
000c28  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1289
000c2c  f7fffffe          BL       __aeabi_d2f
000c30  4923              LDR      r1,|L1.3264|
000c32  6188              STR      r0,[r1,#0x18]         ;1289  ; Work_paraBack
000c34  4608              MOV      r0,r1                 ;1291
000c36  6980              LDR      r0,[r0,#0x18]         ;1291  ; Work_paraBack
000c38  900a              STR      r0,[sp,#0x28]         ;1291
000c3a  4819              LDR      r0,|L1.3232|
000c3c  6840              LDR      r0,[r0,#4]            ;1291  ; Show_Parameter
000c3e  9009              STR      r0,[sp,#0x24]         ;1291
000c40  990a              LDR      r1,[sp,#0x28]         ;1291
000c42  f7fffffe          BL       __aeabi_fmul
000c46  900b              STR      r0,[sp,#0x2c]         ;1291
000c48  4815              LDR      r0,|L1.3232|
000c4a  6800              LDR      r0,[r0,#0]            ;1291  ; Show_Parameter
000c4c  4601              MOV      r1,r0                 ;1291
000c4e  900a              STR      r0,[sp,#0x28]         ;1291
000c50  980b              LDR      r0,[sp,#0x2c]         ;1291
000c52  f7fffffe          BL       __aeabi_fdiv
000c56  491a              LDR      r1,|L1.3264|
000c58  61c8              STR      r0,[r1,#0x1c]         ;1291  ; Work_paraBack
                  |L1.3162|
000c5a  4819              LDR      r0,|L1.3264|
000c5c  69c0              LDR      r0,[r0,#0x1c]         ;1294  ; Work_paraBack
000c5e  900b              STR      r0,[sp,#0x2c]         ;1294
000c60  4817              LDR      r0,|L1.3264|
000c62  6980              LDR      r0,[r0,#0x18]         ;1294  ; Work_paraBack
000c64  900a              STR      r0,[sp,#0x28]         ;1294
000c66  990b              LDR      r1,[sp,#0x2c]         ;1294
000c68  f7fffffe          BL       get_Standing_wave_ratio
000c6c  f8cd04ec          STR      r0,[sp,#0x4ec]        ;1294
000c70  4813              LDR      r0,|L1.3264|
000c72  6980              LDR      r0,[r0,#0x18]         ;1297  ; Work_paraBack
000c74  491f              LDR      r1,|L1.3316|
000c76  900b              STR      r0,[sp,#0x2c]         ;1297
000c78  f7fffffe          BL       __aeabi_cfrcmple
000c7c  d34a              BCC      |L1.3348|
000c7e  f8dd04ec          LDR      r0,[sp,#0x4ec]        ;1297
000c82  f7fffffe          BL       __aeabi_f2d
000c86  4a16              LDR      r2,|L1.3296|
000c88  4b1b              LDR      r3,|L1.3320|
000c8a  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1297
000c8e  f7fffffe          BL       __aeabi_cdrcmple
000c92  d93f              BLS      |L1.3348|
000c94  f04f517e          MOV      r1,#0x3f800000        ;1297
000c98  e030              B        |L1.3324|
000c9a  0000              DCW      0x0000
                  |L1.3228|
                          DCD      0x42c80000
                  |L1.3232|
                          DCD      Show_Parameter
                  |L1.3236|
                          DCD      SWR_array
                  |L1.3240|
                          DCD      ADC_ConvertedValue
                  |L1.3244|
                          DCD      0x400a6666
                  |L1.3248|
                          DCD      0x40080000
                  |L1.3252|
                          DCD      0x3ff80000
                  |L1.3256|
                          DCD      0x4042c000
                  |L1.3260|
                          DCD      0x404e0000
                  |L1.3264|
                          DCD      Work_paraBack
                  |L1.3268|
                          DCD      0x42200000
                  |L1.3272|
                          DCD      0x40a00000
                  |L1.3276|
                          DCD      0x43c80000
                  |L1.3280|
                          DCD      0x447a0000
                  |L1.3284|
                          DCD      0x41a00000
                  |L1.3288|
                          DCD      0x9999999a
                  |L1.3292|
                          DCD      0x40099999
                  |L1.3296|
                          DCD      0xcccccccd
                  |L1.3300|
                          DCD      0x40715ccc
                  |L1.3304|
                          DCD      0x407f4000
                  |L1.3308|
                          DCD      0x40340000
                  |L1.3312|
                          DCD      0x43fa0000
                  |L1.3316|
                          DCD      0x44bb8000
                  |L1.3320|
                          DCD      0x3ffccccc
                  |L1.3324|
000cfc  f8dd04ec          LDR      r0,[sp,#0x4ec]        ;1297
000d00  f7fffffe          BL       __aeabi_cfcmple
000d04  d306              BCC      |L1.3348|
000d06  487c              LDR      r0,|L1.3832|
000d08  6a00              LDR      r0,[r0,#0x20]         ;1297  ; Work_paraBack
000d0a  497c              LDR      r1,|L1.3836|
000d0c  900b              STR      r0,[sp,#0x2c]         ;1297
000d0e  f7fffffe          BL       __aeabi_cfrcmple
000d12  d819              BHI      |L1.3400|
                  |L1.3348|
000d14  990d              LDR      r1,[sp,#0x34]         ;1299
000d16  eb010281          ADD      r2,r1,r1,LSL #2       ;1299
000d1a  f8dd1508          LDR      r1,[sp,#0x508]        ;1299
000d1e  eb010142          ADD      r1,r1,r2,LSL #1       ;1299
000d22  4a77              LDR      r2,|L1.3840|
000d24  f8dd04f4          LDR      r0,[sp,#0x4f4]        ;1299
000d28  f8420021          STR      r0,[r2,r1,LSL #2]     ;1299
000d2c  990d              LDR      r1,[sp,#0x34]         ;1300
000d2e  eb010281          ADD      r2,r1,r1,LSL #2       ;1300
000d32  f8dd1508          LDR      r1,[sp,#0x508]        ;1300
000d36  eb010142          ADD      r1,r1,r2,LSL #1       ;1300
000d3a  4a72              LDR      r2,|L1.3844|
000d3c  f8dd04f0          LDR      r0,[sp,#0x4f0]        ;1300
000d40  f8420021          STR      r0,[r2,r1,LSL #2]     ;1300
000d44  2000              MOVS     r0,#0                 ;1301
000d46  e5be              B        |L1.2246|
                  |L1.3400|
000d48  486b              LDR      r0,|L1.3832|
000d4a  6981              LDR      r1,[r0,#0x18]         ;1305  ; Work_paraBack
000d4c  980d              LDR      r0,[sp,#0x34]         ;1305
000d4e  eb000280          ADD      r2,r0,r0,LSL #2       ;1305
000d52  f8dd0508          LDR      r0,[sp,#0x508]        ;1305
000d56  eb000242          ADD      r2,r0,r2,LSL #1       ;1305
000d5a  4869              LDR      r0,|L1.3840|
000d5c  f8401022          STR      r1,[r0,r2,LSL #2]     ;1305
000d60  4865              LDR      r0,|L1.3832|
000d62  69c1              LDR      r1,[r0,#0x1c]         ;1306  ; Work_paraBack
000d64  980d              LDR      r0,[sp,#0x34]         ;1306
000d66  eb000280          ADD      r2,r0,r0,LSL #2       ;1306
000d6a  f8dd0508          LDR      r0,[sp,#0x508]        ;1306
000d6e  eb000042          ADD      r0,r0,r2,LSL #1       ;1306
000d72  4a64              LDR      r2,|L1.3844|
000d74  f8421020          STR      r1,[r2,r0,LSL #2]     ;1306
                  |L1.3448|
000d78  980c              LDR      r0,[sp,#0x30]         ;1228
000d7a  1c40              ADDS     r0,r0,#1              ;1228
000d7c  900c              STR      r0,[sp,#0x30]         ;1228
                  |L1.3454|
000d7e  980c              LDR      r0,[sp,#0x30]         ;1228
000d80  281e              CMP      r0,#0x1e              ;1228
000d82  f6ffadb9          BLT      |L1.2296|
                  |L1.3462|
000d86  e005              B        |L1.3476|
                  |L1.3464|
000d88  2000              MOVS     r0,#0                 ;1314
000d8a  e59c              B        |L1.2246|
                  |L1.3468|
000d8c  2000              MOVS     r0,#0                 ;1319
000d8e  e59a              B        |L1.2246|
                  |L1.3472|
000d90  2000              MOVS     r0,#0                 ;1324
000d92  e598              B        |L1.2246|
                  |L1.3476|
000d94  4858              LDR      r0,|L1.3832|
000d96  6981              LDR      r1,[r0,#0x18]         ;1327  ; Work_paraBack
000d98  980d              LDR      r0,[sp,#0x34]         ;1327
000d9a  eb000280          ADD      r2,r0,r0,LSL #2       ;1327
000d9e  f8dd0508          LDR      r0,[sp,#0x508]        ;1327
000da2  eb000042          ADD      r0,r0,r2,LSL #1       ;1327
000da6  4a56              LDR      r2,|L1.3840|
000da8  f8421020          STR      r1,[r2,r0,LSL #2]     ;1327
000dac  4852              LDR      r0,|L1.3832|
000dae  69c1              LDR      r1,[r0,#0x1c]         ;1328  ; Work_paraBack
000db0  980d              LDR      r0,[sp,#0x34]         ;1328
000db2  eb000280          ADD      r2,r0,r0,LSL #2       ;1328
000db6  f8dd0508          LDR      r0,[sp,#0x508]        ;1328
000dba  eb000042          ADD      r0,r0,r2,LSL #1       ;1328
000dbe  4a51              LDR      r2,|L1.3844|
000dc0  f8421020          STR      r1,[r2,r0,LSL #2]     ;1328
000dc4  4850              LDR      r0,|L1.3848|
000dc6  6901              LDR      r1,[r0,#0x10]         ;1329  ; Show_Parameter
000dc8  980d              LDR      r0,[sp,#0x34]         ;1329
000dca  eb000280          ADD      r2,r0,r0,LSL #2       ;1329
000dce  f8dd0508          LDR      r0,[sp,#0x508]        ;1329
000dd2  eb000042          ADD      r0,r0,r2,LSL #1       ;1329
000dd6  4a4d              LDR      r2,|L1.3852|
000dd8  f8421020          STR      r1,[r2,r0,LSL #2]     ;1329
000ddc  980d              LDR      r0,[sp,#0x34]         ;1331
000dde  eb000180          ADD      r1,r0,r0,LSL #2       ;1331
000de2  f8dd0508          LDR      r0,[sp,#0x508]        ;1331
000de6  eb000041          ADD      r0,r0,r1,LSL #1       ;1331
000dea  4945              LDR      r1,|L1.3840|
000dec  f8510020          LDR      r0,[r1,r0,LSL #2]     ;1331
000df0  9009              STR      r0,[sp,#0x24]         ;1331
000df2  f7fffffe          BL       __aeabi_f2d
000df6  4602              MOV      r2,r0                 ;1331
000df8  460b              MOV      r3,r1                 ;1331
000dfa  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1331
000dfe  a044              ADR      r0,|L1.3856|
000e00  f7fffffe          BL       App_printf
000e04  980d              LDR      r0,[sp,#0x34]         ;1332
000e06  eb000180          ADD      r1,r0,r0,LSL #2       ;1332
000e0a  f8dd0508          LDR      r0,[sp,#0x508]        ;1332
000e0e  eb000041          ADD      r0,r0,r1,LSL #1       ;1332
000e12  493c              LDR      r1,|L1.3844|
000e14  f8510020          LDR      r0,[r1,r0,LSL #2]     ;1332
000e18  9009              STR      r0,[sp,#0x24]         ;1332
000e1a  f7fffffe          BL       __aeabi_f2d
000e1e  4602              MOV      r2,r0                 ;1332
000e20  460b              MOV      r3,r1                 ;1332
000e22  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1332
000e26  a03f              ADR      r0,|L1.3876|
000e28  f7fffffe          BL       App_printf
000e2c  980d              LDR      r0,[sp,#0x34]         ;1333
000e2e  eb000180          ADD      r1,r0,r0,LSL #2       ;1333
000e32  f8dd0508          LDR      r0,[sp,#0x508]        ;1333
000e36  eb000041          ADD      r0,r0,r1,LSL #1       ;1333
000e3a  4934              LDR      r1,|L1.3852|
000e3c  f8510020          LDR      r0,[r1,r0,LSL #2]     ;1333
000e40  9009              STR      r0,[sp,#0x24]         ;1333
000e42  f7fffffe          BL       __aeabi_f2d
000e46  4602              MOV      r2,r0                 ;1333
000e48  460b              MOV      r3,r1                 ;1333
000e4a  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1333
000e4e  a03a              ADR      r0,|L1.3896|
000e50  f7fffffe          BL       App_printf
000e54  f7fffffe          BL       MT2000_Cmd_Stop
000e58  2001              MOVS     r0,#1                 ;1336
000e5a  f7fffffe          BL       MT2000_Wait_Ack
000e5e  f8cd04e8          STR      r0,[sp,#0x4e8]        ;1336
000e62  f8dd04e8          LDR      r0,[sp,#0x4e8]        ;1337
000e66  2801              CMP      r0,#1                 ;1337
000e68  d138              BNE      |L1.3804|
000e6a  f8dd04fc          LDR      r0,[sp,#0x4fc]        ;1339
000e6e  1e40              SUBS     r0,r0,#1              ;1339
000e70  990d              LDR      r1,[sp,#0x34]         ;1339
000e72  4288              CMP      r0,r1                 ;1339
000e74  d003              BEQ      |L1.3710|
000e76  f2427010          MOV      r0,#0x2710            ;1341
000e7a  f7fffffe          BL       vTaskDelay
                  |L1.3710|
000e7e  f8dd04fc          LDR      r0,[sp,#0x4fc]        ;1344
000e82  1e40              SUBS     r0,r0,#1              ;1344
000e84  990d              LDR      r1,[sp,#0x34]         ;1344
000e86  4288              CMP      r0,r1                 ;1344
000e88  dd03              BLE      |L1.3730|
000e8a  2005              MOVS     r0,#5                 ;1346
000e8c  4931              LDR      r1,|L1.3924|
000e8e  7288              STRB     r0,[r1,#0xa]          ;1346
000e90  e026              B        |L1.3808|
                  |L1.3730|
000e92  f8dd04fc          LDR      r0,[sp,#0x4fc]        ;1348
000e96  1e40              SUBS     r0,r0,#1              ;1348
000e98  990d              LDR      r1,[sp,#0x34]         ;1348
000e9a  4288              CMP      r0,r1                 ;1348
000e9c  d120              BNE      |L1.3808|
000e9e  481b              LDR      r0,|L1.3852|
000ea0  f8dd1508          LDR      r1,[sp,#0x508]        ;1350
000ea4  f7fffffe          BL       get_better_SWR
000ea8  f8dd0508          LDR      r0,[sp,#0x508]        ;1351
000eac  2809              CMP      r0,#9                 ;1351
000eae  d117              BNE      |L1.3808|
000eb0  f7fffffe          BL       InternalFlash_SaveData_2
000eb4  2801              CMP      r0,#1                 ;1353
000eb6  d10a              BNE      |L1.3790|
000eb8  f7fffffe          BL       Flash2_to_AcceptAPP
000ebc  a026              ADR      r0,|L1.3928|
000ebe  f7fffffe          BL       App_printf
000ec2  2001              MOVS     r0,#1                 ;1357
000ec4  4923              LDR      r1,|L1.3924|
000ec6  7088              STRB     r0,[r1,#2]            ;1357
000ec8  2002              MOVS     r0,#2                 ;1358
000eca  7308              STRB     r0,[r1,#0xc]          ;1358
000ecc  e008              B        |L1.3808|
                  |L1.3790|
000ece  a028              ADR      r0,|L1.3952|
000ed0  f7fffffe          BL       App_printf
000ed4  2000              MOVS     r0,#0                 ;1363
000ed6  491f              LDR      r1,|L1.3924|
000ed8  7308              STRB     r0,[r1,#0xc]          ;1363
000eda  e001              B        |L1.3808|
                  |L1.3804|
000edc  2000              MOVS     r0,#0                 ;1370
000ede  e4f2              B        |L1.2246|
                  |L1.3808|
000ee0  980d              LDR      r0,[sp,#0x34]         ;1073
000ee2  1c40              ADDS     r0,r0,#1              ;1073
000ee4  900d              STR      r0,[sp,#0x34]         ;1073
                  |L1.3814|
000ee6  f8dd14fc          LDR      r1,[sp,#0x4fc]        ;1073
000eea  980d              LDR      r0,[sp,#0x34]         ;1073
000eec  4288              CMP      r0,r1                 ;1073
000eee  f6ffa8e1          BLT      |L1.180|
000ef2  2000              MOVS     r0,#0                 ;1374
000ef4  e4e7              B        |L1.2246|
;;;1376   
                          ENDP

000ef6  0000              DCW      0x0000
                  |L1.3832|
                          DCD      Work_paraBack
                  |L1.3836|
                          DCD      0x42c80000
                  |L1.3840|
                          DCD      z
                  |L1.3844|
                          DCD      f
                  |L1.3848|
                          DCD      Show_Parameter
                  |L1.3852|
                          DCD      SWR_array
                  |L1.3856|
000f10  466f7277          DCB      "Forward_power=%f \r\n",0
000f14  6172645f
000f18  706f7765
000f1c  723d2566
000f20  200d0a00
                  |L1.3876|
000f24  52657665          DCB      "Reverse_power=%f \r\n",0
000f28  7273655f
000f2c  706f7765
000f30  723d2566
000f34  200d0a00
                  |L1.3896|
000f38  5374616e          DCB      "Standing_wave_ratio=%f \r\n",0
000f3c  64696e67
000f40  5f776176
000f44  655f7261
000f48  74696f3d
000f4c  2566200d
000f50  0a00    
000f52  00                DCB      0
000f53  00                DCB      0
                  |L1.3924|
                          DCD      System
                  |L1.3928|
000f58  666c6173          DCB      "flash save successed!\r\n",0
000f5c  68207361
000f60  76652073
000f64  75636365
000f68  73736564
000f6c  210d0a00
                  |L1.3952|
000f70  666c6173          DCB      "flash save error!\r\n",0
000f74  68207361
000f78  76652065
000f7c  72726f72
000f80  210d0a00

                          AREA ||i.CAN_Header_Remove||, CODE, READONLY, ALIGN=2

                  CAN_Header_Remove PROC
;;;211    /* 去帧头，校验并且返回数据 */
;;;212    CAN_data_t CAN_Header_Remove(Buffer_t *p_PC_data)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;213    {
000004  b0e5              SUB      sp,sp,#0x194
000006  4683              MOV      r11,r0
000008  460c              MOV      r4,r1
;;;214        CAN_data_t CAN_data;
;;;215        int a = 0;
00000a  f04f0a00          MOV      r10,#0
;;;216        int i;
;;;217        unsigned char buf_len[1];
;;;218        unsigned char buf_CRC[2];
;;;219        unsigned int CRC_Back;
;;;220        int AcceptData_Len,AcceptData_CRC;
;;;221        int n = 0;
00000e  46d1              MOV      r9,r10
;;;222        unsigned char Vaild[128];
;;;223        volatile unsigned int j = 0;
000010  2000              MOVS     r0,#0
000012  9000              STR      r0,[sp,#0]
;;;224    
;;;225        while((p_PC_data->data[j++] != 0x05) && (p_PC_data->data[j] != 0x02))
000014  bf00              NOP      
                  |L2.22|
000016  9800              LDR      r0,[sp,#0]
000018  1c41              ADDS     r1,r0,#1
00001a  9100              STR      r1,[sp,#0]
00001c  5c21              LDRB     r1,[r4,r0]
00001e  2905              CMP      r1,#5
000020  d003              BEQ      |L2.42|
000022  9900              LDR      r1,[sp,#0]
000024  5c61              LDRB     r1,[r4,r1]
000026  2902              CMP      r1,#2
000028  d1f5              BNE      |L2.22|
                  |L2.42|
;;;226            ;
;;;227        if(j>250)
00002a  9800              LDR      r0,[sp,#0]
00002c  28fa              CMP      r0,#0xfa
00002e  d901              BLS      |L2.52|
;;;228        {
;;;229            j = 0;
000030  2000              MOVS     r0,#0
000032  9000              STR      r0,[sp,#0]
                  |L2.52|
;;;230        }
;;;231    //    App_printf("j = %d\r\n",j);
;;;232    	
;;;233        buf_len[0] = p_PC_data->data[j+2];
000034  9800              LDR      r0,[sp,#0]
000036  1c80              ADDS     r0,r0,#2
000038  5c20              LDRB     r0,[r4,r0]
00003a  9022              STR      r0,[sp,#0x88]
;;;234    //    App_printf("buff_len[0] = %x\r\n",buf_len[0]);
;;;235    	
;;;236        AcceptData_Len = (buf_len[0]);
00003c  f89d5088          LDRB     r5,[sp,#0x88]
;;;237        buf_CRC[0] = p_PC_data->data[AcceptData_Len+3+j];
000040  1ce8              ADDS     r0,r5,#3
000042  9900              LDR      r1,[sp,#0]
000044  4408              ADD      r0,r0,r1
000046  5c20              LDRB     r0,[r4,r0]
000048  f88d0084          STRB     r0,[sp,#0x84]
;;;238        buf_CRC[1] = p_PC_data->data[AcceptData_Len+4+j];
00004c  1d28              ADDS     r0,r5,#4
00004e  9900              LDR      r1,[sp,#0]
000050  4408              ADD      r0,r0,r1
000052  5c20              LDRB     r0,[r4,r0]
000054  f88d0085          STRB     r0,[sp,#0x85]
;;;239    //    App_printf("buf_CRC= %x%x\r\n", buf_CRC[0], buf_CRC[1]);
;;;240    	
;;;241        for(n = j+3; n < AcceptData_Len+3+j; n++)
000058  9800              LDR      r0,[sp,#0]
00005a  f1000903          ADD      r9,r0,#3
00005e  e008              B        |L2.114|
                  |L2.96|
;;;242        {
;;;243            Vaild[a] = p_PC_data->data[n];
000060  f8140009          LDRB     r0,[r4,r9]
000064  a901              ADD      r1,sp,#4
000066  f801000a          STRB     r0,[r1,r10]
;;;244            a++;
00006a  f10a0a01          ADD      r10,r10,#1
00006e  f1090901          ADD      r9,r9,#1              ;241
                  |L2.114|
000072  1ce8              ADDS     r0,r5,#3              ;241
000074  9900              LDR      r1,[sp,#0]            ;241
000076  4408              ADD      r0,r0,r1              ;241
000078  4548              CMP      r0,r9                 ;241
00007a  d8f1              BHI      |L2.96|
;;;245        }
;;;246        a = 0;
00007c  f04f0a00          MOV      r10,#0
;;;247    	
;;;248        App_printf("Vaild Data = ");
000080  a028              ADR      r0,|L2.292|
000082  f7fffffe          BL       App_printf
;;;249        for(i = 0; i<AcceptData_Len ; i++ )
000086  2600              MOVS     r6,#0
000088  e005              B        |L2.150|
                  |L2.138|
;;;250        {
;;;251            App_printf("%02x ",Vaild[i]);
00008a  a801              ADD      r0,sp,#4
00008c  5d81              LDRB     r1,[r0,r6]
00008e  a029              ADR      r0,|L2.308|
000090  f7fffffe          BL       App_printf
000094  1c76              ADDS     r6,r6,#1              ;249
                  |L2.150|
000096  42ae              CMP      r6,r5                 ;249
000098  dbf7              BLT      |L2.138|
;;;252        }
;;;253        App_printf("\r\n");
00009a  a028              ADR      r0,|L2.316|
00009c  f7fffffe          BL       App_printf
;;;254    	
;;;255        AcceptData_CRC = ((buf_CRC[0]<<8) +(buf_CRC[1]));
0000a0  f89d0085          LDRB     r0,[sp,#0x85]
0000a4  f89d1084          LDRB     r1,[sp,#0x84]
0000a8  eb002801          ADD      r8,r0,r1,LSL #8
;;;256        App_printf("AcceptData_CRC = %x\r\n",AcceptData_CRC);
0000ac  4641              MOV      r1,r8
0000ae  a024              ADR      r0,|L2.320|
0000b0  f7fffffe          BL       App_printf
;;;257        CRC_Back = CRC16_XMODEM(Vaild, AcceptData_Len);
0000b4  4629              MOV      r1,r5
0000b6  a801              ADD      r0,sp,#4
0000b8  f7fffffe          BL       CRC16_XMODEM
0000bc  4607              MOV      r7,r0
;;;258        App_printf("CRC_Back = %x\r\n",CRC_Back);
0000be  4639              MOV      r1,r7
0000c0  a025              ADR      r0,|L2.344|
0000c2  f7fffffe          BL       App_printf
;;;259    
;;;260        if(CRC_Back == AcceptData_CRC)
0000c6  4547              CMP      r7,r8
0000c8  d11d              BNE      |L2.262|
;;;261        {
;;;262            CAN_data.eff_sign = 1;
0000ca  2001              MOVS     r0,#1
0000cc  f88d008c          STRB     r0,[sp,#0x8c]
;;;263            CAN_data.CAN_ID = p_PC_data->data[j+1];
0000d0  9800              LDR      r0,[sp,#0]
0000d2  1c40              ADDS     r0,r0,#1
0000d4  5c20              LDRB     r0,[r4,r0]
0000d6  f88d008d          STRB     r0,[sp,#0x8d]
;;;264            CAN_data.Func_code[0] = p_PC_data->data[j+3];
0000da  9800              LDR      r0,[sp,#0]
0000dc  1cc0              ADDS     r0,r0,#3
0000de  5c20              LDRB     r0,[r4,r0]
0000e0  f88d008e          STRB     r0,[sp,#0x8e]
;;;265            CAN_data.Func_code[1] = p_PC_data->data[j+4];
0000e4  9800              LDR      r0,[sp,#0]
0000e6  1d00              ADDS     r0,r0,#4
0000e8  5c21              LDRB     r1,[r4,r0]
0000ea  a823              ADD      r0,sp,#0x8c
0000ec  70c1              STRB     r1,[r0,#3]
;;;266    
;;;267            memcpy(CAN_data.data_buf, p_PC_data->data+j+6, AcceptData_Len-3);
0000ee  1eea              SUBS     r2,r5,#3
0000f0  9800              LDR      r0,[sp,#0]
0000f2  4420              ADD      r0,r0,r4
0000f4  1d81              ADDS     r1,r0,#6
0000f6  a824              ADD      r0,sp,#0x90
0000f8  f7fffffe          BL       __aeabi_memcpy
;;;268            CAN_data.len = AcceptData_Len-3;
0000fc  1ee8              SUBS     r0,r5,#3
0000fe  b2c0              UXTB     r0,r0
000100  f88d0190          STRB     r0,[sp,#0x190]
000104  e005              B        |L2.274|
                  |L2.262|
;;;269    //        App_printf("CAN_ID = %X\r\n",CAN_data.CAN_ID);
;;;270    //        App_printf("Func_code_buf = %02X%02X\r\n", CAN_data.Func_code[0],  CAN_data.Func_code[1]);
;;;271           
;;;272    //		App_printf("Specific Data = ");
;;;273    //		for(int i = 0; i<AcceptData_Len-3; i++)
;;;274    //        {
;;;275    //            App_printf("%02X ",CAN_data.data_buf[i]);
;;;276    //        }
;;;277    //        App_printf("\r\n");
;;;278    //        App_printf("CAN_data->len = %02X\r\n", CAN_data.len);
;;;279        }
;;;280        else
;;;281        {
;;;282            CAN_data.eff_sign = 0;//标志结构体里面是数据无效
000106  2000              MOVS     r0,#0
000108  f88d008c          STRB     r0,[sp,#0x8c]
;;;283            App_printf("CRC错误\r\n");
00010c  a016              ADR      r0,|L2.360|
00010e  f7fffffe          BL       App_printf
                  |L2.274|
;;;284        }
;;;285        return CAN_data;
000112  f2401205          MOV      r2,#0x105
000116  a923              ADD      r1,sp,#0x8c
000118  4658              MOV      r0,r11
00011a  f7fffffe          BL       __aeabi_memcpy
;;;286    }
00011e  b065              ADD      sp,sp,#0x194
000120  e8bd8ff0          POP      {r4-r11,pc}
;;;287    
                          ENDP

                  |L2.292|
000124  5661696c          DCB      "Vaild Data = ",0
000128  64204461
00012c  7461203d
000130  2000    
000132  00                DCB      0
000133  00                DCB      0
                  |L2.308|
000134  25303278          DCB      "%02x ",0
000138  2000    
00013a  00                DCB      0
00013b  00                DCB      0
                  |L2.316|
00013c  0d0a00            DCB      "\r\n",0
00013f  00                DCB      0
                  |L2.320|
000140  41636365          DCB      "AcceptData_CRC = %x\r\n",0
000144  70744461
000148  74615f43
00014c  5243203d
000150  2025780d
000154  0a00    
000156  00                DCB      0
000157  00                DCB      0
                  |L2.344|
000158  4352435f          DCB      "CRC_Back = %x\r\n",0
00015c  4261636b
000160  203d2025
000164  780d0a00
                  |L2.360|
000168  435243b4          DCB      "CRC",180,237,206,243,"\r\n",0
00016c  edcef30d
000170  0a00    
000172  00                DCB      0
000173  00                DCB      0

                          AREA ||i.CAN_Middle_Header_Remove||, CODE, READONLY, ALIGN=2

                  CAN_Middle_Header_Remove PROC
;;;94     /* 如果是从CAN接收到的数据，去除数据中间的帧头(4个字节) */
;;;95     uint8_t CAN_Middle_Header_Remove(Buffer_t *p_PC_data, Buffer_t *p_data)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;96     {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;97         uint8_t j = 0;
000008  2600              MOVS     r6,#0
;;;98         uint8_t _12number  = 0;
00000a  46b1              MOV      r9,r6
;;;99         uint8_t remainder  = 0;
00000c  46b0              MOV      r8,r6
;;;100        uint8_t len = 0;
00000e  46b2              MOV      r10,r6
;;;101        while((p_PC_data->data[j++] != 0x05) && (p_PC_data->data[j] != 0x02))
000010  bf00              NOP      
                  |L3.18|
000012  4630              MOV      r0,r6
000014  1c71              ADDS     r1,r6,#1
000016  b2ce              UXTB     r6,r1
000018  5c20              LDRB     r0,[r4,r0]
00001a  2805              CMP      r0,#5
00001c  d002              BEQ      |L3.36|
00001e  5da0              LDRB     r0,[r4,r6]
000020  2802              CMP      r0,#2
000022  d1f6              BNE      |L3.18|
                  |L3.36|
;;;102            ;
;;;103        if(j>250)
000024  2efa              CMP      r6,#0xfa
000026  dd03              BLE      |L3.48|
;;;104        {
;;;105            j = 0;
000028  2600              MOVS     r6,#0
;;;106            return 0;
00002a  2000              MOVS     r0,#0
                  |L3.44|
;;;107        }
;;;108    	
;;;109        len = p_PC_data->data[j+2];
;;;110        App_printf("Vaild len = %d\r\n",len);
;;;111    //    App_printf("CEIL_DIV(len+8-12,8)) = %d\r\n",CEIL_DIV(len+8-12,8));
;;;112        p_PC_data->len = (CEIL_DIV(len+8-12,8))*4+len+8;
;;;113    //    App_printf("p_PC_data->len = %d\r\n",p_PC_data->len);
;;;114    	
;;;115        _12number = (p_PC_data->len)/12;
;;;116        remainder = (p_PC_data->len)%12;//这个数肯定大于等于5,或则或则是0
;;;117        if(_12number == 0)   //接到的数小于12个
;;;118        {
;;;119            memcpy(p_data->data,p_PC_data->data+j-1,remainder);
;;;120            p_data->len = remainder;
;;;121        }
;;;122        else if(_12number == 1 && remainder == 0)     //接到的数等于12个
;;;123        {
;;;124            memcpy(p_data->data,p_PC_data->data+j-1,12);
;;;125            p_data->len = 12;
;;;126        }
;;;127        else     //串口接到的数大于12个
;;;128        {
;;;129            int i = 1;
;;;130            memcpy(p_data->data,p_PC_data->data+j-1,12);
;;;131            for(i = 1; i<_12number; i++)
;;;132            {
;;;133                memcpy(p_data->data+12+8*(i-1),p_PC_data->data+j-1+12*(i-0)+4,8);
;;;134            }
;;;135            if(remainder != 0)
;;;136            {
;;;137                memcpy(p_data->data+12+8*(i-1),p_PC_data->data+j-1+12*i+4,remainder-4);
;;;138                p_data->len = 12+8*(i-1)+remainder-4;
;;;139            }
;;;140            else
;;;141            {
;;;142                p_data->len = 12+8*(i-1);
;;;143            }
;;;144        }
;;;145        return 1;
;;;146    }
00002c  e8bd9ff0          POP      {r4-r12,pc}
                  |L3.48|
000030  1cb0              ADDS     r0,r6,#2              ;109
000032  f814a000          LDRB     r10,[r4,r0]           ;109
000036  4651              MOV      r1,r10                ;110
000038  a03e              ADR      r0,|L3.308|
00003a  f7fffffe          BL       App_printf
00003e  f10a0003          ADD      r0,r10,#3             ;112
000042  17c1              ASRS     r1,r0,#31             ;112
000044  eb007151          ADD      r1,r0,r1,LSR #29      ;112
000048  10c9              ASRS     r1,r1,#3              ;112
00004a  eb0a0181          ADD      r1,r10,r1,LSL #2      ;112
00004e  3108              ADDS     r1,r1,#8              ;112
000050  f8841100          STRB     r1,[r4,#0x100]        ;112
000054  f8940100          LDRB     r0,[r4,#0x100]        ;115
000058  210c              MOVS     r1,#0xc               ;115
00005a  fb90f0f1          SDIV     r0,r0,r1              ;115
00005e  f00009ff          AND      r9,r0,#0xff           ;115
000062  f8940100          LDRB     r0,[r4,#0x100]        ;116
000066  fb90f2f1          SDIV     r2,r0,r1              ;116
00006a  fb010012          MLS      r0,r1,r2,r0           ;116
00006e  f00008ff          AND      r8,r0,#0xff           ;116
000072  f1b90f00          CMP      r9,#0                 ;117
000076  d108              BNE      |L3.138|
000078  19a0              ADDS     r0,r4,r6              ;119
00007a  1e41              SUBS     r1,r0,#1              ;119
00007c  4642              MOV      r2,r8                 ;119
00007e  4628              MOV      r0,r5                 ;119
000080  f7fffffe          BL       __aeabi_memcpy
000084  f8858100          STRB     r8,[r5,#0x100]        ;120
000088  e052              B        |L3.304|
                  |L3.138|
00008a  f1b90f01          CMP      r9,#1                 ;122
00008e  d10e              BNE      |L3.174|
000090  f1b80f00          CMP      r8,#0                 ;122
000094  d10b              BNE      |L3.174|
000096  19a0              ADDS     r0,r4,r6              ;124
000098  f8501d01          LDR      r1,[r0,#-1]!          ;124
00009c  6029              STR      r1,[r5,#0]            ;124
00009e  6841              LDR      r1,[r0,#4]            ;124
0000a0  6069              STR      r1,[r5,#4]            ;124
0000a2  6880              LDR      r0,[r0,#8]            ;124
0000a4  60a8              STR      r0,[r5,#8]            ;124
0000a6  200c              MOVS     r0,#0xc               ;125
0000a8  f8850100          STRB     r0,[r5,#0x100]        ;125
0000ac  e040              B        |L3.304|
                  |L3.174|
0000ae  2701              MOVS     r7,#1                 ;129
0000b0  19a0              ADDS     r0,r4,r6              ;130
0000b2  f8501d01          LDR      r1,[r0,#-1]!          ;130
0000b6  6029              STR      r1,[r5,#0]            ;130
0000b8  6841              LDR      r1,[r0,#4]            ;130
0000ba  6069              STR      r1,[r5,#4]            ;130
0000bc  6880              LDR      r0,[r0,#8]            ;130
0000be  60a8              STR      r0,[r5,#8]            ;130
0000c0  bf00              NOP                            ;131
0000c2  e010              B        |L3.230|
                  |L3.196|
0000c4  19a0              ADDS     r0,r4,r6              ;133
0000c6  1e40              SUBS     r0,r0,#1              ;133
0000c8  4639              MOV      r1,r7                 ;133
0000ca  220c              MOVS     r2,#0xc               ;133
0000cc  fb020201          MLA      r2,r2,r1,r0           ;133
0000d0  1e78              SUBS     r0,r7,#1              ;133
0000d2  f105010c          ADD      r1,r5,#0xc            ;133
0000d6  2308              MOVS     r3,#8                 ;133
0000d8  fb031000          MLA      r0,r3,r0,r1           ;133
0000dc  6851              LDR      r1,[r2,#4]            ;133
0000de  6001              STR      r1,[r0,#0]            ;133
0000e0  6891              LDR      r1,[r2,#8]            ;133
0000e2  6041              STR      r1,[r0,#4]            ;133
0000e4  1c7f              ADDS     r7,r7,#1              ;131
                  |L3.230|
0000e6  454f              CMP      r7,r9                 ;131
0000e8  dbec              BLT      |L3.196|
0000ea  f1b80f00          CMP      r8,#0                 ;135
0000ee  d019              BEQ      |L3.292|
0000f0  19a3              ADDS     r3,r4,r6              ;137
0000f2  1e5b              SUBS     r3,r3,#1              ;137
0000f4  f04f0c0c          MOV      r12,#0xc              ;137
0000f8  fb0c3307          MLA      r3,r12,r7,r3          ;137
0000fc  1d19              ADDS     r1,r3,#4              ;137
0000fe  f1a80204          SUB      r2,r8,#4              ;137
000102  1e7b              SUBS     r3,r7,#1              ;137
000104  f1050c0c          ADD      r12,r5,#0xc           ;137
000108  f04f0b08          MOV      r11,#8                ;137
00010c  fb0bc003          MLA      r0,r11,r3,r12         ;137
000110  f7fffffe          BL       __aeabi_memcpy
000114  1e78              SUBS     r0,r7,#1              ;138
000116  00c0              LSLS     r0,r0,#3              ;138
000118  300c              ADDS     r0,r0,#0xc            ;138
00011a  4440              ADD      r0,r0,r8              ;138
00011c  1f00              SUBS     r0,r0,#4              ;138
00011e  f8850100          STRB     r0,[r5,#0x100]        ;138
000122  e004              B        |L3.302|
                  |L3.292|
000124  1e78              SUBS     r0,r7,#1              ;142
000126  00c0              LSLS     r0,r0,#3              ;142
000128  300c              ADDS     r0,r0,#0xc            ;142
00012a  f8850100          STRB     r0,[r5,#0x100]        ;142
                  |L3.302|
00012e  bf00              NOP                            ;144
                  |L3.304|
000130  2001              MOVS     r0,#1                 ;145
000132  e77b              B        |L3.44|
;;;147    
                          ENDP

                  |L3.308|
000134  5661696c          DCB      "Vaild len = %d\r\n",0
000138  64206c65
00013c  6e203d20
000140  25640d0a
000144  00      
000145  00                DCB      0
000146  00                DCB      0
000147  00                DCB      0

                          AREA ||i.CAN_data_analyze||, CODE, READONLY, ALIGN=2

                  CAN_data_analyze PROC
;;;19     ***************************************************/
;;;20     uint8_t CAN_data_analyze(uint8_t *p_func_code, Buffer_t *p_PC_data)
000000  b5f0              PUSH     {r4-r7,lr}
;;;21     {
000002  f5ad7d05          SUB      sp,sp,#0x214
000006  4604              MOV      r4,r0
000008  460e              MOV      r6,r1
;;;22         uint8_t err_code;
;;;23         App_printf("\r\n进入解析\r\n");
00000a  a022              ADR      r0,|L4.148|
00000c  f7fffffe          BL       App_printf
;;;24         CAN_data_t CAN_data_buf;
;;;25     	
;;;26     #ifdef CAN_MIDDLE_HEADER_REMOVE
;;;27         __align(8) static Buffer_t pp_PC_dat;
;;;28     	
;;;29         CAN_Middle_Header_Remove(p_PC_data,&pp_PC_dat);
000010  4924              LDR      r1,|L4.164|
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       CAN_Middle_Header_Remove
;;;30     //    App_printf("数据长度 %02x \r\n",pp_PC_dat.len);
;;;31     
;;;32         CAN_data_buf  = CAN_Header_Remove(&pp_PC_dat);
000018  4922              LDR      r1,|L4.164|
00001a  a801              ADD      r0,sp,#4
00001c  f7fffffe          BL       CAN_Header_Remove
000020  f44f7284          MOV      r2,#0x108
000024  a901              ADD      r1,sp,#4
000026  a843              ADD      r0,sp,#0x10c
000028  f7fffffe          BL       __aeabi_memcpy4
;;;33     #else
;;;34         CAN_data_buf  = CAN_Header_Remove(p_PC_data);
;;;35     #endif
;;;36     	
;;;37         if(CAN_data_buf.eff_sign == 0)
00002c  f89d010c          LDRB     r0,[sp,#0x10c]
000030  b918              CBNZ     r0,|L4.58|
;;;38             return 5;
000032  2005              MOVS     r0,#5
                  |L4.52|
;;;39         App_printf("解析出来的数据：\r\n");
;;;40         App_printf("AN_data_buf.CAN_ID_buf = %02X\r\n",CAN_data_buf.CAN_ID);
;;;41         App_printf("CAN_data_buf.Func_code = %02X%02X\r\n", CAN_data_buf.Func_code[0],CAN_data_buf.Func_code[1]);
;;;42         p_func_code[0] = CAN_data_buf.Func_code[0];
;;;43         p_func_code[1] = CAN_data_buf.Func_code[1];
;;;44     	
;;;45     	App_printf("CAN_Specific Data = ");
;;;46         for(int i = 0; i<CAN_data_buf.len; i++)
;;;47         {
;;;48             App_printf("%02X ",CAN_data_buf.data_buf[i]);
;;;49         }
;;;50     	App_printf("\r\n");
;;;51     	
;;;52     //    App_printf("CAN_data_buf.len = %d\r\n",CAN_data_buf.len);
;;;53         err_code = Data_Storage(&CAN_data_buf);
;;;54         return err_code;
;;;55     }
000034  f50d7d05          ADD      sp,sp,#0x214
000038  bdf0              POP      {r4-r7,pc}
                  |L4.58|
00003a  a01b              ADR      r0,|L4.168|
00003c  f7fffffe          BL       App_printf
000040  f89d110d          LDRB     r1,[sp,#0x10d]        ;40
000044  a01d              ADR      r0,|L4.188|
000046  f7fffffe          BL       App_printf
00004a  a843              ADD      r0,sp,#0x10c          ;41
00004c  78c2              LDRB     r2,[r0,#3]            ;41
00004e  f89d110e          LDRB     r1,[sp,#0x10e]        ;41
000052  a022              ADR      r0,|L4.220|
000054  f7fffffe          BL       App_printf
000058  f89d010e          LDRB     r0,[sp,#0x10e]        ;42
00005c  7020              STRB     r0,[r4,#0]            ;42
00005e  a843              ADD      r0,sp,#0x10c          ;43
000060  78c0              LDRB     r0,[r0,#3]            ;43
000062  7060              STRB     r0,[r4,#1]            ;43
000064  a026              ADR      r0,|L4.256|
000066  f7fffffe          BL       App_printf
00006a  2500              MOVS     r5,#0                 ;46
00006c  e005              B        |L4.122|
                  |L4.110|
00006e  a844              ADD      r0,sp,#0x110          ;48
000070  5d41              LDRB     r1,[r0,r5]            ;48
000072  a029              ADR      r0,|L4.280|
000074  f7fffffe          BL       App_printf
000078  1c6d              ADDS     r5,r5,#1              ;46
                  |L4.122|
00007a  f89d0210          LDRB     r0,[sp,#0x210]        ;46
00007e  42a8              CMP      r0,r5                 ;46
000080  dcf5              BGT      |L4.110|
000082  a00d              ADR      r0,|L4.184|
000084  f7fffffe          BL       App_printf
000088  a843              ADD      r0,sp,#0x10c          ;53
00008a  f7fffffe          BL       Data_Storage
00008e  4607              MOV      r7,r0                 ;53
000090  4638              MOV      r0,r7                 ;54
000092  e7cf              B        |L4.52|
;;;56     
                          ENDP

                  |L4.148|
000094  0d0abdf8          DCB      "\r\n",189,248,200,235,189,226,206,246,"\r\n",0
000098  c8ebbde2
00009c  cef60d0a
0000a0  00      
0000a1  00                DCB      0
0000a2  00                DCB      0
0000a3  00                DCB      0
                  |L4.164|
                          DCD      pp_PC_dat
                  |L4.168|
0000a8  bde2cef6          DCB      189,226,206,246,179,246,192,180,181,196,202,253,190,221,163
0000ac  b3f6c0b4
0000b0  b5c4cafd
0000b4  bedda3  
0000b7  ba                DCB      186
                  |L4.184|
0000b8  0d0a00            DCB      "\r\n",0
0000bb  00                DCB      0
                  |L4.188|
0000bc  414e5f64          DCB      "AN_data_buf.CAN_ID_buf = %02X\r\n",0
0000c0  6174615f
0000c4  6275662e
0000c8  43414e5f
0000cc  49445f62
0000d0  7566203d
0000d4  20253032
0000d8  580d0a00
                  |L4.220|
0000dc  43414e5f          DCB      "CAN_data_buf.Func_code = %02X%02X\r\n",0
0000e0  64617461
0000e4  5f627566
0000e8  2e46756e
0000ec  635f636f
0000f0  6465203d
0000f4  20253032
0000f8  58253032
0000fc  580d0a00
                  |L4.256|
000100  43414e5f          DCB      "CAN_Specific Data = ",0
000104  53706563
000108  69666963
00010c  20446174
000110  61203d20
000114  00      
000115  00                DCB      0
000116  00                DCB      0
000117  00                DCB      0
                  |L4.280|
000118  25303258          DCB      "%02X ",0
00011c  2000    
00011e  00                DCB      0
00011f  00                DCB      0

                          AREA ||i.Data_Assemble||, CODE, READONLY, ALIGN=2

                  Data_Assemble PROC
;;;669    ********************************************************/
;;;670    uint8_t Data_Assemble(uint8_t *Func_code, uint8_t *p_data, uint8_t Can_ID, uint8_t len, Buffer_t *Buffer)
000000  e92d43fe          PUSH     {r1-r9,lr}
;;;671    {
000004  4606              MOV      r6,r0
000006  4688              MOV      r8,r1
000008  4691              MOV      r9,r2
00000a  461c              MOV      r4,r3
00000c  9d0a              LDR      r5,[sp,#0x28]
;;;672        uint16_t CRC_Back;
;;;673        uint8_t Start_Data[7] = {0x05, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00};
00000e  a123              ADR      r1,|L5.156|
000010  c903              LDM      r1,{r0,r1}
000012  e9cd0101          STRD     r0,r1,[sp,#4]
;;;674        uint8_t End_Data[4] = {0x00, 0x00, 0x03, 0x04};
000016  a023              ADR      r0,|L5.164|
000018  6800              LDR      r0,[r0,#0]
00001a  9000              STR      r0,[sp,#0]
;;;675    	
;;;676        Start_Data[2] = System.CAN_ID[0];	//写入发射机ID
00001c  4822              LDR      r0,|L5.168|
00001e  7800              LDRB     r0,[r0,#0]  ; System
000020  f88d0006          STRB     r0,[sp,#6]
;;;677        Start_Data[3] = len + 3;			//数据长度
000024  1ce0              ADDS     r0,r4,#3
000026  b2c0              UXTB     r0,r0
000028  f88d0007          STRB     r0,[sp,#7]
;;;678        Start_Data[4] = Func_code[0];		//功能码
00002c  7830              LDRB     r0,[r6,#0]
00002e  f88d0008          STRB     r0,[sp,#8]
;;;679        Start_Data[5] = Func_code[1];		//功能码
000032  7870              LDRB     r0,[r6,#1]
000034  f88d0009          STRB     r0,[sp,#9]
;;;680    	
;;;681    #if	ADD_CAN_LEN
;;;682        Start_Data[6] = (CEIL_DIV(Start_Data[3]+8-12,8))*4 + Start_Data[3] + 8;
000038  f89d1007          LDRB     r1,[sp,#7]
00003c  1cc8              ADDS     r0,r1,#3
00003e  17c1              ASRS     r1,r0,#31
000040  eb007151          ADD      r1,r0,r1,LSR #29
000044  10c9              ASRS     r1,r1,#3
000046  f89d2007          LDRB     r2,[sp,#7]
00004a  eb020181          ADD      r1,r2,r1,LSL #2
00004e  3108              ADDS     r1,r1,#8
000050  b2c9              UXTB     r1,r1
000052  f88d100a          STRB     r1,[sp,#0xa]
;;;683    #endif
;;;684    	
;;;685        memcpy(Buffer->data, Start_Data,7);
000056  9801              LDR      r0,[sp,#4]
000058  6028              STR      r0,[r5,#0]
00005a  f8bd0008          LDRH     r0,[sp,#8]
00005e  80a8              STRH     r0,[r5,#4]
000060  f89d000a          LDRB     r0,[sp,#0xa]
000064  71a8              STRB     r0,[r5,#6]
;;;686        memcpy(Buffer->data+7, p_data, len);
000066  4622              MOV      r2,r4
000068  4641              MOV      r1,r8
00006a  1de8              ADDS     r0,r5,#7
00006c  f7fffffe          BL       __aeabi_memcpy
;;;687        CRC_Back = CRC16_XMODEM(Buffer->data+4, len+3);
000070  1ce1              ADDS     r1,r4,#3
000072  1d28              ADDS     r0,r5,#4
000074  f7fffffe          BL       CRC16_XMODEM
000078  4607              MOV      r7,r0
;;;688        End_Data[0] = (uint8_t)((CRC_Back >> 8) & 0xff);		//存高八位
00007a  0a38              LSRS     r0,r7,#8
00007c  f88d0000          STRB     r0,[sp,#0]
;;;689        End_Data[1] = (uint8_t)((CRC_Back >> 0) & 0xff) ;		//低八位
000080  b2f8              UXTB     r0,r7
000082  f88d0001          STRB     r0,[sp,#1]
;;;690        memcpy(Buffer->data+len+7, End_Data,4);
000086  1928              ADDS     r0,r5,r4
000088  9900              LDR      r1,[sp,#0]
00008a  f8c01007          STR      r1,[r0,#7]
;;;691        Buffer->len = len+11;
00008e  f104000b          ADD      r0,r4,#0xb
000092  f8850100          STRB     r0,[r5,#0x100]
;;;692        return 1;
000096  2001              MOVS     r0,#1
;;;693    }
000098  e8bd83fe          POP      {r1-r9,pc}
;;;694    
                          ENDP

                  |L5.156|
00009c  050200            DCB      5,2,0
00009f  00                DCB      0
0000a0  00                DCB      0
0000a1  00                DCB      0
0000a2  00                DCB      0
0000a3  00                DCB      0
                  |L5.164|
0000a4  00                DCB      0
0000a5  00                DCB      0
0000a6  0304              DCB      3,4
                  |L5.168|
                          DCD      System

                          AREA ||i.Data_Storage||, CODE, READONLY, ALIGN=2

                  Data_Storage PROC
;;;367    /* 数据赋值更新 */
;;;368    uint8_t Data_Storage(CAN_data_t *CAN_data_cmp)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;369    {
000004  4604              MOV      r4,r0
;;;370        if(CAN_data_cmp->Func_code[0] == 0x01 && CAN_data_cmp->Func_code[1] == 0x01)		//Pc下发报警参数阈值
000006  78a0              LDRB     r0,[r4,#2]
000008  2801              CMP      r0,#1
00000a  d178              BNE      |L6.254|
00000c  78e0              LDRB     r0,[r4,#3]
00000e  2801              CMP      r0,#1
000010  d175              BNE      |L6.254|
;;;371        {
;;;372            memcpy(Alarm_threshold.Transmitte_id, 		CAN_data_cmp->data_buf, 	1);
000012  48fa              LDR      r0,|L6.1020|
000014  7921              LDRB     r1,[r4,#4]
000016  f8801026          STRB     r1,[r0,#0x26]
;;;373            memcpy(Alarm_threshold.Low_temp_limit,		CAN_data_cmp->data_buf+1,	4);
00001a  4601              MOV      r1,r0
00001c  f8d40005          LDR      r0,[r4,#5]
000020  6008              STR      r0,[r1,#0]  ; Alarm_threshold
;;;374            memcpy(Alarm_threshold.Upp_temp_limit,		CAN_data_cmp->data_buf+5,	4);
000022  f8d40009          LDR      r0,[r4,#9]
000026  6048              STR      r0,[r1,#4]  ; Alarm_threshold
;;;375            memcpy(Alarm_threshold.Low_humidity_limit,	CAN_data_cmp->data_buf+9,	4);
000028  f8d4000d          LDR      r0,[r4,#0xd]
00002c  6088              STR      r0,[r1,#8]  ; Alarm_threshold
;;;376            memcpy(Alarm_threshold.Upp_humidity_limit,	CAN_data_cmp->data_buf+13,	4);
00002e  f8d40011          LDR      r0,[r4,#0x11]
000032  60c8              STR      r0,[r1,#0xc]  ; Alarm_threshold
;;;377            memcpy(Alarm_threshold.Low_45I_limit,		CAN_data_cmp->data_buf+17,	4);
000034  f8d40015          LDR      r0,[r4,#0x15]
000038  6108              STR      r0,[r1,#0x10]  ; Alarm_threshold
;;;378            memcpy(Alarm_threshold.Upp_45I_limit,		CAN_data_cmp->data_buf+21,	4);
00003a  f8d40019          LDR      r0,[r4,#0x19]
00003e  6148              STR      r0,[r1,#0x14]  ; Alarm_threshold
;;;379            memcpy(Alarm_threshold.Low_45V_limit,		CAN_data_cmp->data_buf+25,	4);
000040  f8d4001d          LDR      r0,[r4,#0x1d]
000044  6188              STR      r0,[r1,#0x18]  ; Alarm_threshold
;;;380            memcpy(Alarm_threshold.Upp_45V_limit,		CAN_data_cmp->data_buf+29,	4);
000046  f8d40021          LDR      r0,[r4,#0x21]
00004a  61c8              STR      r0,[r1,#0x1c]  ; Alarm_threshold
;;;381            memcpy(System.time,							CAN_data_cmp->data_buf+33,	6);
00004c  49ec              LDR      r1,|L6.1024|
00004e  f8d42025          LDR      r2,[r4,#0x25]
000052  604a              STR      r2,[r1,#4]  ; System
000054  f8b40029          LDRH     r0,[r4,#0x29]
000058  8108              STRH     r0,[r1,#8]
;;;382    		
;;;383            App_printf("\r\n");
00005a  a0ea              ADR      r0,|L6.1028|
00005c  f7fffffe          BL       App_printf
;;;384            App_printf("%f  %f",	Alarm_threshold.Low_temp_limit[0],		Alarm_threshold.Upp_temp_limit[0]);
000060  49e6              LDR      r1,|L6.1020|
000062  6848              LDR      r0,[r1,#4]  ; Alarm_threshold
000064  f7fffffe          BL       __aeabi_f2d
000068  4605              MOV      r5,r0
00006a  460e              MOV      r6,r1
00006c  49e3              LDR      r1,|L6.1020|
00006e  6808              LDR      r0,[r1,#0]  ; Alarm_threshold
000070  f7fffffe          BL       __aeabi_f2d
000074  4607              MOV      r7,r0
000076  463a              MOV      r2,r7
000078  460b              MOV      r3,r1
00007a  a0e3              ADR      r0,|L6.1032|
00007c  e9cd5600          STRD     r5,r6,[sp,#0]
000080  f7fffffe          BL       App_printf
;;;385            App_printf("%f  %f",	Alarm_threshold.Low_humidity_limit[0],	Alarm_threshold.Upp_humidity_limit[0]);
000084  49dd              LDR      r1,|L6.1020|
000086  68c8              LDR      r0,[r1,#0xc]  ; Alarm_threshold
000088  f7fffffe          BL       __aeabi_f2d
00008c  4605              MOV      r5,r0
00008e  460e              MOV      r6,r1
000090  49da              LDR      r1,|L6.1020|
000092  6888              LDR      r0,[r1,#8]  ; Alarm_threshold
000094  f7fffffe          BL       __aeabi_f2d
000098  4607              MOV      r7,r0
00009a  463a              MOV      r2,r7
00009c  460b              MOV      r3,r1
00009e  a0da              ADR      r0,|L6.1032|
0000a0  e9cd5600          STRD     r5,r6,[sp,#0]
0000a4  f7fffffe          BL       App_printf
;;;386            App_printf("%f  %f",	Alarm_threshold.Low_45I_limit[0],		Alarm_threshold.Upp_45I_limit[0]);
0000a8  49d4              LDR      r1,|L6.1020|
0000aa  6948              LDR      r0,[r1,#0x14]  ; Alarm_threshold
0000ac  f7fffffe          BL       __aeabi_f2d
0000b0  4605              MOV      r5,r0
0000b2  460e              MOV      r6,r1
0000b4  49d1              LDR      r1,|L6.1020|
0000b6  6908              LDR      r0,[r1,#0x10]  ; Alarm_threshold
0000b8  f7fffffe          BL       __aeabi_f2d
0000bc  4607              MOV      r7,r0
0000be  463a              MOV      r2,r7
0000c0  460b              MOV      r3,r1
0000c2  a0d1              ADR      r0,|L6.1032|
0000c4  e9cd5600          STRD     r5,r6,[sp,#0]
0000c8  f7fffffe          BL       App_printf
;;;387            App_printf("%f  %f",	Alarm_threshold.Low_45V_limit[0],		Alarm_threshold.Upp_45V_limit[0]);
0000cc  49cb              LDR      r1,|L6.1020|
0000ce  69c8              LDR      r0,[r1,#0x1c]  ; Alarm_threshold
0000d0  f7fffffe          BL       __aeabi_f2d
0000d4  4605              MOV      r5,r0
0000d6  460e              MOV      r6,r1
0000d8  49c8              LDR      r1,|L6.1020|
0000da  6988              LDR      r0,[r1,#0x18]  ; Alarm_threshold
0000dc  f7fffffe          BL       __aeabi_f2d
0000e0  4607              MOV      r7,r0
0000e2  463a              MOV      r2,r7
0000e4  460b              MOV      r3,r1
0000e6  a0c8              ADR      r0,|L6.1032|
0000e8  e9cd5600          STRD     r5,r6,[sp,#0]
0000ec  f7fffffe          BL       App_printf
;;;388            App_printf("\r\n");
0000f0  a0c4              ADR      r0,|L6.1028|
0000f2  f7fffffe          BL       App_printf
;;;389            return 1;
0000f6  2001              MOVS     r0,#1
                  |L6.248|
;;;390        }
;;;391        else if(CAN_data_cmp->Func_code[0] == 0x02 && CAN_data_cmp->Func_code[1] == 0x01)	//下发状态查询
;;;392        {
;;;393            if(CAN_data_cmp->data_buf[0] == System.CAN_ID[0])   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;394            {
;;;395    //            memcpy(Working_paramet.Retain,CAN_data_cmp->data_buf+1,2);
;;;396                return 1;
;;;397            }
;;;398            else
;;;399            {
;;;400                return 3;
;;;401            }
;;;402        }
;;;403        else if(CAN_data_cmp->Func_code[0] == 0x03 && CAN_data_cmp->Func_code[1] == 0x01)	//开启发射机
;;;404        {
;;;405            if(CAN_data_cmp->data_buf[0] == System.CAN_ID[0])   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;406            {
;;;407                memcpy(&PC_Cmd.mode,		CAN_data_cmp->data_buf+1,	1);		//工作模式
;;;408    			memcpy(PC_Cmd.channel,		CAN_data_cmp->data_buf+2,	3);		//信道	新协议只有一个信道，即存三个，用一个(0x01)
;;;409                memcpy(PC_Cmd.freq,			CAN_data_cmp->data_buf+5,	12);	//频率
;;;410    //            memcpy(PC_Cmd.power,		CAN_data_cmp->data_buf+17,	3);		//功率等级
;;;411    			memcpy(&PC_Cmd.power,		CAN_data_cmp->data_buf+17,	1);		//功率等级
;;;412    			memcpy(System.time,			CAN_data_cmp->data_buf+20,	6);		//北斗时间
;;;413    			
;;;414    			/*-----------------------------获取PC设置的数据，存储到MT2000_Tx-----------------------------------*/
;;;415    			MT2000_Tx.method = 'F';		//FM
;;;416    			
;;;417    			switch( PC_Cmd.mode )	//工作种类，固频/双频/三频
;;;418    			{
;;;419    				case 0x01: MT2000_Tx.mode = '1'; break;
;;;420    				case 0x02: MT2000_Tx.mode = '2'; break;
;;;421    				case 0x03: MT2000_Tx.mode = '3'; break;
;;;422    				default: break;
;;;423    			}
;;;424    			
;;;425    			MT2000_Tx.channel[0] = '0';	//信道01
;;;426    			MT2000_Tx.channel[1] = '1';
;;;427    			MT2000_Tx.channel[2] = '\0';
;;;428    			
;;;429    			MT2000_Tx.fre1[0] = ( ( (PC_Cmd.freq[0]) >> 4 ) & 0x0F) + '0';
;;;430    			MT2000_Tx.fre1[1] = ( ( (PC_Cmd.freq[0]) >> 0 ) & 0x0F) + '0';
;;;431    			MT2000_Tx.fre1[2] = ( ( (PC_Cmd.freq[1]) >> 4 ) & 0x0F) + '0';
;;;432    			MT2000_Tx.fre1[3] = ( ( (PC_Cmd.freq[1]) >> 0 ) & 0x0F) + '0';
;;;433    			MT2000_Tx.fre1[4] = ( ( (PC_Cmd.freq[2]) >> 4 ) & 0x0F) + '0';
;;;434    			MT2000_Tx.fre1[5] = ( ( (PC_Cmd.freq[2]) >> 0 ) & 0x0F) + '0';
;;;435    			MT2000_Tx.fre1[6] = ( ( (PC_Cmd.freq[3]) >> 4 ) & 0x0F) + '0';
;;;436    			MT2000_Tx.fre1[7] = ( ( (PC_Cmd.freq[3]) >> 0 ) & 0x0F) + '0';
;;;437    			MT2000_Tx.fre1[8] = '\0';
;;;438    			
;;;439    			MT2000_Tx.fre2[0] = ( ( (PC_Cmd.freq[4]) >> 4 ) & 0x0F) + '0';
;;;440    			MT2000_Tx.fre2[1] = ( ( (PC_Cmd.freq[4]) >> 0 ) & 0x0F) + '0';
;;;441    			MT2000_Tx.fre2[2] = ( ( (PC_Cmd.freq[5]) >> 4 ) & 0x0F) + '0';
;;;442    			MT2000_Tx.fre2[3] = ( ( (PC_Cmd.freq[5]) >> 0 ) & 0x0F) + '0';
;;;443    			MT2000_Tx.fre2[4] = ( ( (PC_Cmd.freq[6]) >> 4 ) & 0x0F) + '0';
;;;444    			MT2000_Tx.fre2[5] = ( ( (PC_Cmd.freq[6]) >> 0 ) & 0x0F) + '0';
;;;445    			MT2000_Tx.fre2[6] = ( ( (PC_Cmd.freq[7]) >> 4 ) & 0x0F) + '0';
;;;446    			MT2000_Tx.fre2[7] = ( ( (PC_Cmd.freq[7]) >> 0 ) & 0x0F) + '0';
;;;447    			MT2000_Tx.fre2[8] = '\0';
;;;448    			
;;;449    			MT2000_Tx.fre3[0] = ( ( (PC_Cmd.freq[8]) >> 4 ) & 0x0F) + '0';
;;;450    			MT2000_Tx.fre3[1] = ( ( (PC_Cmd.freq[8]) >> 0 ) & 0x0F) + '0';
;;;451    			MT2000_Tx.fre3[2] = ( ( (PC_Cmd.freq[9]) >> 4 ) & 0x0F) + '0';
;;;452    			MT2000_Tx.fre3[3] = ( ( (PC_Cmd.freq[9]) >> 0 ) & 0x0F) + '0';
;;;453    			MT2000_Tx.fre3[4] = ( ( (PC_Cmd.freq[10]) >> 4 ) & 0x0F) + '0';
;;;454    			MT2000_Tx.fre3[5] = ( ( (PC_Cmd.freq[10]) >> 0 ) & 0x0F) + '0';
;;;455    			MT2000_Tx.fre3[6] = ( ( (PC_Cmd.freq[11]) >> 4 ) & 0x0F) + '0';
;;;456    			MT2000_Tx.fre3[7] = ( ( (PC_Cmd.freq[11]) >> 0 ) & 0x0F) + '0';
;;;457    			MT2000_Tx.fre3[8] = '\0';
;;;458    			
;;;459    			switch( PC_Cmd.power )	//功率等级
;;;460    			{
;;;461    				case 0x00: MT2000_Tx.power = '3'; break;	//全功率
;;;462    				case 0x01: MT2000_Tx.power = '2'; break;	//1/2功率
;;;463    				case 0x02: MT2000_Tx.power = '1'; break;	//1/4功率
;;;464    				default: break;
;;;465    			}
;;;466                return 1;
;;;467            }
;;;468            else
;;;469            {
;;;470                return 3;
;;;471            }
;;;472        }
;;;473        else if(CAN_data_cmp->Func_code[0] == 0x04 && CAN_data_cmp->Func_code[1] == 0x01)	//关闭发射机
;;;474        {
;;;475            if(CAN_data_cmp->data_buf[0] == System.CAN_ID[0])   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;476            {
;;;477                memcpy(System.time,	CAN_data_cmp->data_buf+1,	6);	//北斗时间
;;;478                return 1;
;;;479            }
;;;480            else
;;;481            {
;;;482                return 3;
;;;483            }
;;;484        }
;;;485        else if(CAN_data_cmp->Func_code[0] == 0x05 && CAN_data_cmp->Func_code[1] == 0x01)	//取消报警
;;;486        {
;;;487            if(CAN_data_cmp->data_buf[0] == System.CAN_ID[0])   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;488            {
;;;489                memcpy(Alarm.Disalarm_type, CAN_data_cmp->data_buf+1,2);//解除报警类型
;;;490                memcpy(System.time,	CAN_data_cmp->data_buf+3,	6);//北斗时间
;;;491                return 1;
;;;492            }
;;;493            else
;;;494            {
;;;495                return 3;
;;;496            }
;;;497        }
;;;498        else if(CAN_data_cmp->Func_code[0] == 0x06 && CAN_data_cmp->Func_code[1] == 0x01)	//查询历史报警状态
;;;499        {
;;;500            if(CAN_data_cmp->data_buf[0] == System.CAN_ID[0])   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;501            {
;;;502                memcpy(System.time,	CAN_data_cmp->data_buf+1,	6);//北斗时间
;;;503                return 1;
;;;504            }
;;;505            else
;;;506            {
;;;507                return 3;
;;;508            }
;;;509        }
;;;510        else if(CAN_data_cmp->Func_code[0] == 0x07 && CAN_data_cmp->Func_code[1] == 0x01)	//发射机上电
;;;511        {
;;;512            if(CAN_data_cmp->data_buf[0] == System.CAN_ID[0])   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;513            {
;;;514    //            memcpy(Power_on.Retain,CAN_data_cmp->data_buf+1,	1);			//保留
;;;515                memcpy(System.time,	CAN_data_cmp->data_buf+2,	6);		//北斗时间
;;;516                return 1;
;;;517            }
;;;518            else
;;;519            {
;;;520                return 3;
;;;521            }
;;;522        }
;;;523        else if(CAN_data_cmp->Func_code[0] == 0x08 && CAN_data_cmp->Func_code[1] == 0x01)	//发射机断电
;;;524        {
;;;525            if(CAN_data_cmp->data_buf[0] == System.CAN_ID[0])   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;526            {
;;;527    //            memcpy(Power_off.Retain,CAN_data_cmp->data_buf+1,1);	//保留
;;;528                return 1;
;;;529            }
;;;530            else
;;;531            {
;;;532                return 3;
;;;533            }
;;;534        }
;;;535        else if(CAN_data_cmp->Func_code[0] == 0x09 && CAN_data_cmp->Func_code[1] == 0x01)	//扫描最佳工作频段
;;;536        {
;;;537            if(CAN_data_cmp->data_buf[0] == System.CAN_ID[0])   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;538            {
;;;539                memcpy(Scan_Frq.state,CAN_data_cmp->data_buf+1,1);		//扫频/查频
;;;540                memcpy(Scan_Frq.Fre_Band,CAN_data_cmp->data_buf+2,8);	//需要查询的频段
;;;541                return 1;
;;;542            }
;;;543            else
;;;544            {
;;;545                return 3;
;;;546            }
;;;547        }
;;;548        else if(CAN_data_cmp->Func_code[0] == 0x0A && CAN_data_cmp->Func_code[1] == 0x01)	//停止扫频
;;;549        {
;;;550            if(CAN_data_cmp->data_buf[0] == System.CAN_ID[0])   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;551            {
;;;552                memcpy(Sacn_stop.state,CAN_data_cmp->data_buf+1,1);
;;;553                return 1;
;;;554            }
;;;555            else
;;;556            {
;;;557                return 3;
;;;558            }
;;;559        }
;;;560        else if(CAN_data_cmp->Func_code[0] == 0x0B && CAN_data_cmp->Func_code[1] == 0x01)	//增加功率
;;;561        {
;;;562            if(CAN_data_cmp->data_buf[0] == System.CAN_ID[0])   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;563            {
;;;564                memcpy(Add_Power.Power_UP,CAN_data_cmp->data_buf+1,2);
;;;565                return 1;
;;;566            }
;;;567            else
;;;568            {
;;;569                return 3;
;;;570            }
;;;571        }
;;;572        else if(CAN_data_cmp->Func_code[0] == 0x0C && CAN_data_cmp->Func_code[1] == 0x01)	//减小功率
;;;573        {
;;;574            if(CAN_data_cmp->data_buf[0] == System.CAN_ID[0])   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;575            {
;;;576                memcpy(Sub_Power.Power_DOWN,CAN_data_cmp->data_buf+1,2);
;;;577                return 1;
;;;578            }
;;;579            else
;;;580            {
;;;581                return 3;
;;;582            }
;;;583        }
;;;584        else if(CAN_data_cmp->Func_code[0] == 0x0D && CAN_data_cmp->Func_code[1] == 0x01)	//运行图
;;;585        {
;;;586            if(CAN_data_cmp->data_buf[0] == System.CAN_ID[0])   //第一个字节表示发射机ID，必须判断与自身是否相同
;;;587            {
;;;588                memcpy(Run_Diagram.count,	CAN_data_cmp->data_buf+1,1);
;;;589                memcpy(Run_Diagram.Continue,CAN_data_cmp->data_buf+2,2);
;;;590    
;;;591                memcpy(Run_Diagram.Start_Time1,	CAN_data_cmp->data_buf+4,2);
;;;592                memcpy(Run_Diagram.End_Timep1,	CAN_data_cmp->data_buf+6,2);
;;;593                memcpy(Run_Diagram.Power1,		CAN_data_cmp->data_buf+8,1);
;;;594                memcpy(Run_Diagram.Frq1,		CAN_data_cmp->data_buf+9,4);
;;;595    //            memcpy(Run_Diagram.channel1,	CAN_data_cmp->data_buf+13,1);
;;;596    
;;;597                memcpy(Run_Diagram.Start_Time2,	CAN_data_cmp->data_buf+14,2);
;;;598                memcpy(Run_Diagram.End_Timep2,	CAN_data_cmp->data_buf+16,2);
;;;599                memcpy(Run_Diagram.Power2,		CAN_data_cmp->data_buf+18,1);
;;;600                memcpy(Run_Diagram.Frq2,		CAN_data_cmp->data_buf+19,4);
;;;601    //            memcpy(Run_Diagram.channel2,	CAN_data_cmp->data_buf+23,1);
;;;602    
;;;603                memcpy(Run_Diagram.Start_Time3,	CAN_data_cmp->data_buf+24,2);
;;;604                memcpy(Run_Diagram.End_Timep3,	CAN_data_cmp->data_buf+26,2);
;;;605                memcpy(Run_Diagram.Power3,		CAN_data_cmp->data_buf+28,1);
;;;606                memcpy(Run_Diagram.Frq3,		CAN_data_cmp->data_buf+29,4);
;;;607    //            memcpy(Run_Diagram.channel3,	CAN_data_cmp->data_buf+33,1);
;;;608    
;;;609                memcpy(Run_Diagram.Start_Time4,	CAN_data_cmp->data_buf+34,2);
;;;610                memcpy(Run_Diagram.End_Timep4,	CAN_data_cmp->data_buf+36,2);
;;;611                memcpy(Run_Diagram.Power4,		CAN_data_cmp->data_buf+38,1);
;;;612                memcpy(Run_Diagram.Frq4,		CAN_data_cmp->data_buf+39,4);
;;;613    //            memcpy(Run_Diagram.channel4,	CAN_data_cmp->data_buf+43,1);
;;;614    
;;;615                memcpy(Run_Diagram.Start_Time5,	CAN_data_cmp->data_buf+44,2);
;;;616                memcpy(Run_Diagram.End_Timep5,	CAN_data_cmp->data_buf+46,2);
;;;617                memcpy(Run_Diagram.Power5,		CAN_data_cmp->data_buf+48,1);
;;;618                memcpy(Run_Diagram.Frq5,		CAN_data_cmp->data_buf+49,4);
;;;619    //            memcpy(Run_Diagram.channel5,	CAN_data_cmp->data_buf+53,1);
;;;620    
;;;621                memcpy(Run_Diagram.Start_Time6,	CAN_data_cmp->data_buf+54,2);
;;;622                memcpy(Run_Diagram.End_Timep6,	CAN_data_cmp->data_buf+56,2);
;;;623                memcpy(Run_Diagram.Power6,		CAN_data_cmp->data_buf+58,1);
;;;624                memcpy(Run_Diagram.Frq6,		CAN_data_cmp->data_buf+59,4);
;;;625    //            memcpy(Run_Diagram.channel6,	CAN_data_cmp->data_buf+63,1);
;;;626    
;;;627                memcpy(Run_Diagram.Start_Time7,	CAN_data_cmp->data_buf+64,2);
;;;628                memcpy(Run_Diagram.End_Timep7,	CAN_data_cmp->data_buf+66,2);
;;;629                memcpy(Run_Diagram.Power7,		CAN_data_cmp->data_buf+68,1);
;;;630                memcpy(Run_Diagram.Frq7,		CAN_data_cmp->data_buf+69,4);
;;;631    //            memcpy(Run_Diagram.channel7,	CAN_data_cmp->data_buf+73,1);
;;;632    
;;;633                memcpy(Run_Diagram.Start_Time8,	CAN_data_cmp->data_buf+74,2);
;;;634                memcpy(Run_Diagram.End_Timep8,	CAN_data_cmp->data_buf+76,2);
;;;635                memcpy(Run_Diagram.Power8,		CAN_data_cmp->data_buf+78,1);
;;;636                memcpy(Run_Diagram.Frq8,		CAN_data_cmp->data_buf+79,4);
;;;637    //            memcpy(Run_Diagram.channel8,	CAN_data_cmp->data_buf+83,1);
;;;638    
;;;639                memcpy(Run_Diagram.Start_Time9,	CAN_data_cmp->data_buf+84,2);
;;;640                memcpy(Run_Diagram.End_Timep9,	CAN_data_cmp->data_buf+86,2);
;;;641                memcpy(Run_Diagram.Power9,		CAN_data_cmp->data_buf+88,1);
;;;642                memcpy(Run_Diagram.Frq9,		CAN_data_cmp->data_buf+89,4);
;;;643    //            memcpy(Run_Diagram.channel9,	CAN_data_cmp->data_buf+93,1);
;;;644    
;;;645                memcpy(Run_Diagram.Start_Time10,	CAN_data_cmp->data_buf+94,2);
;;;646                memcpy(Run_Diagram.End_Timep10,		CAN_data_cmp->data_buf+96,2);
;;;647                memcpy(Run_Diagram.Power10,			CAN_data_cmp->data_buf+98,1);
;;;648                memcpy(Run_Diagram.Frq10,			CAN_data_cmp->data_buf+99,4);
;;;649    //            memcpy(Run_Diagram.channel10,		CAN_data_cmp->data_buf+103,1);
;;;650    
;;;651                return 1;
;;;652            }
;;;653            else
;;;654            {
;;;655                return 3;
;;;656            }
;;;657        }
;;;658    
;;;659        return 4;//没有功能码
;;;660    }
0000f8  e8bd81fc          POP      {r2-r8,pc}
0000fc  e7ff              B        |L6.254|
                  |L6.254|
0000fe  78a0              LDRB     r0,[r4,#2]            ;391
000100  2802              CMP      r0,#2                 ;391
000102  d10b              BNE      |L6.284|
000104  78e0              LDRB     r0,[r4,#3]            ;391
000106  2801              CMP      r0,#1                 ;391
000108  d108              BNE      |L6.284|
00010a  7920              LDRB     r0,[r4,#4]            ;393
00010c  49bc              LDR      r1,|L6.1024|
00010e  7809              LDRB     r1,[r1,#0]            ;393  ; System
000110  4288              CMP      r0,r1                 ;393
000112  d101              BNE      |L6.280|
000114  2001              MOVS     r0,#1                 ;396
000116  e7ef              B        |L6.248|
                  |L6.280|
000118  2003              MOVS     r0,#3                 ;400
00011a  e7ed              B        |L6.248|
                  |L6.284|
00011c  78a0              LDRB     r0,[r4,#2]            ;403
00011e  2803              CMP      r0,#3                 ;403
                  |L6.288|
000120  d17e              BNE      |L6.544|
000122  78e0              LDRB     r0,[r4,#3]            ;403
000124  2801              CMP      r0,#1                 ;403
000126  d1fb              BNE      |L6.288|
000128  7920              LDRB     r0,[r4,#4]            ;405
00012a  49b5              LDR      r1,|L6.1024|
00012c  7809              LDRB     r1,[r1,#0]            ;405  ; System
00012e  4288              CMP      r0,r1                 ;405
000130  d177              BNE      |L6.546|
000132  49b7              LDR      r1,|L6.1040|
000134  7960              LDRB     r0,[r4,#5]            ;407
000136  7008              STRB     r0,[r1,#0]            ;407
000138  88e2              LDRH     r2,[r4,#6]            ;408
00013a  f8a12003          STRH     r2,[r1,#3]            ;408
00013e  7a20              LDRB     r0,[r4,#8]            ;408
000140  7148              STRB     r0,[r1,#5]            ;408
000142  1d89              ADDS     r1,r1,#6              ;409
000144  f8d42009          LDR      r2,[r4,#9]            ;409
000148  600a              STR      r2,[r1,#0]            ;409  ; PC_Cmd
00014a  f8d4200d          LDR      r2,[r4,#0xd]          ;409
00014e  604a              STR      r2,[r1,#4]            ;409  ; PC_Cmd
000150  f8d40011          LDR      r0,[r4,#0x11]         ;409
000154  6088              STR      r0,[r1,#8]            ;409  ; PC_Cmd
000156  1f89              SUBS     r1,r1,#6              ;411
000158  7d60              LDRB     r0,[r4,#0x15]         ;411
00015a  7088              STRB     r0,[r1,#2]            ;411
00015c  49a8              LDR      r1,|L6.1024|
00015e  69a2              LDR      r2,[r4,#0x18]         ;412
000160  604a              STR      r2,[r1,#4]            ;412  ; System
000162  8ba0              LDRH     r0,[r4,#0x1c]         ;412
000164  8108              STRH     r0,[r1,#8]            ;412
000166  2046              MOVS     r0,#0x46              ;415
000168  49aa              LDR      r1,|L6.1044|
00016a  70c8              STRB     r0,[r1,#3]            ;415
00016c  48a8              LDR      r0,|L6.1040|
00016e  7800              LDRB     r0,[r0,#0]            ;417  ; PC_Cmd
000170  2801              CMP      r0,#1                 ;417
000172  d004              BEQ      |L6.382|
000174  2802              CMP      r0,#2                 ;417
000176  d006              BEQ      |L6.390|
000178  2803              CMP      r0,#3                 ;417
00017a  d10c              BNE      |L6.406|
00017c  e007              B        |L6.398|
                  |L6.382|
00017e  2031              MOVS     r0,#0x31              ;419
000180  49a4              LDR      r1,|L6.1044|
000182  7088              STRB     r0,[r1,#2]            ;419
000184  e008              B        |L6.408|
                  |L6.390|
000186  2032              MOVS     r0,#0x32              ;420
000188  49a2              LDR      r1,|L6.1044|
00018a  7088              STRB     r0,[r1,#2]            ;420
00018c  e004              B        |L6.408|
                  |L6.398|
00018e  2033              MOVS     r0,#0x33              ;421
000190  49a0              LDR      r1,|L6.1044|
000192  7088              STRB     r0,[r1,#2]            ;421
000194  e000              B        |L6.408|
                  |L6.406|
000196  bf00              NOP                            ;422
                  |L6.408|
000198  bf00              NOP                            ;419
00019a  2030              MOVS     r0,#0x30              ;425
00019c  499d              LDR      r1,|L6.1044|
00019e  7148              STRB     r0,[r1,#5]            ;425
0001a0  2131              MOVS     r1,#0x31              ;426
0001a2  489c              LDR      r0,|L6.1044|
0001a4  7181              STRB     r1,[r0,#6]            ;426
0001a6  2100              MOVS     r1,#0                 ;427
0001a8  71c1              STRB     r1,[r0,#7]            ;427
0001aa  4899              LDR      r0,|L6.1040|
0001ac  7980              LDRB     r0,[r0,#6]            ;429  ; PC_Cmd
0001ae  2130              MOVS     r1,#0x30              ;429
0001b0  eb011010          ADD      r0,r1,r0,LSR #4       ;429
0001b4  4997              LDR      r1,|L6.1044|
0001b6  7208              STRB     r0,[r1,#8]            ;429
0001b8  4895              LDR      r0,|L6.1040|
0001ba  7980              LDRB     r0,[r0,#6]            ;430  ; PC_Cmd
0001bc  f000000f          AND      r0,r0,#0xf            ;430
0001c0  3030              ADDS     r0,r0,#0x30           ;430
0001c2  7248              STRB     r0,[r1,#9]            ;430
0001c4  4892              LDR      r0,|L6.1040|
0001c6  79c0              LDRB     r0,[r0,#7]            ;431
0001c8  2130              MOVS     r1,#0x30              ;431
0001ca  eb011110          ADD      r1,r1,r0,LSR #4       ;431
0001ce  4891              LDR      r0,|L6.1044|
0001d0  7281              STRB     r1,[r0,#0xa]          ;431
0001d2  488f              LDR      r0,|L6.1040|
0001d4  79c0              LDRB     r0,[r0,#7]            ;432
0001d6  f000000f          AND      r0,r0,#0xf            ;432
0001da  3030              ADDS     r0,r0,#0x30           ;432
0001dc  498d              LDR      r1,|L6.1044|
0001de  72c8              STRB     r0,[r1,#0xb]          ;432
0001e0  488b              LDR      r0,|L6.1040|
0001e2  7a00              LDRB     r0,[r0,#8]            ;433
0001e4  2130              MOVS     r1,#0x30              ;433
0001e6  eb011110          ADD      r1,r1,r0,LSR #4       ;433
0001ea  488a              LDR      r0,|L6.1044|
0001ec  7301              STRB     r1,[r0,#0xc]          ;433
0001ee  4888              LDR      r0,|L6.1040|
0001f0  7a00              LDRB     r0,[r0,#8]            ;434
0001f2  f000000f          AND      r0,r0,#0xf            ;434
0001f6  3030              ADDS     r0,r0,#0x30           ;434
0001f8  4986              LDR      r1,|L6.1044|
0001fa  7348              STRB     r0,[r1,#0xd]          ;434
0001fc  4884              LDR      r0,|L6.1040|
0001fe  7a40              LDRB     r0,[r0,#9]            ;435
000200  2130              MOVS     r1,#0x30              ;435
000202  eb011110          ADD      r1,r1,r0,LSR #4       ;435
000206  4883              LDR      r0,|L6.1044|
000208  7381              STRB     r1,[r0,#0xe]          ;435
00020a  4881              LDR      r0,|L6.1040|
00020c  7a40              LDRB     r0,[r0,#9]            ;436
00020e  f000000f          AND      r0,r0,#0xf            ;436
000212  3030              ADDS     r0,r0,#0x30           ;436
000214  497f              LDR      r1,|L6.1044|
000216  73c8              STRB     r0,[r1,#0xf]          ;436
000218  2100              MOVS     r1,#0                 ;437
00021a  487e              LDR      r0,|L6.1044|
00021c  7401              STRB     r1,[r0,#0x10]         ;437
00021e  e001              B        |L6.548|
                  |L6.544|
000220  e093              B        |L6.842|
                  |L6.546|
000222  e090              B        |L6.838|
                  |L6.548|
000224  487a              LDR      r0,|L6.1040|
000226  7a80              LDRB     r0,[r0,#0xa]          ;439
000228  2130              MOVS     r1,#0x30              ;439
00022a  eb011010          ADD      r0,r1,r0,LSR #4       ;439
00022e  4979              LDR      r1,|L6.1044|
000230  7488              STRB     r0,[r1,#0x12]         ;439
000232  4877              LDR      r0,|L6.1040|
000234  7a80              LDRB     r0,[r0,#0xa]          ;440
000236  f000000f          AND      r0,r0,#0xf            ;440
00023a  3030              ADDS     r0,r0,#0x30           ;440
00023c  74c8              STRB     r0,[r1,#0x13]         ;440
00023e  4874              LDR      r0,|L6.1040|
000240  7ac0              LDRB     r0,[r0,#0xb]          ;441
000242  2130              MOVS     r1,#0x30              ;441
000244  eb011110          ADD      r1,r1,r0,LSR #4       ;441
000248  4872              LDR      r0,|L6.1044|
00024a  7501              STRB     r1,[r0,#0x14]         ;441
00024c  4870              LDR      r0,|L6.1040|
00024e  7ac0              LDRB     r0,[r0,#0xb]          ;442
000250  f000000f          AND      r0,r0,#0xf            ;442
000254  3030              ADDS     r0,r0,#0x30           ;442
000256  496f              LDR      r1,|L6.1044|
000258  7548              STRB     r0,[r1,#0x15]         ;442
00025a  486d              LDR      r0,|L6.1040|
00025c  7b00              LDRB     r0,[r0,#0xc]          ;443
00025e  2130              MOVS     r1,#0x30              ;443
000260  eb011110          ADD      r1,r1,r0,LSR #4       ;443
000264  486b              LDR      r0,|L6.1044|
000266  7581              STRB     r1,[r0,#0x16]         ;443
000268  4869              LDR      r0,|L6.1040|
00026a  7b00              LDRB     r0,[r0,#0xc]          ;444
00026c  f000000f          AND      r0,r0,#0xf            ;444
000270  3030              ADDS     r0,r0,#0x30           ;444
000272  4968              LDR      r1,|L6.1044|
000274  75c8              STRB     r0,[r1,#0x17]         ;444
000276  4866              LDR      r0,|L6.1040|
000278  7b40              LDRB     r0,[r0,#0xd]          ;445
00027a  2130              MOVS     r1,#0x30              ;445
00027c  eb011110          ADD      r1,r1,r0,LSR #4       ;445
000280  4864              LDR      r0,|L6.1044|
000282  7601              STRB     r1,[r0,#0x18]         ;445
000284  4862              LDR      r0,|L6.1040|
000286  7b40              LDRB     r0,[r0,#0xd]          ;446
000288  f000000f          AND      r0,r0,#0xf            ;446
00028c  3030              ADDS     r0,r0,#0x30           ;446
00028e  4961              LDR      r1,|L6.1044|
000290  7648              STRB     r0,[r1,#0x19]         ;446
000292  2100              MOVS     r1,#0                 ;447
000294  485f              LDR      r0,|L6.1044|
000296  7681              STRB     r1,[r0,#0x1a]         ;447
000298  485d              LDR      r0,|L6.1040|
00029a  7b80              LDRB     r0,[r0,#0xe]          ;449
00029c  2130              MOVS     r1,#0x30              ;449
00029e  eb011010          ADD      r0,r1,r0,LSR #4       ;449
0002a2  495c              LDR      r1,|L6.1044|
0002a4  7708              STRB     r0,[r1,#0x1c]         ;449
0002a6  485a              LDR      r0,|L6.1040|
0002a8  7b80              LDRB     r0,[r0,#0xe]          ;450
0002aa  f000000f          AND      r0,r0,#0xf            ;450
0002ae  3030              ADDS     r0,r0,#0x30           ;450
0002b0  7748              STRB     r0,[r1,#0x1d]         ;450
0002b2  4857              LDR      r0,|L6.1040|
0002b4  7bc0              LDRB     r0,[r0,#0xf]          ;451
0002b6  2130              MOVS     r1,#0x30              ;451
0002b8  eb011110          ADD      r1,r1,r0,LSR #4       ;451
0002bc  4855              LDR      r0,|L6.1044|
0002be  7781              STRB     r1,[r0,#0x1e]         ;451
0002c0  4853              LDR      r0,|L6.1040|
0002c2  7bc0              LDRB     r0,[r0,#0xf]          ;452
0002c4  f000000f          AND      r0,r0,#0xf            ;452
0002c8  3030              ADDS     r0,r0,#0x30           ;452
0002ca  4952              LDR      r1,|L6.1044|
0002cc  77c8              STRB     r0,[r1,#0x1f]         ;452
0002ce  4850              LDR      r0,|L6.1040|
0002d0  7c00              LDRB     r0,[r0,#0x10]         ;453
0002d2  2130              MOVS     r1,#0x30              ;453
0002d4  eb011110          ADD      r1,r1,r0,LSR #4       ;453
0002d8  484e              LDR      r0,|L6.1044|
0002da  f8801020          STRB     r1,[r0,#0x20]         ;453
0002de  484c              LDR      r0,|L6.1040|
0002e0  7c00              LDRB     r0,[r0,#0x10]         ;454
0002e2  f000000f          AND      r0,r0,#0xf            ;454
0002e6  3030              ADDS     r0,r0,#0x30           ;454
0002e8  494a              LDR      r1,|L6.1044|
0002ea  f8810021          STRB     r0,[r1,#0x21]         ;454
0002ee  4848              LDR      r0,|L6.1040|
0002f0  7c40              LDRB     r0,[r0,#0x11]         ;455
0002f2  2130              MOVS     r1,#0x30              ;455
0002f4  eb011110          ADD      r1,r1,r0,LSR #4       ;455
0002f8  4846              LDR      r0,|L6.1044|
0002fa  f8801022          STRB     r1,[r0,#0x22]         ;455
0002fe  4844              LDR      r0,|L6.1040|
000300  7c40              LDRB     r0,[r0,#0x11]         ;456
000302  f000000f          AND      r0,r0,#0xf            ;456
000306  3030              ADDS     r0,r0,#0x30           ;456
000308  4942              LDR      r1,|L6.1044|
00030a  f8810023          STRB     r0,[r1,#0x23]         ;456
00030e  2100              MOVS     r1,#0                 ;457
000310  4840              LDR      r0,|L6.1044|
000312  f8801024          STRB     r1,[r0,#0x24]         ;457
000316  483e              LDR      r0,|L6.1040|
000318  7880              LDRB     r0,[r0,#2]            ;459  ; PC_Cmd
00031a  b120              CBZ      r0,|L6.806|
00031c  2801              CMP      r0,#1                 ;459
00031e  d006              BEQ      |L6.814|
000320  2802              CMP      r0,#2                 ;459
000322  d10c              BNE      |L6.830|
000324  e007              B        |L6.822|
                  |L6.806|
000326  2033              MOVS     r0,#0x33              ;461
000328  493a              LDR      r1,|L6.1044|
00032a  7108              STRB     r0,[r1,#4]            ;461
00032c  e008              B        |L6.832|
                  |L6.814|
00032e  2032              MOVS     r0,#0x32              ;462
000330  4938              LDR      r1,|L6.1044|
000332  7108              STRB     r0,[r1,#4]            ;462
000334  e004              B        |L6.832|
                  |L6.822|
000336  2031              MOVS     r0,#0x31              ;463
000338  4936              LDR      r1,|L6.1044|
00033a  7108              STRB     r0,[r1,#4]            ;463
00033c  e000              B        |L6.832|
                  |L6.830|
00033e  bf00              NOP                            ;464
                  |L6.832|
000340  bf00              NOP                            ;461
000342  2001              MOVS     r0,#1                 ;466
000344  e6d8              B        |L6.248|
                  |L6.838|
000346  2003              MOVS     r0,#3                 ;470
000348  e6d6              B        |L6.248|
                  |L6.842|
00034a  78a0              LDRB     r0,[r4,#2]            ;473
00034c  2804              CMP      r0,#4                 ;473
00034e  d112              BNE      |L6.886|
000350  78e0              LDRB     r0,[r4,#3]            ;473
000352  2801              CMP      r0,#1                 ;473
000354  d10f              BNE      |L6.886|
000356  7920              LDRB     r0,[r4,#4]            ;475
000358  4929              LDR      r1,|L6.1024|
00035a  7809              LDRB     r1,[r1,#0]            ;475  ; System
00035c  4288              CMP      r0,r1                 ;475
00035e  d108              BNE      |L6.882|
000360  4927              LDR      r1,|L6.1024|
000362  f8d42005          LDR      r2,[r4,#5]            ;477
000366  604a              STR      r2,[r1,#4]            ;477  ; System
000368  f8b40009          LDRH     r0,[r4,#9]            ;477
00036c  8108              STRH     r0,[r1,#8]            ;477
00036e  2001              MOVS     r0,#1                 ;478
000370  e6c2              B        |L6.248|
                  |L6.882|
000372  2003              MOVS     r0,#3                 ;482
000374  e6c0              B        |L6.248|
                  |L6.886|
000376  78a0              LDRB     r0,[r4,#2]            ;485
000378  2805              CMP      r0,#5                 ;485
00037a  d116              BNE      |L6.938|
00037c  78e0              LDRB     r0,[r4,#3]            ;485
00037e  2801              CMP      r0,#1                 ;485
000380  d113              BNE      |L6.938|
000382  7920              LDRB     r0,[r4,#4]            ;487
000384  491e              LDR      r1,|L6.1024|
000386  7809              LDRB     r1,[r1,#0]            ;487  ; System
000388  4288              CMP      r0,r1                 ;487
00038a  d10c              BNE      |L6.934|
00038c  4922              LDR      r1,|L6.1048|
00038e  f8b40005          LDRH     r0,[r4,#5]            ;489
000392  8008              STRH     r0,[r1,#0]            ;489
000394  491a              LDR      r1,|L6.1024|
000396  f8d42007          LDR      r2,[r4,#7]            ;490
00039a  604a              STR      r2,[r1,#4]            ;490  ; System
00039c  f8b4000b          LDRH     r0,[r4,#0xb]          ;490
0003a0  8108              STRH     r0,[r1,#8]            ;490
0003a2  2001              MOVS     r0,#1                 ;491
0003a4  e6a8              B        |L6.248|
                  |L6.934|
0003a6  2003              MOVS     r0,#3                 ;495
0003a8  e6a6              B        |L6.248|
                  |L6.938|
0003aa  78a0              LDRB     r0,[r4,#2]            ;498
0003ac  2806              CMP      r0,#6                 ;498
0003ae  d112              BNE      |L6.982|
0003b0  78e0              LDRB     r0,[r4,#3]            ;498
0003b2  2801              CMP      r0,#1                 ;498
0003b4  d10f              BNE      |L6.982|
0003b6  7920              LDRB     r0,[r4,#4]            ;500
0003b8  4911              LDR      r1,|L6.1024|
0003ba  7809              LDRB     r1,[r1,#0]            ;500  ; System
0003bc  4288              CMP      r0,r1                 ;500
0003be  d108              BNE      |L6.978|
0003c0  490f              LDR      r1,|L6.1024|
0003c2  f8d42005          LDR      r2,[r4,#5]            ;502
0003c6  604a              STR      r2,[r1,#4]            ;502  ; System
0003c8  f8b40009          LDRH     r0,[r4,#9]            ;502
0003cc  8108              STRH     r0,[r1,#8]            ;502
0003ce  2001              MOVS     r0,#1                 ;503
0003d0  e692              B        |L6.248|
                  |L6.978|
0003d2  2003              MOVS     r0,#3                 ;507
0003d4  e690              B        |L6.248|
                  |L6.982|
0003d6  78a0              LDRB     r0,[r4,#2]            ;510
0003d8  2807              CMP      r0,#7                 ;510
0003da  d121              BNE      |L6.1056|
0003dc  78e0              LDRB     r0,[r4,#3]            ;510
0003de  2801              CMP      r0,#1                 ;510
0003e0  d11e              BNE      |L6.1056|
0003e2  7920              LDRB     r0,[r4,#4]            ;512
0003e4  4906              LDR      r1,|L6.1024|
0003e6  7809              LDRB     r1,[r1,#0]            ;512  ; System
0003e8  4288              CMP      r0,r1                 ;512
0003ea  d117              BNE      |L6.1052|
0003ec  4904              LDR      r1,|L6.1024|
0003ee  f8d42006          LDR      r2,[r4,#6]            ;515
0003f2  604a              STR      r2,[r1,#4]            ;515  ; System
0003f4  8960              LDRH     r0,[r4,#0xa]          ;515
0003f6  8108              STRH     r0,[r1,#8]            ;515
0003f8  2001              MOVS     r0,#1                 ;516
0003fa  e67d              B        |L6.248|
                  |L6.1020|
                          DCD      Alarm_threshold
                  |L6.1024|
                          DCD      System
                  |L6.1028|
000404  0d0a00            DCB      "\r\n",0
000407  00                DCB      0
                  |L6.1032|
000408  25662020          DCB      "%f  %f",0
00040c  256600  
00040f  00                DCB      0
                  |L6.1040|
                          DCD      PC_Cmd
                  |L6.1044|
                          DCD      MT2000_Tx
                  |L6.1048|
                          DCD      Alarm
                  |L6.1052|
00041c  2003              MOVS     r0,#3                 ;520
00041e  e66b              B        |L6.248|
                  |L6.1056|
000420  78a0              LDRB     r0,[r4,#2]            ;523
000422  2808              CMP      r0,#8                 ;523
000424  d10b              BNE      |L6.1086|
000426  78e0              LDRB     r0,[r4,#3]            ;523
000428  2801              CMP      r0,#1                 ;523
00042a  d108              BNE      |L6.1086|
00042c  7920              LDRB     r0,[r4,#4]            ;525
00042e  497b              LDR      r1,|L6.1564|
000430  7809              LDRB     r1,[r1,#0]            ;525  ; System
000432  4288              CMP      r0,r1                 ;525
000434  d101              BNE      |L6.1082|
000436  2001              MOVS     r0,#1                 ;528
000438  e65e              B        |L6.248|
                  |L6.1082|
00043a  2003              MOVS     r0,#3                 ;532
00043c  e65c              B        |L6.248|
                  |L6.1086|
00043e  78a0              LDRB     r0,[r4,#2]            ;535
000440  2809              CMP      r0,#9                 ;535
000442  d114              BNE      |L6.1134|
000444  78e0              LDRB     r0,[r4,#3]            ;535
000446  2801              CMP      r0,#1                 ;535
000448  d111              BNE      |L6.1134|
00044a  7920              LDRB     r0,[r4,#4]            ;537
00044c  4973              LDR      r1,|L6.1564|
00044e  7809              LDRB     r1,[r1,#0]            ;537  ; System
000450  4288              CMP      r0,r1                 ;537
000452  d10a              BNE      |L6.1130|
000454  4972              LDR      r1,|L6.1568|
000456  7960              LDRB     r0,[r4,#5]            ;539
000458  7048              STRB     r0,[r1,#1]            ;539
00045a  f8d42006          LDR      r2,[r4,#6]            ;540
00045e  604a              STR      r2,[r1,#4]            ;540  ; Scan_Frq
000460  f8d4000a          LDR      r0,[r4,#0xa]          ;540
000464  6088              STR      r0,[r1,#8]            ;540  ; Scan_Frq
000466  2001              MOVS     r0,#1                 ;541
000468  e646              B        |L6.248|
                  |L6.1130|
00046a  2003              MOVS     r0,#3                 ;545
00046c  e644              B        |L6.248|
                  |L6.1134|
00046e  78a0              LDRB     r0,[r4,#2]            ;548
000470  280a              CMP      r0,#0xa               ;548
000472  d10e              BNE      |L6.1170|
000474  78e0              LDRB     r0,[r4,#3]            ;548
000476  2801              CMP      r0,#1                 ;548
000478  d10b              BNE      |L6.1170|
00047a  7920              LDRB     r0,[r4,#4]            ;550
00047c  4967              LDR      r1,|L6.1564|
00047e  7809              LDRB     r1,[r1,#0]            ;550  ; System
000480  4288              CMP      r0,r1                 ;550
000482  d104              BNE      |L6.1166|
000484  4967              LDR      r1,|L6.1572|
000486  7960              LDRB     r0,[r4,#5]            ;552
000488  7048              STRB     r0,[r1,#1]            ;552
00048a  2001              MOVS     r0,#1                 ;553
00048c  e634              B        |L6.248|
                  |L6.1166|
00048e  2003              MOVS     r0,#3                 ;557
000490  e632              B        |L6.248|
                  |L6.1170|
000492  78a0              LDRB     r0,[r4,#2]            ;560
000494  280b              CMP      r0,#0xb               ;560
000496  d110              BNE      |L6.1210|
000498  78e0              LDRB     r0,[r4,#3]            ;560
00049a  2801              CMP      r0,#1                 ;560
00049c  d10d              BNE      |L6.1210|
00049e  7920              LDRB     r0,[r4,#4]            ;562
0004a0  495e              LDR      r1,|L6.1564|
0004a2  7809              LDRB     r1,[r1,#0]            ;562  ; System
0004a4  4288              CMP      r0,r1                 ;562
0004a6  d106              BNE      |L6.1206|
0004a8  495f              LDR      r1,|L6.1576|
0004aa  f8b40005          LDRH     r0,[r4,#5]            ;564
0004ae  f8a10001          STRH     r0,[r1,#1]            ;564
0004b2  2001              MOVS     r0,#1                 ;565
0004b4  e620              B        |L6.248|
                  |L6.1206|
0004b6  2003              MOVS     r0,#3                 ;569
0004b8  e61e              B        |L6.248|
                  |L6.1210|
0004ba  78a0              LDRB     r0,[r4,#2]            ;572
0004bc  280c              CMP      r0,#0xc               ;572
0004be  d110              BNE      |L6.1250|
0004c0  78e0              LDRB     r0,[r4,#3]            ;572
0004c2  2801              CMP      r0,#1                 ;572
0004c4  d10d              BNE      |L6.1250|
0004c6  7920              LDRB     r0,[r4,#4]            ;574
0004c8  4954              LDR      r1,|L6.1564|
0004ca  7809              LDRB     r1,[r1,#0]            ;574  ; System
0004cc  4288              CMP      r0,r1                 ;574
0004ce  d106              BNE      |L6.1246|
0004d0  4956              LDR      r1,|L6.1580|
0004d2  f8b40005          LDRH     r0,[r4,#5]            ;576
0004d6  f8a10001          STRH     r0,[r1,#1]            ;576
0004da  2001              MOVS     r0,#1                 ;577
0004dc  e60c              B        |L6.248|
                  |L6.1246|
0004de  2003              MOVS     r0,#3                 ;581
0004e0  e60a              B        |L6.248|
                  |L6.1250|
0004e2  78a0              LDRB     r0,[r4,#2]            ;584
0004e4  280d              CMP      r0,#0xd               ;584
                  |L6.1254|
0004e6  d17c              BNE      |L6.1506|
0004e8  78e0              LDRB     r0,[r4,#3]            ;584
0004ea  2801              CMP      r0,#1                 ;584
0004ec  d1fb              BNE      |L6.1254|
0004ee  7920              LDRB     r0,[r4,#4]            ;586
0004f0  494a              LDR      r1,|L6.1564|
0004f2  7809              LDRB     r1,[r1,#0]            ;586  ; System
0004f4  4288              CMP      r0,r1                 ;586
0004f6  d175              BNE      |L6.1508|
0004f8  494d              LDR      r1,|L6.1584|
0004fa  7960              LDRB     r0,[r4,#5]            ;588
0004fc  7048              STRB     r0,[r1,#1]            ;588
0004fe  88e0              LDRH     r0,[r4,#6]            ;589
000500  8048              STRH     r0,[r1,#2]            ;589
000502  8920              LDRH     r0,[r4,#8]            ;591
000504  8088              STRH     r0,[r1,#4]            ;591
000506  8960              LDRH     r0,[r4,#0xa]          ;592
000508  80c8              STRH     r0,[r1,#6]            ;592
00050a  7b20              LDRB     r0,[r4,#0xc]          ;593
00050c  7208              STRB     r0,[r1,#8]            ;593
00050e  f8d4000d          LDR      r0,[r4,#0xd]          ;594
000512  f8c10009          STR      r0,[r1,#9]            ;594  ; Run_Diagram
000516  8a60              LDRH     r0,[r4,#0x12]         ;597
000518  81c8              STRH     r0,[r1,#0xe]          ;597
00051a  8aa0              LDRH     r0,[r4,#0x14]         ;598
00051c  8208              STRH     r0,[r1,#0x10]         ;598
00051e  7da0              LDRB     r0,[r4,#0x16]         ;599
000520  7488              STRB     r0,[r1,#0x12]         ;599
000522  f8d40017          LDR      r0,[r4,#0x17]         ;600
000526  f8c10013          STR      r0,[r1,#0x13]         ;600  ; Run_Diagram
00052a  8ba0              LDRH     r0,[r4,#0x1c]         ;603
00052c  8308              STRH     r0,[r1,#0x18]         ;603
00052e  8be0              LDRH     r0,[r4,#0x1e]         ;604
000530  8348              STRH     r0,[r1,#0x1a]         ;604
000532  2020              MOVS     r0,#0x20              ;605
000534  5d00              LDRB     r0,[r0,r4]            ;605
000536  7708              STRB     r0,[r1,#0x1c]         ;605
000538  f8d40021          LDR      r0,[r4,#0x21]         ;606
00053c  f8c1001d          STR      r0,[r1,#0x1d]         ;606  ; Run_Diagram
000540  8ce0              LDRH     r0,[r4,#0x26]         ;609
000542  8448              STRH     r0,[r1,#0x22]         ;609
000544  8d20              LDRH     r0,[r4,#0x28]         ;610
000546  8488              STRH     r0,[r1,#0x24]         ;610
000548  f894002a          LDRB     r0,[r4,#0x2a]         ;611
00054c  f8810026          STRB     r0,[r1,#0x26]         ;611
000550  f8d4002b          LDR      r0,[r4,#0x2b]         ;612
000554  f8c10027          STR      r0,[r1,#0x27]         ;612  ; Run_Diagram
000558  8e20              LDRH     r0,[r4,#0x30]         ;615
00055a  8588              STRH     r0,[r1,#0x2c]         ;615
00055c  8e60              LDRH     r0,[r4,#0x32]         ;616
00055e  85c8              STRH     r0,[r1,#0x2e]         ;616
000560  f8940034          LDRB     r0,[r4,#0x34]         ;617
000564  f8810030          STRB     r0,[r1,#0x30]         ;617
000568  f8d40035          LDR      r0,[r4,#0x35]         ;618
00056c  f8c10031          STR      r0,[r1,#0x31]         ;618  ; Run_Diagram
000570  8f60              LDRH     r0,[r4,#0x3a]         ;621
000572  86c8              STRH     r0,[r1,#0x36]         ;621
000574  8fa0              LDRH     r0,[r4,#0x3c]         ;622
000576  8708              STRH     r0,[r1,#0x38]         ;622
000578  f894003e          LDRB     r0,[r4,#0x3e]         ;623
00057c  f881003a          STRB     r0,[r1,#0x3a]         ;623
000580  f8d4003f          LDR      r0,[r4,#0x3f]         ;624
000584  f8c1003b          STR      r0,[r1,#0x3b]         ;624  ; Run_Diagram
000588  f8b40044          LDRH     r0,[r4,#0x44]         ;627
00058c  f8a10040          STRH     r0,[r1,#0x40]         ;627
000590  f8b40046          LDRH     r0,[r4,#0x46]         ;628
000594  f8a10042          STRH     r0,[r1,#0x42]         ;628
000598  f8940048          LDRB     r0,[r4,#0x48]         ;629
00059c  f8810044          STRB     r0,[r1,#0x44]         ;629
0005a0  f8d40049          LDR      r0,[r4,#0x49]         ;630
0005a4  f8c10045          STR      r0,[r1,#0x45]         ;630  ; Run_Diagram
0005a8  f8b4004e          LDRH     r0,[r4,#0x4e]         ;633
0005ac  f8a1004a          STRH     r0,[r1,#0x4a]         ;633
0005b0  f8b40050          LDRH     r0,[r4,#0x50]         ;634
0005b4  f8a1004c          STRH     r0,[r1,#0x4c]         ;634
0005b8  f8940052          LDRB     r0,[r4,#0x52]         ;635
0005bc  f881004e          STRB     r0,[r1,#0x4e]         ;635
0005c0  f8d40053          LDR      r0,[r4,#0x53]         ;636
0005c4  f8c1004f          STR      r0,[r1,#0x4f]         ;636  ; Run_Diagram
0005c8  f8b40058          LDRH     r0,[r4,#0x58]         ;639
0005cc  f8a10054          STRH     r0,[r1,#0x54]         ;639
0005d0  f8b4005a          LDRH     r0,[r4,#0x5a]         ;640
0005d4  f8a10056          STRH     r0,[r1,#0x56]         ;640
0005d8  f894005c          LDRB     r0,[r4,#0x5c]         ;641
0005dc  f8810058          STRB     r0,[r1,#0x58]         ;641
0005e0  e001              B        |L6.1510|
                  |L6.1506|
0005e2  e018              B        |L6.1558|
                  |L6.1508|
0005e4  e015              B        |L6.1554|
                  |L6.1510|
0005e6  f8d4005d          LDR      r0,[r4,#0x5d]         ;642
0005ea  f8c10059          STR      r0,[r1,#0x59]         ;642  ; Run_Diagram
0005ee  f8b40062          LDRH     r0,[r4,#0x62]         ;645
0005f2  f8a1005e          STRH     r0,[r1,#0x5e]         ;645
0005f6  f8b40064          LDRH     r0,[r4,#0x64]         ;646
0005fa  f8a10060          STRH     r0,[r1,#0x60]         ;646
0005fe  f8940066          LDRB     r0,[r4,#0x66]         ;647
000602  f8810062          STRB     r0,[r1,#0x62]         ;647
000606  f8d40067          LDR      r0,[r4,#0x67]         ;648
00060a  f8c10063          STR      r0,[r1,#0x63]         ;648  ; Run_Diagram
00060e  2001              MOVS     r0,#1                 ;651
000610  e572              B        |L6.248|
                  |L6.1554|
000612  2003              MOVS     r0,#3                 ;655
000614  e570              B        |L6.248|
                  |L6.1558|
000616  2004              MOVS     r0,#4                 ;659
000618  e56e              B        |L6.248|
;;;661    
                          ENDP

00061a  0000              DCW      0x0000
                  |L6.1564|
                          DCD      System
                  |L6.1568|
                          DCD      Scan_Frq
                  |L6.1572|
                          DCD      Sacn_stop
                  |L6.1576|
                          DCD      Add_Power
                  |L6.1580|
                          DCD      Sub_Power
                  |L6.1584|
                          DCD      Run_Diagram

                          AREA ||i.Send_PC||, CODE, READONLY, ALIGN=2

                  Send_PC PROC
;;;700    ****************************************************/
;;;701    uint8_t Send_PC(uint8_t *Func_code)
000000  b501              PUSH     {r0,lr}
;;;702    {
000002  b0c4              SUB      sp,sp,#0x110
;;;703        Buffer_t COM_buffer;
;;;704    
;;;705        if(Func_code[0] ==0x01 && Func_code[1] == 0x02)			//发射机报警参数初始化请求应答
000004  9844              LDR      r0,[sp,#0x110]
000006  7800              LDRB     r0,[r0,#0]
000008  2801              CMP      r0,#1
00000a  d134              BNE      |L7.118|
00000c  9844              LDR      r0,[sp,#0x110]
00000e  7840              LDRB     r0,[r0,#1]
000010  2802              CMP      r0,#2
000012  d130              BNE      |L7.118|
;;;706        {
;;;707            if(Data_Assemble(Func_code,(uint8_t *)&Alarm_backPC, System.CAN_ID[0], sizeof(Alarm_backPC), &COM_buffer) == 1)
000014  a803              ADD      r0,sp,#0xc
000016  9000              STR      r0,[sp,#0]
000018  48fb              LDR      r0,|L7.1032|
00001a  7800              LDRB     r0,[r0,#0]  ; System
00001c  2303              MOVS     r3,#3
00001e  4602              MOV      r2,r0
000020  49fa              LDR      r1,|L7.1036|
000022  9002              STR      r0,[sp,#8]
000024  9844              LDR      r0,[sp,#0x110]
000026  f7fffffe          BL       Data_Assemble
00002a  2801              CMP      r0,#1
00002c  d17e              BNE      |L7.300|
;;;708            {
;;;709                comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
00002e  f89d010c          LDRB     r0,[sp,#0x10c]
000032  4602              MOV      r2,r0
000034  a903              ADD      r1,sp,#0xc
000036  9002              STR      r0,[sp,#8]
000038  2004              MOVS     r0,#4
00003a  f7fffffe          BL       comSendBuf
;;;710                App_printf("COM_buffer: ");
00003e  a0f4              ADR      r0,|L7.1040|
000040  f7fffffe          BL       App_printf
;;;711                for(int i=0; i<COM_buffer.len; i++)
000044  2000              MOVS     r0,#0
000046  9002              STR      r0,[sp,#8]
000048  e00a              B        |L7.96|
                  |L7.74|
;;;712                {
;;;713                    App_printf("%02x ",COM_buffer.data[i]);
00004a  a903              ADD      r1,sp,#0xc
00004c  9802              LDR      r0,[sp,#8]
00004e  5c08              LDRB     r0,[r1,r0]
000050  4601              MOV      r1,r0
000052  9001              STR      r0,[sp,#4]
000054  a0f2              ADR      r0,|L7.1056|
000056  f7fffffe          BL       App_printf
00005a  9802              LDR      r0,[sp,#8]            ;711
00005c  1c40              ADDS     r0,r0,#1              ;711
00005e  9002              STR      r0,[sp,#8]            ;711
                  |L7.96|
000060  f89d110c          LDRB     r1,[sp,#0x10c]        ;711
000064  9802              LDR      r0,[sp,#8]            ;711
000066  4281              CMP      r1,r0                 ;711
000068  dcef              BGT      |L7.74|
;;;714                }
;;;715                App_printf("\r\n");
00006a  a0ef              ADR      r0,|L7.1064|
00006c  f7fffffe          BL       App_printf
;;;716                return 1;
000070  2001              MOVS     r0,#1
                  |L7.114|
;;;717            }
;;;718        }
;;;719        else if(Func_code[0] ==0x02 && Func_code[1] == 0x02)	//查询
;;;720        {
;;;721    #if	NEW_PROTOCOL_EN
;;;722    	/*----------------兼容旧协议，给旧协议的变量赋值-----------------*/
;;;723    	Work_paraBack.Channel[0] = 0x01;		//0x01通道
;;;724    	Work_paraBack.Channel[1] = 0x01;		//0x01通道
;;;725    	Work_paraBack.Channel[2] = 0x01;		//0x01通道
;;;726    	
;;;727    	switch( MT2000_Rx.mode )
;;;728    	{
;;;729    		case '1': Work_paraBack.Mode[0] = 0x01; break;	//固频
;;;730    		case '2': Work_paraBack.Mode[0] = 0x02; break;	//双频
;;;731    		case '3': Work_paraBack.Mode[0] = 0x03; break;	//三频
;;;732    		default: break;
;;;733    	}
;;;734    	
;;;735    	switch( MT2000_Rx.power )
;;;736    	{
;;;737    		case '1': Work_paraBack.Power_grade[0] = 0x02; break;	//1/4功率
;;;738    		case '2': Work_paraBack.Power_grade[0] = 0x01; break;	//1/2功率
;;;739    		case '3': Work_paraBack.Power_grade[0] = 0x00; break;	//全功率
;;;740    		default:	break;
;;;741    	}
;;;742    	
;;;743    	Work_paraBack.Freq[0] = (MT2000_Rx.fre1[0]-'0')<<4 + (MT2000_Rx.fre1[1]-'0');
;;;744    	Work_paraBack.Freq[0] = (MT2000_Rx.fre1[0]-'0')<<4 + (MT2000_Rx.fre1[1]-'0');
;;;745    	Work_paraBack.Freq[0] = (MT2000_Rx.fre1[0]-'0')<<4 + (MT2000_Rx.fre1[1]-'0');
;;;746    	Work_paraBack.Freq[0] = (MT2000_Rx.fre1[0]-'0')<<4 + (MT2000_Rx.fre1[1]-'0');
;;;747    	
;;;748    	/* 固频时无效 */
;;;749    	Work_paraBack.Freq[0] = (MT2000_Rx.fre2[0]-'0')<<4 + (MT2000_Rx.fre2[1]-'0');
;;;750    	Work_paraBack.Freq[1] = (MT2000_Rx.fre2[2]-'0')<<4 + (MT2000_Rx.fre2[3]-'0');
;;;751    	Work_paraBack.Freq[2] = (MT2000_Rx.fre2[4]-'0')<<4 + (MT2000_Rx.fre2[5]-'0');
;;;752    	Work_paraBack.Freq[3] = (MT2000_Rx.fre2[6]-'0')<<4 + (MT2000_Rx.fre2[7]-'0');
;;;753    	
;;;754    	/* 非三频无效 */
;;;755    	Work_paraBack.Freq[0] = (MT2000_Rx.fre3[0]-'0')<<4 + (MT2000_Rx.fre3[1]-'0');
;;;756    	Work_paraBack.Freq[1] = (MT2000_Rx.fre3[2]-'0')<<4 + (MT2000_Rx.fre3[3]-'0');
;;;757    	Work_paraBack.Freq[2] = (MT2000_Rx.fre3[4]-'0')<<4 + (MT2000_Rx.fre3[5]-'0');
;;;758    	Work_paraBack.Freq[3] = (MT2000_Rx.fre3[6]-'0')<<4 + (MT2000_Rx.fre3[7]-'0');
;;;759    #endif		
;;;760            if(Data_Assemble(Func_code, (uint8_t *)&Work_paraBack, System.CAN_ID[0], sizeof(Work_paraBack), &COM_buffer) == 1)
;;;761            {
;;;762                comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;763                App_printf("COM_buffer: ");
;;;764                for(int i=0; i<COM_buffer.len; i++)
;;;765                {
;;;766                    App_printf("%02x ",COM_buffer.data[i]);
;;;767                }
;;;768                App_printf("\r\n");
;;;769                return 1;
;;;770            }
;;;771        }
;;;772        else if(Func_code[0] ==0x03 && Func_code[1] == 0x02)	//发射
;;;773        {
;;;774            if(Data_Assemble(Func_code, (uint8_t *)&Trans_openBack, System.CAN_ID[0], sizeof(Trans_openBack), &COM_buffer) == 1)
;;;775            {
;;;776                comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;777                App_printf("COM_buffer: ");
;;;778                for(int i=0; i<COM_buffer.len; i++)
;;;779                {
;;;780                    App_printf("%02x ",COM_buffer.data[i]);
;;;781                }
;;;782                App_printf("\r\n");
;;;783                return 1;
;;;784            }
;;;785        }
;;;786        else if(Func_code[0] ==0x04 && Func_code[1] == 0x02)	//停止
;;;787        {
;;;788            if(Data_Assemble(Func_code, (uint8_t *)&Trans_stopBack, System.CAN_ID[0], sizeof(Trans_stopBack), &COM_buffer) == 1)
;;;789            {
;;;790                comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;791                App_printf("COM_buffer: ");
;;;792                for(int i=0; i<COM_buffer.len; i++)
;;;793                {
;;;794                    App_printf("%02x ",COM_buffer.data[i]);
;;;795                }
;;;796                App_printf("\r\n");
;;;797                return 1;
;;;798            }
;;;799        }
;;;800        else if(Func_code[0] ==0x05 && Func_code[1] == 0x02)	//解除报警
;;;801        {
;;;802            if(Data_Assemble(Func_code, (uint8_t *)&DisalarmBack, System.CAN_ID[0], sizeof(DisalarmBack), &COM_buffer) == 1)
;;;803            {
;;;804                comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;805                App_printf("COM_buffer: ");
;;;806                for(int i=0; i<COM_buffer.len; i++)
;;;807                {
;;;808                    App_printf("%02x ",COM_buffer.data[i]);
;;;809                }
;;;810                App_printf("\r\n");
;;;811                return 1;
;;;812            }
;;;813        }
;;;814        else	if(Func_code[0] ==0x06 && Func_code[1] == 0x02)	//报警信息查询
;;;815        {
;;;816            if(Data_Assemble(Func_code, (uint8_t *)&Alarm_historyBack, System.CAN_ID[0], sizeof(Alarm_historyBack), &COM_buffer) == 1)
;;;817            {
;;;818                comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;819                App_printf("COM_buffer: ");
;;;820                for(int i=0; i<COM_buffer.len; i++)
;;;821                {
;;;822                    App_printf("%02x ",COM_buffer.data[i]);
;;;823                }
;;;824                App_printf("\r\n");
;;;825                return 1;
;;;826            }
;;;827        }
;;;828        else if(Func_code[0] ==0x07 && Func_code[1] == 0x02)	//开机
;;;829        {
;;;830            if(Data_Assemble(Func_code, (uint8_t *)&Power_onBack, System.CAN_ID[0], sizeof(Power_onBack), &COM_buffer) == 1)
;;;831            {
;;;832                comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;833                App_printf("COM_buffer: ");
;;;834                for(int i=0; i<COM_buffer.len; i++)
;;;835                {
;;;836                    App_printf("%02x ",COM_buffer.data[i]);
;;;837                }
;;;838                App_printf("\r\n");
;;;839                return 1;
;;;840            }
;;;841        }
;;;842        else if(Func_code[0] ==0x08 && Func_code[1] == 0x02)	//关机
;;;843        {
;;;844            if(Data_Assemble(Func_code, (uint8_t *)&Power_offBack, System.CAN_ID[0], sizeof(Power_offBack), &COM_buffer) == 1)
;;;845            {
;;;846                comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;847                App_printf("COM_buffer: ");
;;;848                for(int i=0; i<COM_buffer.len; i++)
;;;849                {
;;;850                    App_printf("%02x ",COM_buffer.data[i]);
;;;851                }
;;;852                App_printf("\r\n");
;;;853                return 1;
;;;854            }
;;;855        }
;;;856        else if(Func_code[0] ==0x09 && Func_code[1] == 0x02)	//扫频
;;;857        {
;;;858            App_printf("COM_buffer sweepning: \r\n");
;;;859            switch(System.Scan_Freq_flag)
;;;860            {
;;;861    			case 0:
;;;862    			{
;;;863    				if(Data_Assemble(Func_code, (uint8_t *)&Scan_FrqBack, System.CAN_ID[0], sizeof(Scan_FrqBack), &COM_buffer) == 1)
;;;864    				{
;;;865    					comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;866    					return 1;
;;;867    				}
;;;868    			}
;;;869    			case 1:
;;;870    			{
;;;871    				if(Data_Assemble(Func_code, (uint8_t *)&Scan_FrqBack1, System.CAN_ID[0], sizeof(Scan_FrqBack1), &COM_buffer) == 1)
;;;872    				{
;;;873    					comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;874    					return 1;
;;;875    				}
;;;876    			}
;;;877    			case 2:
;;;878    			{
;;;879    				if(Data_Assemble(Func_code, (uint8_t *)&Scan_FrqBack2, System.CAN_ID[0], sizeof(Scan_FrqBack2), &COM_buffer) == 1)
;;;880    				{
;;;881    					comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;882    					return 1;
;;;883    				}
;;;884    			}
;;;885    			case 3:
;;;886    			{
;;;887    				if(Data_Assemble(Func_code, (uint8_t *)&Scan_FrqBack3, System.CAN_ID[0], sizeof(Scan_FrqBack3), &COM_buffer) == 1)
;;;888    				{
;;;889    					comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;890    					return 1;
;;;891    				}
;;;892    			}
;;;893    			case 4:
;;;894    			{
;;;895    				if(Data_Assemble(Func_code, (uint8_t *)&Scan_FrqBack4, System.CAN_ID[0], sizeof(Scan_FrqBack4), &COM_buffer) == 1)
;;;896    				{
;;;897    					comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;898    					return 1;
;;;899    				}
;;;900    			}
;;;901    			case 5:
;;;902    			{
;;;903    				if(Data_Assemble(Func_code, (uint8_t *)&Scan_FrqBack5, System.CAN_ID[0], sizeof(Scan_FrqBack5), &COM_buffer) == 1)
;;;904    				{
;;;905    					comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;906    					return 1;
;;;907    				}
;;;908    			}
;;;909    			case 6:
;;;910    			{
;;;911    				if(Data_Assemble(Func_code, (uint8_t *)&Scan_FrqBack6, System.CAN_ID[0], sizeof(Scan_FrqBack6), &COM_buffer) == 1)
;;;912    				{
;;;913    					comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;914    					return 1;
;;;915    				}
;;;916    			}
;;;917    			case 7:
;;;918    			{
;;;919    				if(Data_Assemble(Func_code, (uint8_t *)&Scan_FrqBack7, System.CAN_ID[0],sizeof(Scan_FrqBack7), &COM_buffer) == 1)
;;;920    				{
;;;921    					comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;922    					return 1;
;;;923    				}
;;;924    			}
;;;925    			case 8:
;;;926    			{
;;;927    				if(Data_Assemble(Func_code, (uint8_t *)&Scan_FrqBack8, System.CAN_ID[0], sizeof(Scan_FrqBack8), &COM_buffer) == 1)
;;;928    				{
;;;929    					comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;930    					return 1;
;;;931    				}
;;;932    			}
;;;933    			case 9:
;;;934    			{
;;;935    				if(Data_Assemble(Func_code, (uint8_t *)&Scan_FrqBack9, System.CAN_ID[0], sizeof(Scan_FrqBack9), &COM_buffer) == 1)
;;;936    				{
;;;937    					comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;938    					return 1;
;;;939    				}
;;;940    			}
;;;941    			case 10:
;;;942    			{
;;;943    				if(Data_Assemble(Func_code, (uint8_t *)&Scan_FrqBack10, System.CAN_ID[0], sizeof(Scan_FrqBack10), &COM_buffer) == 1)
;;;944    				{
;;;945    					comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;946    					return 1;
;;;947    				}
;;;948    			}
;;;949    			case 11:
;;;950    			{
;;;951    				if(Data_Assemble(Func_code, (uint8_t *)&Scan_FrqBack11, System.CAN_ID[0], sizeof(Scan_FrqBack11), &COM_buffer) == 1)
;;;952    				{
;;;953    					comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;954    					return 1;
;;;955    				}
;;;956    			}
;;;957    			case 12:
;;;958    			{
;;;959    				if(Data_Assemble(Func_code, (uint8_t *)&Scan_FrqBack12, System.CAN_ID[0], sizeof(Scan_FrqBack12), &COM_buffer) == 1)
;;;960    				{
;;;961    					comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;962    					return 1;
;;;963    				}
;;;964    			}
;;;965    //			case 13:
;;;966    //			{
;;;967    //				if(Data_Assemble(Func_code, (uint8_t *)&Scan_FrqBack13, System.CAN_ID[0], sizeof(Scan_FrqBack13), &COM_buffer) == 1)
;;;968    //				{
;;;969    //					comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;970    //					return 1;
;;;971    //				}
;;;972    //			}
;;;973            }
;;;974        }
;;;975        else if(Func_code[0] ==0x0A && Func_code[1] == 0x02)	//停止扫频
;;;976        {
;;;977            if(Data_Assemble(Func_code, (uint8_t *)&Sacn_stopBack, System.CAN_ID[0], sizeof(Sacn_stopBack), &COM_buffer) == 1)
;;;978            {
;;;979                comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;980                App_printf("COM_buffer: ");
;;;981                for(int i=0; i<COM_buffer.len; i++)
;;;982                {
;;;983                    App_printf("%02x ",COM_buffer.data[i]);
;;;984                }
;;;985                App_printf("\r\n");
;;;986                return 1;
;;;987            }
;;;988        }
;;;989        else if(Func_code[0] ==0x0B && Func_code[1] == 0x02)	//增加功率
;;;990        {
;;;991            if(Data_Assemble(Func_code, (uint8_t *)&Add_PowerBack, System.CAN_ID[0], sizeof(Add_PowerBack), &COM_buffer) == 1)
;;;992            {
;;;993                comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;994                App_printf("COM_buffer: ");
;;;995                for(int i=0; i<COM_buffer.len; i++)
;;;996                {
;;;997                    App_printf("%02x ",COM_buffer.data[i]);
;;;998                }
;;;999                App_printf("\r\n");
;;;1000               return 1;
;;;1001           }
;;;1002       }
;;;1003       else if(Func_code[0] ==0x0C && Func_code[1] == 0x02)	//减小功率
;;;1004       {
;;;1005           if(Data_Assemble(Func_code, (uint8_t *)&Sub_PowerBack, System.CAN_ID[0], sizeof(Sub_PowerBack), &COM_buffer) == 1)
;;;1006           {
;;;1007               comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;1008               App_printf("COM_buffer: ");
;;;1009               for(int i=0; i<COM_buffer.len; i++)
;;;1010               {
;;;1011                   App_printf("%02x ",COM_buffer.data[i]);
;;;1012               }
;;;1013               App_printf("\r\n");
;;;1014               return 1;
;;;1015           }
;;;1016       }
;;;1017       else if(Func_code[0] ==0x0D && Func_code[1] == 0x02)	//运行图
;;;1018       {
;;;1019           if(Data_Assemble(Func_code, (uint8_t *)&Run_DiagramBack, System.CAN_ID[0], sizeof(Run_DiagramBack), &COM_buffer) == 1)
;;;1020           {
;;;1021               comSendBuf(COM5,COM_buffer.data,COM_buffer.len);
;;;1022               App_printf("COM_buffer: ");
;;;1023               for(int i=0; i<COM_buffer.len; i++)
;;;1024               {
;;;1025                   App_printf("%02x ",COM_buffer.data[i]);
;;;1026               }
;;;1027               App_printf("\r\n");
;;;1028               return 1;
;;;1029           }
;;;1030       }
;;;1031       return 2;
;;;1032   }
000072  b045              ADD      sp,sp,#0x114
000074  bd00              POP      {pc}
                  |L7.118|
000076  9844              LDR      r0,[sp,#0x110]        ;719
000078  7800              LDRB     r0,[r0,#0]            ;719
00007a  2802              CMP      r0,#2                 ;719
                  |L7.124|
00007c  d17e              BNE      |L7.380|
00007e  9844              LDR      r0,[sp,#0x110]        ;719
000080  7840              LDRB     r0,[r0,#1]            ;719
000082  2802              CMP      r0,#2                 ;719
000084  d1fa              BNE      |L7.124|
000086  2001              MOVS     r0,#1                 ;723
000088  49e8              LDR      r1,|L7.1068|
00008a  70c8              STRB     r0,[r1,#3]            ;723
00008c  2101              MOVS     r1,#1                 ;724
00008e  48e7              LDR      r0,|L7.1068|
000090  7101              STRB     r1,[r0,#4]            ;724
000092  7141              STRB     r1,[r0,#5]            ;725
000094  48e6              LDR      r0,|L7.1072|
000096  7880              LDRB     r0,[r0,#2]            ;727  ; MT2000_Rx
000098  2831              CMP      r0,#0x31              ;727
00009a  d004              BEQ      |L7.166|
00009c  2832              CMP      r0,#0x32              ;727
00009e  d006              BEQ      |L7.174|
0000a0  2833              CMP      r0,#0x33              ;727
0000a2  d10c              BNE      |L7.190|
0000a4  e007              B        |L7.182|
                  |L7.166|
0000a6  2001              MOVS     r0,#1                 ;729
0000a8  49e0              LDR      r1,|L7.1068|
0000aa  7088              STRB     r0,[r1,#2]            ;729
0000ac  e008              B        |L7.192|
                  |L7.174|
0000ae  2002              MOVS     r0,#2                 ;730
0000b0  49de              LDR      r1,|L7.1068|
0000b2  7088              STRB     r0,[r1,#2]            ;730
0000b4  e004              B        |L7.192|
                  |L7.182|
0000b6  2003              MOVS     r0,#3                 ;731
0000b8  49dc              LDR      r1,|L7.1068|
0000ba  7088              STRB     r0,[r1,#2]            ;731
0000bc  e000              B        |L7.192|
                  |L7.190|
0000be  bf00              NOP                            ;732
                  |L7.192|
0000c0  bf00              NOP                            ;729
0000c2  48db              LDR      r0,|L7.1072|
0000c4  7900              LDRB     r0,[r0,#4]            ;735  ; MT2000_Rx
0000c6  2831              CMP      r0,#0x31              ;735
0000c8  d004              BEQ      |L7.212|
0000ca  2832              CMP      r0,#0x32              ;735
0000cc  d006              BEQ      |L7.220|
0000ce  2833              CMP      r0,#0x33              ;735
0000d0  d10c              BNE      |L7.236|
0000d2  e007              B        |L7.228|
                  |L7.212|
0000d4  2002              MOVS     r0,#2                 ;737
0000d6  49d5              LDR      r1,|L7.1068|
0000d8  7488              STRB     r0,[r1,#0x12]         ;737
0000da  e008              B        |L7.238|
                  |L7.220|
0000dc  2001              MOVS     r0,#1                 ;738
0000de  49d3              LDR      r1,|L7.1068|
0000e0  7488              STRB     r0,[r1,#0x12]         ;738
0000e2  e004              B        |L7.238|
                  |L7.228|
0000e4  2000              MOVS     r0,#0                 ;739
0000e6  49d1              LDR      r1,|L7.1068|
0000e8  7488              STRB     r0,[r1,#0x12]         ;739
0000ea  e000              B        |L7.238|
                  |L7.236|
0000ec  bf00              NOP                            ;740
                  |L7.238|
0000ee  bf00              NOP                            ;737
0000f0  48cf              LDR      r0,|L7.1072|
0000f2  7a00              LDRB     r0,[r0,#8]            ;743  ; MT2000_Rx
0000f4  3830              SUBS     r0,r0,#0x30           ;743
0000f6  49ce              LDR      r1,|L7.1072|
0000f8  7a49              LDRB     r1,[r1,#9]            ;743
0000fa  392c              SUBS     r1,r1,#0x2c           ;743
0000fc  4088              LSLS     r0,r0,r1              ;743
0000fe  49cb              LDR      r1,|L7.1068|
000100  7188              STRB     r0,[r1,#6]            ;743
000102  48cb              LDR      r0,|L7.1072|
000104  7a00              LDRB     r0,[r0,#8]            ;744  ; MT2000_Rx
000106  3830              SUBS     r0,r0,#0x30           ;744
000108  49c9              LDR      r1,|L7.1072|
00010a  7a49              LDRB     r1,[r1,#9]            ;744
00010c  392c              SUBS     r1,r1,#0x2c           ;744
00010e  4088              LSLS     r0,r0,r1              ;744
000110  49c6              LDR      r1,|L7.1068|
000112  7188              STRB     r0,[r1,#6]            ;744
000114  48c6              LDR      r0,|L7.1072|
000116  7a00              LDRB     r0,[r0,#8]            ;745  ; MT2000_Rx
000118  3830              SUBS     r0,r0,#0x30           ;745
00011a  49c5              LDR      r1,|L7.1072|
00011c  7a49              LDRB     r1,[r1,#9]            ;745
00011e  392c              SUBS     r1,r1,#0x2c           ;745
000120  4088              LSLS     r0,r0,r1              ;745
000122  49c2              LDR      r1,|L7.1068|
000124  7188              STRB     r0,[r1,#6]            ;745
000126  48c2              LDR      r0,|L7.1072|
000128  7a00              LDRB     r0,[r0,#8]            ;746  ; MT2000_Rx
00012a  e000              B        |L7.302|
                  |L7.300|
00012c  e0e5              B        |L7.762|
                  |L7.302|
00012e  3830              SUBS     r0,r0,#0x30           ;746
000130  49bf              LDR      r1,|L7.1072|
000132  7a49              LDRB     r1,[r1,#9]            ;746
000134  392c              SUBS     r1,r1,#0x2c           ;746
000136  4088              LSLS     r0,r0,r1              ;746
000138  49bc              LDR      r1,|L7.1068|
00013a  7188              STRB     r0,[r1,#6]            ;746
00013c  48bc              LDR      r0,|L7.1072|
00013e  7c80              LDRB     r0,[r0,#0x12]         ;749  ; MT2000_Rx
000140  3830              SUBS     r0,r0,#0x30           ;749
000142  49bb              LDR      r1,|L7.1072|
000144  7cc9              LDRB     r1,[r1,#0x13]         ;749
000146  392c              SUBS     r1,r1,#0x2c           ;749
000148  4088              LSLS     r0,r0,r1              ;749
00014a  49b8              LDR      r1,|L7.1068|
00014c  7188              STRB     r0,[r1,#6]            ;749
00014e  48b8              LDR      r0,|L7.1072|
000150  7d00              LDRB     r0,[r0,#0x14]         ;750
000152  3830              SUBS     r0,r0,#0x30           ;750
000154  49b6              LDR      r1,|L7.1072|
000156  7d49              LDRB     r1,[r1,#0x15]         ;750
000158  392c              SUBS     r1,r1,#0x2c           ;750
00015a  4088              LSLS     r0,r0,r1              ;750
00015c  b2c1              UXTB     r1,r0                 ;750
00015e  48b3              LDR      r0,|L7.1068|
000160  71c1              STRB     r1,[r0,#7]            ;750
000162  48b3              LDR      r0,|L7.1072|
000164  7d80              LDRB     r0,[r0,#0x16]         ;751
000166  3830              SUBS     r0,r0,#0x30           ;751
000168  49b1              LDR      r1,|L7.1072|
00016a  7dc9              LDRB     r1,[r1,#0x17]         ;751
00016c  392c              SUBS     r1,r1,#0x2c           ;751
00016e  4088              LSLS     r0,r0,r1              ;751
000170  b2c1              UXTB     r1,r0                 ;751
000172  48ae              LDR      r0,|L7.1068|
000174  7201              STRB     r1,[r0,#8]            ;751
000176  48ae              LDR      r0,|L7.1072|
000178  7e00              LDRB     r0,[r0,#0x18]         ;752
00017a  e000              B        |L7.382|
                  |L7.380|
00017c  e062              B        |L7.580|
                  |L7.382|
00017e  3830              SUBS     r0,r0,#0x30           ;752
000180  49ab              LDR      r1,|L7.1072|
000182  7e49              LDRB     r1,[r1,#0x19]         ;752
000184  392c              SUBS     r1,r1,#0x2c           ;752
000186  4088              LSLS     r0,r0,r1              ;752
000188  b2c1              UXTB     r1,r0                 ;752
00018a  48a8              LDR      r0,|L7.1068|
00018c  7241              STRB     r1,[r0,#9]            ;752
00018e  48a8              LDR      r0,|L7.1072|
000190  7f00              LDRB     r0,[r0,#0x1c]         ;755  ; MT2000_Rx
000192  3830              SUBS     r0,r0,#0x30           ;755
000194  49a6              LDR      r1,|L7.1072|
000196  7f49              LDRB     r1,[r1,#0x1d]         ;755
000198  392c              SUBS     r1,r1,#0x2c           ;755
00019a  4088              LSLS     r0,r0,r1              ;755
00019c  49a3              LDR      r1,|L7.1068|
00019e  7188              STRB     r0,[r1,#6]            ;755
0001a0  48a3              LDR      r0,|L7.1072|
0001a2  7f80              LDRB     r0,[r0,#0x1e]         ;756
0001a4  3830              SUBS     r0,r0,#0x30           ;756
0001a6  49a2              LDR      r1,|L7.1072|
0001a8  7fc9              LDRB     r1,[r1,#0x1f]         ;756
0001aa  392c              SUBS     r1,r1,#0x2c           ;756
0001ac  4088              LSLS     r0,r0,r1              ;756
0001ae  b2c1              UXTB     r1,r0                 ;756
0001b0  489e              LDR      r0,|L7.1068|
0001b2  71c1              STRB     r1,[r0,#7]            ;756
0001b4  489e              LDR      r0,|L7.1072|
0001b6  f8900020          LDRB     r0,[r0,#0x20]         ;757
0001ba  3830              SUBS     r0,r0,#0x30           ;757
0001bc  499c              LDR      r1,|L7.1072|
0001be  f8911021          LDRB     r1,[r1,#0x21]         ;757
0001c2  392c              SUBS     r1,r1,#0x2c           ;757
0001c4  4088              LSLS     r0,r0,r1              ;757
0001c6  b2c1              UXTB     r1,r0                 ;757
0001c8  4898              LDR      r0,|L7.1068|
0001ca  7201              STRB     r1,[r0,#8]            ;757
0001cc  4898              LDR      r0,|L7.1072|
0001ce  f8900022          LDRB     r0,[r0,#0x22]         ;758
0001d2  3830              SUBS     r0,r0,#0x30           ;758
0001d4  4996              LDR      r1,|L7.1072|
0001d6  f8911023          LDRB     r1,[r1,#0x23]         ;758
0001da  392c              SUBS     r1,r1,#0x2c           ;758
0001dc  4088              LSLS     r0,r0,r1              ;758
0001de  b2c1              UXTB     r1,r0                 ;758
0001e0  4892              LDR      r0,|L7.1068|
0001e2  7241              STRB     r1,[r0,#9]            ;758
0001e4  a803              ADD      r0,sp,#0xc            ;760
0001e6  9000              STR      r0,[sp,#0]            ;760
0001e8  4887              LDR      r0,|L7.1032|
0001ea  7800              LDRB     r0,[r0,#0]            ;760  ; System
0001ec  2334              MOVS     r3,#0x34              ;760
0001ee  4602              MOV      r2,r0                 ;760
0001f0  498e              LDR      r1,|L7.1068|
0001f2  9002              STR      r0,[sp,#8]            ;760
0001f4  9844              LDR      r0,[sp,#0x110]        ;760
0001f6  f7fffffe          BL       Data_Assemble
0001fa  2801              CMP      r0,#1                 ;760
                  |L7.508|
0001fc  d17d              BNE      |L7.762|
0001fe  f89d010c          LDRB     r0,[sp,#0x10c]        ;762
000202  4602              MOV      r2,r0                 ;762
000204  a903              ADD      r1,sp,#0xc            ;762
000206  9002              STR      r0,[sp,#8]            ;762
000208  2004              MOVS     r0,#4                 ;762
00020a  f7fffffe          BL       comSendBuf
00020e  a080              ADR      r0,|L7.1040|
000210  f7fffffe          BL       App_printf
000214  2000              MOVS     r0,#0                 ;764
000216  9002              STR      r0,[sp,#8]            ;764
000218  e00a              B        |L7.560|
                  |L7.538|
00021a  a903              ADD      r1,sp,#0xc            ;766
00021c  9802              LDR      r0,[sp,#8]            ;766
00021e  5c08              LDRB     r0,[r1,r0]            ;766
000220  4601              MOV      r1,r0                 ;766
000222  9001              STR      r0,[sp,#4]            ;766
000224  a07e              ADR      r0,|L7.1056|
000226  f7fffffe          BL       App_printf
00022a  9802              LDR      r0,[sp,#8]            ;764
00022c  1c40              ADDS     r0,r0,#1              ;764
00022e  9002              STR      r0,[sp,#8]            ;764
                  |L7.560|
000230  f89d110c          LDRB     r1,[sp,#0x10c]        ;764
000234  9802              LDR      r0,[sp,#8]            ;764
000236  4281              CMP      r1,r0                 ;764
000238  dcef              BGT      |L7.538|
00023a  a07b              ADR      r0,|L7.1064|
00023c  f7fffffe          BL       App_printf
000240  2001              MOVS     r0,#1                 ;769
                  |L7.578|
000242  e716              B        |L7.114|
                  |L7.580|
000244  9844              LDR      r0,[sp,#0x110]        ;772
000246  7800              LDRB     r0,[r0,#0]            ;772
000248  2803              CMP      r0,#3                 ;772
00024a  d133              BNE      |L7.692|
00024c  9844              LDR      r0,[sp,#0x110]        ;772
00024e  7840              LDRB     r0,[r0,#1]            ;772
000250  2802              CMP      r0,#2                 ;772
000252  d12f              BNE      |L7.692|
000254  a803              ADD      r0,sp,#0xc            ;774
000256  9000              STR      r0,[sp,#0]            ;774
000258  486b              LDR      r0,|L7.1032|
00025a  7800              LDRB     r0,[r0,#0]            ;774  ; System
00025c  2303              MOVS     r3,#3                 ;774
00025e  4602              MOV      r2,r0                 ;774
000260  4974              LDR      r1,|L7.1076|
000262  9002              STR      r0,[sp,#8]            ;774
000264  9844              LDR      r0,[sp,#0x110]        ;774
000266  f7fffffe          BL       Data_Assemble
00026a  2801              CMP      r0,#1                 ;774
                  |L7.620|
00026c  d1c6              BNE      |L7.508|
00026e  f89d010c          LDRB     r0,[sp,#0x10c]        ;776
000272  4602              MOV      r2,r0                 ;776
000274  a903              ADD      r1,sp,#0xc            ;776
000276  9002              STR      r0,[sp,#8]            ;776
000278  2004              MOVS     r0,#4                 ;776
00027a  f7fffffe          BL       comSendBuf
00027e  a064              ADR      r0,|L7.1040|
000280  f7fffffe          BL       App_printf
000284  2000              MOVS     r0,#0                 ;778
000286  9002              STR      r0,[sp,#8]            ;778
000288  e00a              B        |L7.672|
                  |L7.650|
00028a  a903              ADD      r1,sp,#0xc            ;780
00028c  9802              LDR      r0,[sp,#8]            ;780
00028e  5c08              LDRB     r0,[r1,r0]            ;780
000290  4601              MOV      r1,r0                 ;780
000292  9001              STR      r0,[sp,#4]            ;780
000294  a062              ADR      r0,|L7.1056|
000296  f7fffffe          BL       App_printf
00029a  9802              LDR      r0,[sp,#8]            ;778
00029c  1c40              ADDS     r0,r0,#1              ;778
00029e  9002              STR      r0,[sp,#8]            ;778
                  |L7.672|
0002a0  f89d110c          LDRB     r1,[sp,#0x10c]        ;778
0002a4  9802              LDR      r0,[sp,#8]            ;778
0002a6  4281              CMP      r1,r0                 ;778
0002a8  dcef              BGT      |L7.650|
0002aa  a05f              ADR      r0,|L7.1064|
0002ac  f7fffffe          BL       App_printf
0002b0  2001              MOVS     r0,#1                 ;783
0002b2  e6de              B        |L7.114|
                  |L7.692|
0002b4  9844              LDR      r0,[sp,#0x110]        ;786
0002b6  7800              LDRB     r0,[r0,#0]            ;786
0002b8  2804              CMP      r0,#4                 ;786
0002ba  d134              BNE      |L7.806|
0002bc  9844              LDR      r0,[sp,#0x110]        ;786
0002be  7840              LDRB     r0,[r0,#1]            ;786
0002c0  2802              CMP      r0,#2                 ;786
0002c2  d130              BNE      |L7.806|
0002c4  a803              ADD      r0,sp,#0xc            ;788
0002c6  9000              STR      r0,[sp,#0]            ;788
0002c8  484f              LDR      r0,|L7.1032|
0002ca  7800              LDRB     r0,[r0,#0]            ;788  ; System
0002cc  2302              MOVS     r3,#2                 ;788
0002ce  4602              MOV      r2,r0                 ;788
0002d0  4959              LDR      r1,|L7.1080|
0002d2  9002              STR      r0,[sp,#8]            ;788
0002d4  9844              LDR      r0,[sp,#0x110]        ;788
0002d6  f7fffffe          BL       Data_Assemble
0002da  2801              CMP      r0,#1                 ;788
                  |L7.732|
0002dc  d18e              BNE      |L7.508|
0002de  f89d010c          LDRB     r0,[sp,#0x10c]        ;790
0002e2  4602              MOV      r2,r0                 ;790
0002e4  a903              ADD      r1,sp,#0xc            ;790
0002e6  9002              STR      r0,[sp,#8]            ;790
0002e8  2004              MOVS     r0,#4                 ;790
0002ea  f7fffffe          BL       comSendBuf
0002ee  a048              ADR      r0,|L7.1040|
0002f0  f7fffffe          BL       App_printf
0002f4  2000              MOVS     r0,#0                 ;792
0002f6  9002              STR      r0,[sp,#8]            ;792
0002f8  e00b              B        |L7.786|
                  |L7.762|
0002fa  e191              B        |L7.1568|
                  |L7.764|
0002fc  a903              ADD      r1,sp,#0xc            ;794
0002fe  9802              LDR      r0,[sp,#8]            ;794
000300  5c08              LDRB     r0,[r1,r0]            ;794
000302  4601              MOV      r1,r0                 ;794
000304  9001              STR      r0,[sp,#4]            ;794
000306  a046              ADR      r0,|L7.1056|
000308  f7fffffe          BL       App_printf
00030c  9802              LDR      r0,[sp,#8]            ;792
00030e  1c40              ADDS     r0,r0,#1              ;792
000310  9002              STR      r0,[sp,#8]            ;792
                  |L7.786|
000312  f89d110c          LDRB     r1,[sp,#0x10c]        ;792
000316  9802              LDR      r0,[sp,#8]            ;792
000318  4281              CMP      r1,r0                 ;792
00031a  dcef              BGT      |L7.764|
00031c  a042              ADR      r0,|L7.1064|
00031e  f7fffffe          BL       App_printf
000322  2001              MOVS     r0,#1                 ;797
000324  e6a5              B        |L7.114|
                  |L7.806|
000326  9844              LDR      r0,[sp,#0x110]        ;800
000328  7800              LDRB     r0,[r0,#0]            ;800
00032a  2805              CMP      r0,#5                 ;800
00032c  d133              BNE      |L7.918|
00032e  9844              LDR      r0,[sp,#0x110]        ;800
000330  7840              LDRB     r0,[r0,#1]            ;800
000332  2802              CMP      r0,#2                 ;800
000334  d12f              BNE      |L7.918|
000336  a803              ADD      r0,sp,#0xc            ;802
000338  9000              STR      r0,[sp,#0]            ;802
00033a  4833              LDR      r0,|L7.1032|
00033c  7800              LDRB     r0,[r0,#0]            ;802  ; System
00033e  2305              MOVS     r3,#5                 ;802
000340  4602              MOV      r2,r0                 ;802
000342  493e              LDR      r1,|L7.1084|
000344  9002              STR      r0,[sp,#8]            ;802
000346  9844              LDR      r0,[sp,#0x110]        ;802
000348  f7fffffe          BL       Data_Assemble
00034c  2801              CMP      r0,#1                 ;802
00034e  d18d              BNE      |L7.620|
000350  f89d010c          LDRB     r0,[sp,#0x10c]        ;804
000354  4602              MOV      r2,r0                 ;804
000356  a903              ADD      r1,sp,#0xc            ;804
000358  9002              STR      r0,[sp,#8]            ;804
00035a  2004              MOVS     r0,#4                 ;804
00035c  f7fffffe          BL       comSendBuf
000360  a02b              ADR      r0,|L7.1040|
000362  f7fffffe          BL       App_printf
000366  2000              MOVS     r0,#0                 ;806
000368  9002              STR      r0,[sp,#8]            ;806
00036a  e00a              B        |L7.898|
                  |L7.876|
00036c  a903              ADD      r1,sp,#0xc            ;808
00036e  9802              LDR      r0,[sp,#8]            ;808
000370  5c08              LDRB     r0,[r1,r0]            ;808
000372  4601              MOV      r1,r0                 ;808
000374  9001              STR      r0,[sp,#4]            ;808
000376  a02a              ADR      r0,|L7.1056|
000378  f7fffffe          BL       App_printf
00037c  9802              LDR      r0,[sp,#8]            ;806
00037e  1c40              ADDS     r0,r0,#1              ;806
000380  9002              STR      r0,[sp,#8]            ;806
                  |L7.898|
000382  f89d110c          LDRB     r1,[sp,#0x10c]        ;806
000386  9802              LDR      r0,[sp,#8]            ;806
000388  4281              CMP      r1,r0                 ;806
00038a  dcef              BGT      |L7.876|
00038c  a026              ADR      r0,|L7.1064|
00038e  f7fffffe          BL       App_printf
000392  2001              MOVS     r0,#1                 ;811
000394  e66d              B        |L7.114|
                  |L7.918|
000396  9844              LDR      r0,[sp,#0x110]        ;814
000398  7800              LDRB     r0,[r0,#0]            ;814
00039a  2806              CMP      r0,#6                 ;814
00039c  d152              BNE      |L7.1092|
00039e  9844              LDR      r0,[sp,#0x110]        ;814
0003a0  7840              LDRB     r0,[r0,#1]            ;814
0003a2  2802              CMP      r0,#2                 ;814
0003a4  d14e              BNE      |L7.1092|
0003a6  a803              ADD      r0,sp,#0xc            ;816
0003a8  9000              STR      r0,[sp,#0]            ;816
0003aa  4817              LDR      r0,|L7.1032|
0003ac  7800              LDRB     r0,[r0,#0]            ;816  ; System
0003ae  2354              MOVS     r3,#0x54              ;816
0003b0  4602              MOV      r2,r0                 ;816
0003b2  4923              LDR      r1,|L7.1088|
0003b4  9002              STR      r0,[sp,#8]            ;816
0003b6  9844              LDR      r0,[sp,#0x110]        ;816
0003b8  f7fffffe          BL       Data_Assemble
0003bc  2801              CMP      r0,#1                 ;816
                  |L7.958|
0003be  d18d              BNE      |L7.732|
0003c0  f89d010c          LDRB     r0,[sp,#0x10c]        ;818
0003c4  4602              MOV      r2,r0                 ;818
0003c6  a903              ADD      r1,sp,#0xc            ;818
0003c8  9002              STR      r0,[sp,#8]            ;818
0003ca  2004              MOVS     r0,#4                 ;818
0003cc  f7fffffe          BL       comSendBuf
0003d0  a00f              ADR      r0,|L7.1040|
0003d2  f7fffffe          BL       App_printf
0003d6  2000              MOVS     r0,#0                 ;820
0003d8  9002              STR      r0,[sp,#8]            ;820
0003da  e00a              B        |L7.1010|
                  |L7.988|
0003dc  a903              ADD      r1,sp,#0xc            ;822
0003de  9802              LDR      r0,[sp,#8]            ;822
0003e0  5c08              LDRB     r0,[r1,r0]            ;822
0003e2  4601              MOV      r1,r0                 ;822
0003e4  9001              STR      r0,[sp,#4]            ;822
0003e6  a00e              ADR      r0,|L7.1056|
0003e8  f7fffffe          BL       App_printf
0003ec  9802              LDR      r0,[sp,#8]            ;820
0003ee  1c40              ADDS     r0,r0,#1              ;820
0003f0  9002              STR      r0,[sp,#8]            ;820
                  |L7.1010|
0003f2  f89d110c          LDRB     r1,[sp,#0x10c]        ;820
0003f6  9802              LDR      r0,[sp,#8]            ;820
0003f8  4281              CMP      r1,r0                 ;820
0003fa  dcef              BGT      |L7.988|
0003fc  a00a              ADR      r0,|L7.1064|
0003fe  f7fffffe          BL       App_printf
000402  2001              MOVS     r0,#1                 ;825
000404  e635              B        |L7.114|
000406  0000              DCW      0x0000
                  |L7.1032|
                          DCD      System
                  |L7.1036|
                          DCD      Alarm_backPC
                  |L7.1040|
000410  434f4d5f          DCB      "COM_buffer: ",0
000414  62756666
000418  65723a20
00041c  00      
00041d  00                DCB      0
00041e  00                DCB      0
00041f  00                DCB      0
                  |L7.1056|
000420  25303278          DCB      "%02x ",0
000424  2000    
000426  00                DCB      0
000427  00                DCB      0
                  |L7.1064|
000428  0d0a00            DCB      "\r\n",0
00042b  00                DCB      0
                  |L7.1068|
                          DCD      Work_paraBack
                  |L7.1072|
                          DCD      MT2000_Rx
                  |L7.1076|
                          DCD      Trans_openBack
                  |L7.1080|
                          DCD      Trans_stopBack
                  |L7.1084|
                          DCD      DisalarmBack
                  |L7.1088|
                          DCD      Alarm_historyBack
                  |L7.1092|
000444  9844              LDR      r0,[sp,#0x110]        ;828
000446  7800              LDRB     r0,[r0,#0]            ;828
000448  2807              CMP      r0,#7                 ;828
00044a  d136              BNE      |L7.1210|
00044c  9844              LDR      r0,[sp,#0x110]        ;828
00044e  7840              LDRB     r0,[r0,#1]            ;828
000450  2802              CMP      r0,#2                 ;828
000452  d132              BNE      |L7.1210|
000454  a803              ADD      r0,sp,#0xc            ;830
000456  9000              STR      r0,[sp,#0]            ;830
000458  48fd              LDR      r0,|L7.2128|
00045a  7800              LDRB     r0,[r0,#0]            ;830  ; System
00045c  2302              MOVS     r3,#2                 ;830
00045e  4602              MOV      r2,r0                 ;830
000460  49fc              LDR      r1,|L7.2132|
000462  9002              STR      r0,[sp,#8]            ;830
000464  9844              LDR      r0,[sp,#0x110]        ;830
000466  f7fffffe          BL       Data_Assemble
00046a  2801              CMP      r0,#1                 ;830
                  |L7.1132|
00046c  d1a7              BNE      |L7.958|
00046e  f89d010c          LDRB     r0,[sp,#0x10c]        ;832
000472  4602              MOV      r2,r0                 ;832
000474  a903              ADD      r1,sp,#0xc            ;832
000476  9002              STR      r0,[sp,#8]            ;832
000478  2004              MOVS     r0,#4                 ;832
00047a  f7fffffe          BL       comSendBuf
00047e  f2af0070          ADR      r0,|L7.1040|
000482  f7fffffe          BL       App_printf
000486  2000              MOVS     r0,#0                 ;834
000488  9002              STR      r0,[sp,#8]            ;834
00048a  e00b              B        |L7.1188|
                  |L7.1164|
00048c  a903              ADD      r1,sp,#0xc            ;836
00048e  9802              LDR      r0,[sp,#8]            ;836
000490  5c08              LDRB     r0,[r1,r0]            ;836
000492  4601              MOV      r1,r0                 ;836
000494  9001              STR      r0,[sp,#4]            ;836
000496  f2af0078          ADR      r0,|L7.1056|
00049a  f7fffffe          BL       App_printf
00049e  9802              LDR      r0,[sp,#8]            ;834
0004a0  1c40              ADDS     r0,r0,#1              ;834
0004a2  9002              STR      r0,[sp,#8]            ;834
                  |L7.1188|
0004a4  f89d110c          LDRB     r1,[sp,#0x10c]        ;834
0004a8  9802              LDR      r0,[sp,#8]            ;834
0004aa  4281              CMP      r1,r0                 ;834
0004ac  dcee              BGT      |L7.1164|
0004ae  f2af0088          ADR      r0,|L7.1064|
0004b2  f7fffffe          BL       App_printf
0004b6  2001              MOVS     r0,#1                 ;839
0004b8  e5db              B        |L7.114|
                  |L7.1210|
0004ba  9844              LDR      r0,[sp,#0x110]        ;842
0004bc  7800              LDRB     r0,[r0,#0]            ;842
0004be  2808              CMP      r0,#8                 ;842
0004c0  d136              BNE      |L7.1328|
0004c2  9844              LDR      r0,[sp,#0x110]        ;842
0004c4  7840              LDRB     r0,[r0,#1]            ;842
0004c6  2802              CMP      r0,#2                 ;842
0004c8  d132              BNE      |L7.1328|
0004ca  a803              ADD      r0,sp,#0xc            ;844
0004cc  9000              STR      r0,[sp,#0]            ;844
0004ce  48e0              LDR      r0,|L7.2128|
0004d0  7800              LDRB     r0,[r0,#0]            ;844  ; System
0004d2  2302              MOVS     r3,#2                 ;844
0004d4  4602              MOV      r2,r0                 ;844
0004d6  49e0              LDR      r1,|L7.2136|
0004d8  9002              STR      r0,[sp,#8]            ;844
0004da  9844              LDR      r0,[sp,#0x110]        ;844
0004dc  f7fffffe          BL       Data_Assemble
0004e0  2801              CMP      r0,#1                 ;844
0004e2  d1c3              BNE      |L7.1132|
0004e4  f89d010c          LDRB     r0,[sp,#0x10c]        ;846
0004e8  4602              MOV      r2,r0                 ;846
0004ea  a903              ADD      r1,sp,#0xc            ;846
0004ec  9002              STR      r0,[sp,#8]            ;846
0004ee  2004              MOVS     r0,#4                 ;846
0004f0  f7fffffe          BL       comSendBuf
0004f4  f2af00e8          ADR      r0,|L7.1040|
0004f8  f7fffffe          BL       App_printf
0004fc  2000              MOVS     r0,#0                 ;848
0004fe  9002              STR      r0,[sp,#8]            ;848
000500  e00b              B        |L7.1306|
                  |L7.1282|
000502  a903              ADD      r1,sp,#0xc            ;850
000504  9802              LDR      r0,[sp,#8]            ;850
000506  5c08              LDRB     r0,[r1,r0]            ;850
000508  4601              MOV      r1,r0                 ;850
00050a  9001              STR      r0,[sp,#4]            ;850
00050c  f2af00f0          ADR      r0,|L7.1056|
000510  f7fffffe          BL       App_printf
000514  9802              LDR      r0,[sp,#8]            ;848
000516  1c40              ADDS     r0,r0,#1              ;848
000518  9002              STR      r0,[sp,#8]            ;848
                  |L7.1306|
00051a  f89d110c          LDRB     r1,[sp,#0x10c]        ;848
00051e  9802              LDR      r0,[sp,#8]            ;848
000520  4281              CMP      r1,r0                 ;848
000522  dcee              BGT      |L7.1282|
000524  f2af1000          ADR      r0,|L7.1064|
000528  f7fffffe          BL       App_printf
00052c  2001              MOVS     r0,#1                 ;853
00052e  e5a0              B        |L7.114|
                  |L7.1328|
000530  9844              LDR      r0,[sp,#0x110]        ;856
000532  7800              LDRB     r0,[r0,#0]            ;856
000534  2809              CMP      r0,#9                 ;856
                  |L7.1334|
000536  d172              BNE      |L7.1566|
000538  9844              LDR      r0,[sp,#0x110]        ;856
00053a  7840              LDRB     r0,[r0,#1]            ;856
00053c  2802              CMP      r0,#2                 ;856
00053e  d1fa              BNE      |L7.1334|
000540  a0c6              ADR      r0,|L7.2140|
000542  f7fffffe          BL       App_printf
000546  48c2              LDR      r0,|L7.2128|
000548  7b80              LDRB     r0,[r0,#0xe]          ;859  ; System
00054a  280d              CMP      r0,#0xd               ;859
00054c  d268              BCS      |L7.1568|
00054e  e8dff000          TBB      [pc,r0]               ;859
000552  071f              DCB      0x07,0x1f
000554  374f6981          DCB      0x37,0x4f,0x69,0x81
000558  99b1c9e1          DCB      0x99,0xb1,0xc9,0xe1
00055c  fcf9f800          DCB      0xfc,0xf9,0xf8,0x00
000560  a803              ADD      r0,sp,#0xc            ;863
000562  9000              STR      r0,[sp,#0]            ;863
000564  48ba              LDR      r0,|L7.2128|
000566  7800              LDRB     r0,[r0,#0]            ;863  ; System
000568  2370              MOVS     r3,#0x70              ;863
00056a  4602              MOV      r2,r0                 ;863
00056c  49c2              LDR      r1,|L7.2168|
00056e  9002              STR      r0,[sp,#8]            ;863
000570  9844              LDR      r0,[sp,#0x110]        ;863
000572  f7fffffe          BL       Data_Assemble
000576  2801              CMP      r0,#1                 ;863
000578  d109              BNE      |L7.1422|
00057a  f89d010c          LDRB     r0,[sp,#0x10c]        ;865
00057e  4602              MOV      r2,r0                 ;865
000580  a903              ADD      r1,sp,#0xc            ;865
000582  9002              STR      r0,[sp,#8]            ;865
000584  2004              MOVS     r0,#4                 ;865
000586  f7fffffe          BL       comSendBuf
00058a  2001              MOVS     r0,#1                 ;866
00058c  e571              B        |L7.114|
                  |L7.1422|
00058e  bf00              NOP                            ;869
000590  a803              ADD      r0,sp,#0xc            ;871
000592  9000              STR      r0,[sp,#0]            ;871
000594  48ae              LDR      r0,|L7.2128|
000596  7800              LDRB     r0,[r0,#0]            ;871  ; System
000598  2370              MOVS     r3,#0x70              ;871
00059a  4602              MOV      r2,r0                 ;871
00059c  49b7              LDR      r1,|L7.2172|
00059e  9002              STR      r0,[sp,#8]            ;871
0005a0  9844              LDR      r0,[sp,#0x110]        ;871
0005a2  f7fffffe          BL       Data_Assemble
0005a6  2801              CMP      r0,#1                 ;871
0005a8  d109              BNE      |L7.1470|
0005aa  f89d010c          LDRB     r0,[sp,#0x10c]        ;873
0005ae  4602              MOV      r2,r0                 ;873
0005b0  a903              ADD      r1,sp,#0xc            ;873
0005b2  9002              STR      r0,[sp,#8]            ;873
0005b4  2004              MOVS     r0,#4                 ;873
0005b6  f7fffffe          BL       comSendBuf
0005ba  2001              MOVS     r0,#1                 ;874
0005bc  e559              B        |L7.114|
                  |L7.1470|
0005be  bf00              NOP                            ;877
0005c0  a803              ADD      r0,sp,#0xc            ;879
0005c2  9000              STR      r0,[sp,#0]            ;879
0005c4  48a2              LDR      r0,|L7.2128|
0005c6  7800              LDRB     r0,[r0,#0]            ;879  ; System
0005c8  2370              MOVS     r3,#0x70              ;879
0005ca  4602              MOV      r2,r0                 ;879
0005cc  49ac              LDR      r1,|L7.2176|
0005ce  9002              STR      r0,[sp,#8]            ;879
0005d0  9844              LDR      r0,[sp,#0x110]        ;879
0005d2  f7fffffe          BL       Data_Assemble
0005d6  2801              CMP      r0,#1                 ;879
0005d8  d109              BNE      |L7.1518|
0005da  f89d010c          LDRB     r0,[sp,#0x10c]        ;881
0005de  4602              MOV      r2,r0                 ;881
0005e0  a903              ADD      r1,sp,#0xc            ;881
0005e2  9002              STR      r0,[sp,#8]            ;881
0005e4  2004              MOVS     r0,#4                 ;881
0005e6  f7fffffe          BL       comSendBuf
0005ea  2001              MOVS     r0,#1                 ;882
0005ec  e541              B        |L7.114|
                  |L7.1518|
0005ee  bf00              NOP                            ;885
0005f0  a803              ADD      r0,sp,#0xc            ;887
0005f2  9000              STR      r0,[sp,#0]            ;887
0005f4  4896              LDR      r0,|L7.2128|
0005f6  7800              LDRB     r0,[r0,#0]            ;887  ; System
0005f8  2370              MOVS     r3,#0x70              ;887
0005fa  4602              MOV      r2,r0                 ;887
0005fc  49a1              LDR      r1,|L7.2180|
0005fe  9002              STR      r0,[sp,#8]            ;887
000600  9844              LDR      r0,[sp,#0x110]        ;887
000602  f7fffffe          BL       Data_Assemble
000606  2801              CMP      r0,#1                 ;887
000608  d10b              BNE      |L7.1570|
00060a  f89d010c          LDRB     r0,[sp,#0x10c]        ;889
00060e  4602              MOV      r2,r0                 ;889
000610  a903              ADD      r1,sp,#0xc            ;889
000612  9002              STR      r0,[sp,#8]            ;889
000614  2004              MOVS     r0,#4                 ;889
000616  f7fffffe          BL       comSendBuf
00061a  2001              MOVS     r0,#1                 ;890
00061c  e529              B        |L7.114|
                  |L7.1566|
00061e  e0db              B        |L7.2008|
                  |L7.1568|
000620  e115              B        |L7.2126|
                  |L7.1570|
000622  bf00              NOP                            ;893
000624  a803              ADD      r0,sp,#0xc            ;895
000626  9000              STR      r0,[sp,#0]            ;895
000628  4889              LDR      r0,|L7.2128|
00062a  7800              LDRB     r0,[r0,#0]            ;895  ; System
00062c  2370              MOVS     r3,#0x70              ;895
00062e  4602              MOV      r2,r0                 ;895
000630  4995              LDR      r1,|L7.2184|
000632  9002              STR      r0,[sp,#8]            ;895
000634  9844              LDR      r0,[sp,#0x110]        ;895
000636  f7fffffe          BL       Data_Assemble
00063a  2801              CMP      r0,#1                 ;895
00063c  d109              BNE      |L7.1618|
00063e  f89d010c          LDRB     r0,[sp,#0x10c]        ;897
000642  4602              MOV      r2,r0                 ;897
000644  a903              ADD      r1,sp,#0xc            ;897
000646  9002              STR      r0,[sp,#8]            ;897
000648  2004              MOVS     r0,#4                 ;897
00064a  f7fffffe          BL       comSendBuf
00064e  2001              MOVS     r0,#1                 ;898
000650  e50f              B        |L7.114|
                  |L7.1618|
000652  bf00              NOP                            ;901
000654  a803              ADD      r0,sp,#0xc            ;903
000656  9000              STR      r0,[sp,#0]            ;903
000658  487d              LDR      r0,|L7.2128|
00065a  7800              LDRB     r0,[r0,#0]            ;903  ; System
00065c  2370              MOVS     r3,#0x70              ;903
00065e  4602              MOV      r2,r0                 ;903
000660  498a              LDR      r1,|L7.2188|
000662  9002              STR      r0,[sp,#8]            ;903
000664  9844              LDR      r0,[sp,#0x110]        ;903
000666  f7fffffe          BL       Data_Assemble
00066a  2801              CMP      r0,#1                 ;903
00066c  d109              BNE      |L7.1666|
00066e  f89d010c          LDRB     r0,[sp,#0x10c]        ;905
000672  4602              MOV      r2,r0                 ;905
000674  a903              ADD      r1,sp,#0xc            ;905
000676  9002              STR      r0,[sp,#8]            ;905
000678  2004              MOVS     r0,#4                 ;905
00067a  f7fffffe          BL       comSendBuf
00067e  2001              MOVS     r0,#1                 ;906
000680  e4f7              B        |L7.114|
                  |L7.1666|
000682  bf00              NOP                            ;909
000684  a803              ADD      r0,sp,#0xc            ;911
000686  9000              STR      r0,[sp,#0]            ;911
000688  4871              LDR      r0,|L7.2128|
00068a  7800              LDRB     r0,[r0,#0]            ;911  ; System
00068c  2370              MOVS     r3,#0x70              ;911
00068e  4602              MOV      r2,r0                 ;911
000690  497f              LDR      r1,|L7.2192|
000692  9002              STR      r0,[sp,#8]            ;911
000694  9844              LDR      r0,[sp,#0x110]        ;911
000696  f7fffffe          BL       Data_Assemble
00069a  2801              CMP      r0,#1                 ;911
00069c  d109              BNE      |L7.1714|
00069e  f89d010c          LDRB     r0,[sp,#0x10c]        ;913
0006a2  4602              MOV      r2,r0                 ;913
0006a4  a903              ADD      r1,sp,#0xc            ;913
0006a6  9002              STR      r0,[sp,#8]            ;913
0006a8  2004              MOVS     r0,#4                 ;913
0006aa  f7fffffe          BL       comSendBuf
0006ae  2001              MOVS     r0,#1                 ;914
0006b0  e4df              B        |L7.114|
                  |L7.1714|
0006b2  bf00              NOP                            ;917
0006b4  a803              ADD      r0,sp,#0xc            ;919
0006b6  9000              STR      r0,[sp,#0]            ;919
0006b8  4865              LDR      r0,|L7.2128|
0006ba  7800              LDRB     r0,[r0,#0]            ;919  ; System
0006bc  2370              MOVS     r3,#0x70              ;919
0006be  4602              MOV      r2,r0                 ;919
0006c0  4974              LDR      r1,|L7.2196|
0006c2  9002              STR      r0,[sp,#8]            ;919
0006c4  9844              LDR      r0,[sp,#0x110]        ;919
0006c6  f7fffffe          BL       Data_Assemble
0006ca  2801              CMP      r0,#1                 ;919
0006cc  d109              BNE      |L7.1762|
0006ce  f89d010c          LDRB     r0,[sp,#0x10c]        ;921
0006d2  4602              MOV      r2,r0                 ;921
0006d4  a903              ADD      r1,sp,#0xc            ;921
0006d6  9002              STR      r0,[sp,#8]            ;921
0006d8  2004              MOVS     r0,#4                 ;921
0006da  f7fffffe          BL       comSendBuf
0006de  2001              MOVS     r0,#1                 ;922
0006e0  e4c7              B        |L7.114|
                  |L7.1762|
0006e2  bf00              NOP                            ;925
0006e4  a803              ADD      r0,sp,#0xc            ;927
0006e6  9000              STR      r0,[sp,#0]            ;927
0006e8  4859              LDR      r0,|L7.2128|
0006ea  7800              LDRB     r0,[r0,#0]            ;927  ; System
0006ec  2370              MOVS     r3,#0x70              ;927
0006ee  4602              MOV      r2,r0                 ;927
0006f0  4969              LDR      r1,|L7.2200|
0006f2  9002              STR      r0,[sp,#8]            ;927
0006f4  9844              LDR      r0,[sp,#0x110]        ;927
0006f6  f7fffffe          BL       Data_Assemble
0006fa  2801              CMP      r0,#1                 ;927
0006fc  d109              BNE      |L7.1810|
0006fe  f89d010c          LDRB     r0,[sp,#0x10c]        ;929
000702  4602              MOV      r2,r0                 ;929
000704  a903              ADD      r1,sp,#0xc            ;929
000706  9002              STR      r0,[sp,#8]            ;929
000708  2004              MOVS     r0,#4                 ;929
00070a  f7fffffe          BL       comSendBuf
00070e  2001              MOVS     r0,#1                 ;930
000710  e4af              B        |L7.114|
                  |L7.1810|
000712  bf00              NOP                            ;933
000714  a803              ADD      r0,sp,#0xc            ;935
000716  9000              STR      r0,[sp,#0]            ;935
000718  484d              LDR      r0,|L7.2128|
00071a  7800              LDRB     r0,[r0,#0]            ;935  ; System
00071c  2370              MOVS     r3,#0x70              ;935
00071e  4602              MOV      r2,r0                 ;935
000720  495e              LDR      r1,|L7.2204|
000722  9002              STR      r0,[sp,#8]            ;935
000724  9844              LDR      r0,[sp,#0x110]        ;935
000726  f7fffffe          BL       Data_Assemble
00072a  2801              CMP      r0,#1                 ;935
00072c  d10c              BNE      |L7.1864|
00072e  f89d010c          LDRB     r0,[sp,#0x10c]        ;937
000732  4602              MOV      r2,r0                 ;937
000734  a903              ADD      r1,sp,#0xc            ;937
000736  9002              STR      r0,[sp,#8]            ;937
000738  2004              MOVS     r0,#4                 ;937
00073a  f7fffffe          BL       comSendBuf
00073e  2001              MOVS     r0,#1                 ;938
000740  e497              B        |L7.114|
000742  e032              B        |L7.1962|
000744  e019              B        |L7.1914|
000746  e000              B        |L7.1866|
                  |L7.1864|
000748  bf00              NOP                            ;941
                  |L7.1866|
00074a  a803              ADD      r0,sp,#0xc            ;943
00074c  9000              STR      r0,[sp,#0]            ;943
00074e  4840              LDR      r0,|L7.2128|
000750  7800              LDRB     r0,[r0,#0]            ;943  ; System
000752  2370              MOVS     r3,#0x70              ;943
000754  4602              MOV      r2,r0                 ;943
000756  4952              LDR      r1,|L7.2208|
000758  9002              STR      r0,[sp,#8]            ;943
00075a  9844              LDR      r0,[sp,#0x110]        ;943
00075c  f7fffffe          BL       Data_Assemble
000760  2801              CMP      r0,#1                 ;943
000762  d109              BNE      |L7.1912|
000764  f89d010c          LDRB     r0,[sp,#0x10c]        ;945
000768  4602              MOV      r2,r0                 ;945
00076a  a903              ADD      r1,sp,#0xc            ;945
00076c  9002              STR      r0,[sp,#8]            ;945
00076e  2004              MOVS     r0,#4                 ;945
000770  f7fffffe          BL       comSendBuf
000774  2001              MOVS     r0,#1                 ;946
000776  e47c              B        |L7.114|
                  |L7.1912|
000778  bf00              NOP                            ;949
                  |L7.1914|
00077a  a803              ADD      r0,sp,#0xc            ;951
00077c  9000              STR      r0,[sp,#0]            ;951
00077e  4834              LDR      r0,|L7.2128|
000780  7800              LDRB     r0,[r0,#0]            ;951  ; System
000782  2370              MOVS     r3,#0x70              ;951
000784  4602              MOV      r2,r0                 ;951
000786  4947              LDR      r1,|L7.2212|
000788  9002              STR      r0,[sp,#8]            ;951
00078a  9844              LDR      r0,[sp,#0x110]        ;951
00078c  f7fffffe          BL       Data_Assemble
000790  2801              CMP      r0,#1                 ;951
000792  d109              BNE      |L7.1960|
000794  f89d010c          LDRB     r0,[sp,#0x10c]        ;953
000798  4602              MOV      r2,r0                 ;953
00079a  a903              ADD      r1,sp,#0xc            ;953
00079c  9002              STR      r0,[sp,#8]            ;953
00079e  2004              MOVS     r0,#4                 ;953
0007a0  f7fffffe          BL       comSendBuf
0007a4  2001              MOVS     r0,#1                 ;954
0007a6  e464              B        |L7.114|
                  |L7.1960|
0007a8  bf00              NOP                            ;957
                  |L7.1962|
0007aa  a803              ADD      r0,sp,#0xc            ;959
0007ac  9000              STR      r0,[sp,#0]            ;959
0007ae  4828              LDR      r0,|L7.2128|
0007b0  7800              LDRB     r0,[r0,#0]            ;959  ; System
0007b2  2370              MOVS     r3,#0x70              ;959
0007b4  4602              MOV      r2,r0                 ;959
0007b6  493c              LDR      r1,|L7.2216|
0007b8  9002              STR      r0,[sp,#8]            ;959
0007ba  9844              LDR      r0,[sp,#0x110]        ;959
0007bc  f7fffffe          BL       Data_Assemble
0007c0  2801              CMP      r0,#1                 ;959
                  |L7.1986|
0007c2  d144              BNE      |L7.2126|
0007c4  f89d010c          LDRB     r0,[sp,#0x10c]        ;961
0007c8  4602              MOV      r2,r0                 ;961
0007ca  a903              ADD      r1,sp,#0xc            ;961
0007cc  9002              STR      r0,[sp,#8]            ;961
0007ce  2004              MOVS     r0,#4                 ;961
0007d0  f7fffffe          BL       comSendBuf
0007d4  2001              MOVS     r0,#1                 ;962
0007d6  e44c              B        |L7.114|
                  |L7.2008|
0007d8  9844              LDR      r0,[sp,#0x110]        ;975
0007da  7800              LDRB     r0,[r0,#0]            ;975
0007dc  280a              CMP      r0,#0xa               ;975
0007de  d168              BNE      |L7.2226|
0007e0  9844              LDR      r0,[sp,#0x110]        ;975
0007e2  7840              LDRB     r0,[r0,#1]            ;975
0007e4  2802              CMP      r0,#2                 ;975
0007e6  d164              BNE      |L7.2226|
0007e8  a803              ADD      r0,sp,#0xc            ;977
0007ea  9000              STR      r0,[sp,#0]            ;977
0007ec  4818              LDR      r0,|L7.2128|
0007ee  7800              LDRB     r0,[r0,#0]            ;977  ; System
0007f0  2302              MOVS     r3,#2                 ;977
0007f2  4602              MOV      r2,r0                 ;977
0007f4  492d              LDR      r1,|L7.2220|
0007f6  9002              STR      r0,[sp,#8]            ;977
0007f8  9844              LDR      r0,[sp,#0x110]        ;977
0007fa  f7fffffe          BL       Data_Assemble
0007fe  2801              CMP      r0,#1                 ;977
000800  d1df              BNE      |L7.1986|
000802  f89d010c          LDRB     r0,[sp,#0x10c]        ;979
000806  4602              MOV      r2,r0                 ;979
000808  a903              ADD      r1,sp,#0xc            ;979
00080a  9002              STR      r0,[sp,#8]            ;979
00080c  2004              MOVS     r0,#4                 ;979
00080e  f7fffffe          BL       comSendBuf
000812  f2af4004          ADR      r0,|L7.1040|
000816  f7fffffe          BL       App_printf
00081a  2000              MOVS     r0,#0                 ;981
00081c  9002              STR      r0,[sp,#8]            ;981
00081e  e00b              B        |L7.2104|
                  |L7.2080|
000820  a903              ADD      r1,sp,#0xc            ;983
000822  9802              LDR      r0,[sp,#8]            ;983
000824  5c08              LDRB     r0,[r1,r0]            ;983
000826  4601              MOV      r1,r0                 ;983
000828  9001              STR      r0,[sp,#4]            ;983
00082a  f2af400c          ADR      r0,|L7.1056|
00082e  f7fffffe          BL       App_printf
000832  9802              LDR      r0,[sp,#8]            ;981
000834  1c40              ADDS     r0,r0,#1              ;981
000836  9002              STR      r0,[sp,#8]            ;981
                  |L7.2104|
000838  f89d110c          LDRB     r1,[sp,#0x10c]        ;981
00083c  9802              LDR      r0,[sp,#8]            ;981
00083e  4281              CMP      r1,r0                 ;981
000840  dcee              BGT      |L7.2080|
000842  f2af401c          ADR      r0,|L7.1064|
000846  f7fffffe          BL       App_printf
00084a  2001              MOVS     r0,#1                 ;986
00084c  e411              B        |L7.114|
                  |L7.2126|
00084e  e0c2              B        |L7.2518|
                  |L7.2128|
                          DCD      System
                  |L7.2132|
                          DCD      Power_onBack
                  |L7.2136|
                          DCD      Power_offBack
                  |L7.2140|
00085c  434f4d5f          DCB      "COM_buffer sweepning: \r\n",0
000860  62756666
000864  65722073
000868  77656570
00086c  6e696e67
000870  3a200d0a
000874  00      
000875  00                DCB      0
000876  00                DCB      0
000877  00                DCB      0
                  |L7.2168|
                          DCD      Scan_FrqBack
                  |L7.2172|
                          DCD      Scan_FrqBack1
                  |L7.2176|
                          DCD      Scan_FrqBack2
                  |L7.2180|
                          DCD      Scan_FrqBack3
                  |L7.2184|
                          DCD      Scan_FrqBack4
                  |L7.2188|
                          DCD      Scan_FrqBack5
                  |L7.2192|
                          DCD      Scan_FrqBack6
                  |L7.2196|
                          DCD      Scan_FrqBack7
                  |L7.2200|
                          DCD      Scan_FrqBack8
                  |L7.2204|
                          DCD      Scan_FrqBack9
                  |L7.2208|
                          DCD      Scan_FrqBack10
                  |L7.2212|
                          DCD      Scan_FrqBack11
                  |L7.2216|
                          DCD      Scan_FrqBack12
                  |L7.2220|
                          DCD      Sacn_stopBack
0008b0  e7ff              B        |L7.2226|
                  |L7.2226|
0008b2  9844              LDR      r0,[sp,#0x110]        ;989
0008b4  7800              LDRB     r0,[r0,#0]            ;989
0008b6  280b              CMP      r0,#0xb               ;989
0008b8  d136              BNE      |L7.2344|
0008ba  9844              LDR      r0,[sp,#0x110]        ;989
0008bc  7840              LDRB     r0,[r0,#1]            ;989
0008be  2802              CMP      r0,#2                 ;989
0008c0  d132              BNE      |L7.2344|
0008c2  a803              ADD      r0,sp,#0xc            ;991
0008c4  9000              STR      r0,[sp,#0]            ;991
0008c6  4855              LDR      r0,|L7.2588|
0008c8  7800              LDRB     r0,[r0,#0]            ;991  ; System
0008ca  2302              MOVS     r3,#2                 ;991
0008cc  4602              MOV      r2,r0                 ;991
0008ce  4954              LDR      r1,|L7.2592|
0008d0  9002              STR      r0,[sp,#8]            ;991
0008d2  9844              LDR      r0,[sp,#0x110]        ;991
0008d4  f7fffffe          BL       Data_Assemble
0008d8  2801              CMP      r0,#1                 ;991
0008da  d17c              BNE      |L7.2518|
0008dc  f89d010c          LDRB     r0,[sp,#0x10c]        ;993
0008e0  4602              MOV      r2,r0                 ;993
0008e2  a903              ADD      r1,sp,#0xc            ;993
0008e4  9002              STR      r0,[sp,#8]            ;993
0008e6  2004              MOVS     r0,#4                 ;993
0008e8  f7fffffe          BL       comSendBuf
0008ec  f2af40e0          ADR      r0,|L7.1040|
0008f0  f7fffffe          BL       App_printf
0008f4  2000              MOVS     r0,#0                 ;995
0008f6  9002              STR      r0,[sp,#8]            ;995
0008f8  e00b              B        |L7.2322|
                  |L7.2298|
0008fa  a903              ADD      r1,sp,#0xc            ;997
0008fc  9802              LDR      r0,[sp,#8]            ;997
0008fe  5c08              LDRB     r0,[r1,r0]            ;997
000900  4601              MOV      r1,r0                 ;997
000902  9001              STR      r0,[sp,#4]            ;997
000904  f2af40e8          ADR      r0,|L7.1056|
000908  f7fffffe          BL       App_printf
00090c  9802              LDR      r0,[sp,#8]            ;995
00090e  1c40              ADDS     r0,r0,#1              ;995
000910  9002              STR      r0,[sp,#8]            ;995
                  |L7.2322|
000912  f89d110c          LDRB     r1,[sp,#0x10c]        ;995
000916  9802              LDR      r0,[sp,#8]            ;995
000918  4281              CMP      r1,r0                 ;995
00091a  dcee              BGT      |L7.2298|
00091c  f2af40f8          ADR      r0,|L7.1064|
000920  f7fffffe          BL       App_printf
000924  2001              MOVS     r0,#1                 ;1000
000926  e48c              B        |L7.578|
                  |L7.2344|
000928  9844              LDR      r0,[sp,#0x110]        ;1003
00092a  7800              LDRB     r0,[r0,#0]            ;1003
00092c  280c              CMP      r0,#0xc               ;1003
00092e  d136              BNE      |L7.2462|
000930  9844              LDR      r0,[sp,#0x110]        ;1003
000932  7840              LDRB     r0,[r0,#1]            ;1003
000934  2802              CMP      r0,#2                 ;1003
000936  d132              BNE      |L7.2462|
000938  a803              ADD      r0,sp,#0xc            ;1005
00093a  9000              STR      r0,[sp,#0]            ;1005
00093c  4837              LDR      r0,|L7.2588|
00093e  7800              LDRB     r0,[r0,#0]            ;1005  ; System
000940  2302              MOVS     r3,#2                 ;1005
000942  4602              MOV      r2,r0                 ;1005
000944  4937              LDR      r1,|L7.2596|
000946  9002              STR      r0,[sp,#8]            ;1005
000948  9844              LDR      r0,[sp,#0x110]        ;1005
00094a  f7fffffe          BL       Data_Assemble
00094e  2801              CMP      r0,#1                 ;1005
000950  d162              BNE      |L7.2584|
000952  f89d010c          LDRB     r0,[sp,#0x10c]        ;1007
000956  4602              MOV      r2,r0                 ;1007
000958  a903              ADD      r1,sp,#0xc            ;1007
00095a  9002              STR      r0,[sp,#8]            ;1007
00095c  2004              MOVS     r0,#4                 ;1007
00095e  f7fffffe          BL       comSendBuf
000962  f2af5054          ADR      r0,|L7.1040|
000966  f7fffffe          BL       App_printf
00096a  2000              MOVS     r0,#0                 ;1009
00096c  9002              STR      r0,[sp,#8]            ;1009
00096e  e00b              B        |L7.2440|
                  |L7.2416|
000970  a903              ADD      r1,sp,#0xc            ;1011
000972  9802              LDR      r0,[sp,#8]            ;1011
000974  5c08              LDRB     r0,[r1,r0]            ;1011
000976  4601              MOV      r1,r0                 ;1011
000978  9001              STR      r0,[sp,#4]            ;1011
00097a  f2af505c          ADR      r0,|L7.1056|
00097e  f7fffffe          BL       App_printf
000982  9802              LDR      r0,[sp,#8]            ;1009
000984  1c40              ADDS     r0,r0,#1              ;1009
000986  9002              STR      r0,[sp,#8]            ;1009
                  |L7.2440|
000988  f89d110c          LDRB     r1,[sp,#0x10c]        ;1009
00098c  9802              LDR      r0,[sp,#8]            ;1009
00098e  4281              CMP      r1,r0                 ;1009
000990  dcee              BGT      |L7.2416|
000992  f2af506c          ADR      r0,|L7.1064|
000996  f7fffffe          BL       App_printf
00099a  2001              MOVS     r0,#1                 ;1014
00099c  e451              B        |L7.578|
                  |L7.2462|
00099e  9844              LDR      r0,[sp,#0x110]        ;1017
0009a0  7800              LDRB     r0,[r0,#0]            ;1017
0009a2  280d              CMP      r0,#0xd               ;1017
0009a4  d138              BNE      |L7.2584|
0009a6  9844              LDR      r0,[sp,#0x110]        ;1017
0009a8  7840              LDRB     r0,[r0,#1]            ;1017
0009aa  2802              CMP      r0,#2                 ;1017
0009ac  d134              BNE      |L7.2584|
0009ae  a803              ADD      r0,sp,#0xc            ;1019
0009b0  9000              STR      r0,[sp,#0]            ;1019
0009b2  481a              LDR      r0,|L7.2588|
0009b4  7800              LDRB     r0,[r0,#0]            ;1019  ; System
0009b6  2302              MOVS     r3,#2                 ;1019
0009b8  4602              MOV      r2,r0                 ;1019
0009ba  491b              LDR      r1,|L7.2600|
0009bc  9002              STR      r0,[sp,#8]            ;1019
0009be  9844              LDR      r0,[sp,#0x110]        ;1019
0009c0  f7fffffe          BL       Data_Assemble
0009c4  2801              CMP      r0,#1                 ;1019
0009c6  d127              BNE      |L7.2584|
0009c8  f89d010c          LDRB     r0,[sp,#0x10c]        ;1021
0009cc  4602              MOV      r2,r0                 ;1021
0009ce  a903              ADD      r1,sp,#0xc            ;1021
0009d0  9002              STR      r0,[sp,#8]            ;1021
0009d2  2004              MOVS     r0,#4                 ;1021
0009d4  e000              B        |L7.2520|
                  |L7.2518|
0009d6  e01f              B        |L7.2584|
                  |L7.2520|
0009d8  f7fffffe          BL       comSendBuf
0009dc  f2af50d0          ADR      r0,|L7.1040|
0009e0  f7fffffe          BL       App_printf
0009e4  2000              MOVS     r0,#0                 ;1023
0009e6  9002              STR      r0,[sp,#8]            ;1023
0009e8  e00b              B        |L7.2562|
                  |L7.2538|
0009ea  a903              ADD      r1,sp,#0xc            ;1025
0009ec  9802              LDR      r0,[sp,#8]            ;1025
0009ee  5c08              LDRB     r0,[r1,r0]            ;1025
0009f0  4601              MOV      r1,r0                 ;1025
0009f2  9001              STR      r0,[sp,#4]            ;1025
0009f4  f2af50d8          ADR      r0,|L7.1056|
0009f8  f7fffffe          BL       App_printf
0009fc  9802              LDR      r0,[sp,#8]            ;1023
0009fe  1c40              ADDS     r0,r0,#1              ;1023
000a00  9002              STR      r0,[sp,#8]            ;1023
                  |L7.2562|
000a02  f89d110c          LDRB     r1,[sp,#0x10c]        ;1023
000a06  9802              LDR      r0,[sp,#8]            ;1023
000a08  4281              CMP      r1,r0                 ;1023
000a0a  dcee              BGT      |L7.2538|
000a0c  f2af50e8          ADR      r0,|L7.1064|
000a10  f7fffffe          BL       App_printf
000a14  2001              MOVS     r0,#1                 ;1028
000a16  e414              B        |L7.578|
                  |L7.2584|
000a18  2002              MOVS     r0,#2                 ;1031
000a1a  e412              B        |L7.578|
;;;1033   
                          ENDP

                  |L7.2588|
                          DCD      System
                  |L7.2592|
                          DCD      Add_PowerBack
                  |L7.2596|
                          DCD      Sub_PowerBack
                  |L7.2600|
                          DCD      Run_DiagramBack

                          AREA ||i.freq_hex_to_str||, CODE, READONLY, ALIGN=1

                  freq_hex_to_str PROC
;;;1377   
;;;1378   void freq_hex_to_str(uint8_t *freq_hex, uint8_t *freq_str)		//hex的频率转换为str频率
000000  7802              LDRB     r2,[r0,#0]
;;;1379   {
;;;1380   	*(freq_str+0) = (*(freq_hex+0)>>4)&0x0F + '0';
000002  0912              LSRS     r2,r2,#4
000004  700a              STRB     r2,[r1,#0]
;;;1381   	*(freq_str+1) = (*(freq_hex+0)>>0)&0x0F + '0';
000006  7802              LDRB     r2,[r0,#0]
000008  f002023f          AND      r2,r2,#0x3f
00000c  704a              STRB     r2,[r1,#1]
;;;1382   	*(freq_str+2) = (*(freq_hex+1)>>4)&0x0F + '0';
00000e  7842              LDRB     r2,[r0,#1]
000010  0912              LSRS     r2,r2,#4
000012  708a              STRB     r2,[r1,#2]
;;;1383   	*(freq_str+3) = (*(freq_hex+1)>>0)&0x0F + '0';
000014  7842              LDRB     r2,[r0,#1]
000016  f002023f          AND      r2,r2,#0x3f
00001a  70ca              STRB     r2,[r1,#3]
;;;1384   	*(freq_str+4) = (*(freq_hex+2)>>4)&0x0F + '0';
00001c  7882              LDRB     r2,[r0,#2]
00001e  0912              LSRS     r2,r2,#4
000020  710a              STRB     r2,[r1,#4]
;;;1385   	*(freq_str+5) = (*(freq_hex+2)>>0)&0x0F + '0';
000022  7882              LDRB     r2,[r0,#2]
000024  f002023f          AND      r2,r2,#0x3f
000028  714a              STRB     r2,[r1,#5]
;;;1386   	*(freq_str+6) = (*(freq_hex+3)>>4)&0x0F + '0';
00002a  78c2              LDRB     r2,[r0,#3]
00002c  0912              LSRS     r2,r2,#4
00002e  718a              STRB     r2,[r1,#6]
;;;1387   	*(freq_str+7) = (*(freq_hex+3)>>0)&0x0F + '0';
000030  78c2              LDRB     r2,[r0,#3]
000032  f002023f          AND      r2,r2,#0x3f
000036  71ca              STRB     r2,[r1,#7]
;;;1388   	*(freq_str+8) = '\0';
000038  2200              MOVS     r2,#0
00003a  720a              STRB     r2,[r1,#8]
;;;1389   }
00003c  4770              BX       lr
;;;1390   
                          ENDP


                          AREA ||i.set_power_level||, CODE, READONLY, ALIGN=2

                  set_power_level PROC
;;;1391   //功率等级		(新协议)'1':1/4		'2':1/2		'3':1	(旧协议)0x00:全功率	0x01:1/2功率	0x02:1/4功率
;;;1392   uint8_t set_power_level(uint8_t channel, uint8_t power_level)
000000  b530              PUSH     {r4,r5,lr}
;;;1393   {
000002  4602              MOV      r2,r0
;;;1394   	uint8_t max_power_level;
;;;1395   	
;;;1396   	switch( power_level )
000004  2931              CMP      r1,#0x31
000006  d022              BEQ      |L9.78|
000008  dc05              BGT      |L9.22|
00000a  b149              CBZ      r1,|L9.32|
00000c  2901              CMP      r1,#1
00000e  d00c              BEQ      |L9.42|
000010  2902              CMP      r1,#2
000012  d120              BNE      |L9.86|
000014  e00e              B        |L9.52|
                  |L9.22|
000016  2932              CMP      r1,#0x32
000018  d015              BEQ      |L9.70|
00001a  2933              CMP      r1,#0x33
00001c  d11b              BNE      |L9.86|
00001e  e00e              B        |L9.62|
                  |L9.32|
;;;1397   	{
;;;1398   		/* 传入的功率等级是旧协议的，即只能是从flash读入 */
;;;1399   		case OLD_FULL_POWER_LEVEL:		System.power[channel-1] = NEW_FULL_POWER_LEVEL;		break;	//1
000020  2533              MOVS     r5,#0x33
000022  1e50              SUBS     r0,r2,#1
000024  4c2e              LDR      r4,|L9.224|
000026  5425              STRB     r5,[r4,r0]
000028  e01a              B        |L9.96|
                  |L9.42|
;;;1400   		case OLD_HALF_POWER_LEVEL:		System.power[channel-1] = NEW_HALF_POWER_LEVEL;		break;	//1/2
00002a  2532              MOVS     r5,#0x32
00002c  1e50              SUBS     r0,r2,#1
00002e  4c2c              LDR      r4,|L9.224|
000030  5425              STRB     r5,[r4,r0]
000032  e015              B        |L9.96|
                  |L9.52|
;;;1401   		case OLD_QUARTER_POWER_LEVEL:	System.power[channel-1] = NEW_QUARTER_POWER_LEVEL;	break;	//1/4
000034  2531              MOVS     r5,#0x31
000036  1e50              SUBS     r0,r2,#1
000038  4c29              LDR      r4,|L9.224|
00003a  5425              STRB     r5,[r4,r0]
00003c  e010              B        |L9.96|
                  |L9.62|
;;;1402   		
;;;1403   		/* 直接从MT2000_Rx读入 */
;;;1404   		case NEW_FULL_POWER_LEVEL:		System.power[channel-1] = power_level;	break;	//1
00003e  1e50              SUBS     r0,r2,#1
000040  4c27              LDR      r4,|L9.224|
000042  5421              STRB     r1,[r4,r0]
000044  e00c              B        |L9.96|
                  |L9.70|
;;;1405   		case NEW_HALF_POWER_LEVEL:		System.power[channel-1] = power_level;	break;	//1/2
000046  1e50              SUBS     r0,r2,#1
000048  4c25              LDR      r4,|L9.224|
00004a  5421              STRB     r1,[r4,r0]
00004c  e008              B        |L9.96|
                  |L9.78|
;;;1406   		case NEW_QUARTER_POWER_LEVEL:	System.power[channel-1] = power_level;	break;	//1/4
00004e  1e50              SUBS     r0,r2,#1
000050  4c23              LDR      r4,|L9.224|
000052  5421              STRB     r1,[r4,r0]
000054  e004              B        |L9.96|
                  |L9.86|
;;;1407   		
;;;1408   		default :	System.power[channel-1] = NEW_HALF_POWER_LEVEL;	break;				//1/2
000056  2532              MOVS     r5,#0x32
000058  1e50              SUBS     r0,r2,#1
00005a  4c21              LDR      r4,|L9.224|
00005c  5425              STRB     r5,[r4,r0]
00005e  bf00              NOP      
                  |L9.96|
000060  bf00              NOP                            ;1399
;;;1409   	}
;;;1410   		
;;;1411   	/* 功率等级赋值策略	--	默认选择最大的功率等级(使用旧协议与PC通信) */
;;;1412   	switch( System.mode )
000062  481f              LDR      r0,|L9.224|
000064  3814              SUBS     r0,r0,#0x14
000066  7c40              LDRB     r0,[r0,#0x11]  ; System
000068  2831              CMP      r0,#0x31
00006a  d004              BEQ      |L9.118|
00006c  2832              CMP      r0,#0x32
00006e  d006              BEQ      |L9.126|
000070  2833              CMP      r0,#0x33
000072  d123              BNE      |L9.188|
000074  e00e              B        |L9.148|
                  |L9.118|
;;;1413   	{
;;;1414   		case '1':
;;;1415   			max_power_level = System.power[0];
000076  481a              LDR      r0,|L9.224|
000078  3814              SUBS     r0,r0,#0x14
00007a  7d03              LDRB     r3,[r0,#0x14]  ; System
;;;1416   			break;
00007c  e020              B        |L9.192|
                  |L9.126|
;;;1417   		
;;;1418   		case '2':
;;;1419   			max_power_level = System.power[0];
00007e  4818              LDR      r0,|L9.224|
000080  3814              SUBS     r0,r0,#0x14
000082  7d03              LDRB     r3,[r0,#0x14]  ; System
;;;1420   			if( System.power[0] < System.power[1] )
000084  7d04              LDRB     r4,[r0,#0x14]  ; System
000086  7d40              LDRB     r0,[r0,#0x15]
000088  4284              CMP      r4,r0
00008a  da02              BGE      |L9.146|
;;;1421   				max_power_level = System.power[1];
00008c  4814              LDR      r0,|L9.224|
00008e  3814              SUBS     r0,r0,#0x14
000090  7d43              LDRB     r3,[r0,#0x15]
                  |L9.146|
;;;1422   			break;
000092  e015              B        |L9.192|
                  |L9.148|
;;;1423   			
;;;1424   		case '3':
;;;1425   			max_power_level = System.power[0];
000094  4812              LDR      r0,|L9.224|
000096  3814              SUBS     r0,r0,#0x14
000098  7d03              LDRB     r3,[r0,#0x14]  ; System
;;;1426   			if( System.power[0] < System.power[1] )
00009a  7d04              LDRB     r4,[r0,#0x14]  ; System
00009c  7d40              LDRB     r0,[r0,#0x15]
00009e  4284              CMP      r4,r0
0000a0  da02              BGE      |L9.168|
;;;1427   				max_power_level = System.power[1];
0000a2  480f              LDR      r0,|L9.224|
0000a4  3814              SUBS     r0,r0,#0x14
0000a6  7d43              LDRB     r3,[r0,#0x15]
                  |L9.168|
;;;1428   			if( System.power[0] < System.power[2] )
0000a8  480d              LDR      r0,|L9.224|
0000aa  3814              SUBS     r0,r0,#0x14
0000ac  7d04              LDRB     r4,[r0,#0x14]  ; System
0000ae  7d80              LDRB     r0,[r0,#0x16]
0000b0  4284              CMP      r4,r0
0000b2  da02              BGE      |L9.186|
;;;1429   				max_power_level = System.power[2];
0000b4  480a              LDR      r0,|L9.224|
0000b6  3814              SUBS     r0,r0,#0x14
0000b8  7d83              LDRB     r3,[r0,#0x16]
                  |L9.186|
;;;1430   			break;
0000ba  e001              B        |L9.192|
                  |L9.188|
;;;1431   			
;;;1432   		default :	max_power_level = NEW_HALF_POWER_LEVEL;	break;
0000bc  2332              MOVS     r3,#0x32
0000be  bf00              NOP      
                  |L9.192|
0000c0  bf00              NOP                            ;1416
;;;1433   	}
;;;1434   	
;;;1435   	switch( max_power_level )
0000c2  2b31              CMP      r3,#0x31
0000c4  d007              BEQ      |L9.214|
0000c6  2b32              CMP      r3,#0x32
0000c8  d003              BEQ      |L9.210|
0000ca  2b33              CMP      r3,#0x33
0000cc  d105              BNE      |L9.218|
;;;1436   	{
;;;1437   		case NEW_FULL_POWER_LEVEL:		return OLD_FULL_POWER_LEVEL;	//1
0000ce  2000              MOVS     r0,#0
                  |L9.208|
;;;1438   		case NEW_HALF_POWER_LEVEL:		return OLD_HALF_POWER_LEVEL;	//1/2
;;;1439   		case NEW_QUARTER_POWER_LEVEL:	return OLD_QUARTER_POWER_LEVEL;	//1/4
;;;1440   		default :						return OLD_HALF_POWER_LEVEL;
;;;1441   	}
;;;1442   }
0000d0  bd30              POP      {r4,r5,pc}
                  |L9.210|
0000d2  2001              MOVS     r0,#1                 ;1438
0000d4  e7fc              B        |L9.208|
                  |L9.214|
0000d6  2002              MOVS     r0,#2                 ;1439
0000d8  e7fa              B        |L9.208|
                  |L9.218|
0000da  2001              MOVS     r0,#1                 ;1440
0000dc  e7f8              B        |L9.208|
;;;1443   
                          ENDP

0000de  0000              DCW      0x0000
                  |L9.224|
                          DCD      System+0x14

                          AREA ||.bss||, DATA, NOINIT, ALIGN=3

                  Show_Parameter
                          %        24
                  pp_PC_dat
                          %        257

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\my_procotol.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_my_procotol_c_c7d2ce54____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_my_procotol_c_c7d2ce54____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_my_procotol_c_c7d2ce54____REVSH|
#line 128
|__asm___13_my_procotol_c_c7d2ce54____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
