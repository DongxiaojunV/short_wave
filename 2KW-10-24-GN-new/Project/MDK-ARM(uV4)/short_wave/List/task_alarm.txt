; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\short_wave\obj\task_alarm.o --asm_dir=.\short_wave\List\ --list_dir=.\short_wave\List\ --depend=.\short_wave\obj\task_alarm.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\adc -I..\..\User\rtc -I..\..\User\internal_flash -I..\..\User\iwdg -I..\..\Task -I..\..\User\can -I..\..\User\firmware_upgrade -I..\..\User\STMFLASH -I..\..\User\IAP -I.\RTE\_Short_Wave -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\short_wave\obj\task_alarm.crf ..\..\Task\Task_Alarm.c]
                          THUMB

                          AREA ||i.Task_Alarm||, CODE, READONLY, ALIGN=2

                  Task_Alarm PROC
;;;17     
;;;18     void Task_Alarm(void *pvParameters)
000000  e031              B        |L1.102|
                  |L1.2|
;;;19     {
;;;20     	uint8_t n;
;;;21         while(1)
;;;22         {
;;;23             if( System.status == SYSTEM_EMISSING )		//发射状态下电压电流报警检测(并检测无功率报警)
000002  4819              LDR      r0,|L1.104|
000004  7ac0              LDRB     r0,[r0,#0xb]  ; System
000006  2801              CMP      r0,#1
000008  d10a              BNE      |L1.32|
;;;24             {
;;;25                swr_power_alarm_check();	//驻波比和功率报警检测
00000a  f7fffffe          BL       swr_power_alarm_check
;;;26     					for(n=0;n>10;n++)
00000e  2400              MOVS     r4,#0
000010  e004              B        |L1.28|
                  |L1.18|
;;;27     					{
;;;28     					Trans_printf(" Task_Alarm正在发射状态下驻波比和功率报警检测！ \n");
000012  a016              ADR      r0,|L1.108|
000014  f7fffffe          BL       Trans_printf
;;;29     					n=0;
000018  2400              MOVS     r4,#0
00001a  1c64              ADDS     r4,r4,#1              ;26
                  |L1.28|
00001c  2c0a              CMP      r4,#0xa               ;26
00001e  dcf8              BGT      |L1.18|
                  |L1.32|
;;;30     					}
;;;31             }
;;;32     				
;;;33     				if(System.Control_Model==1)		//遥控开关被关闭了
000020  4811              LDR      r0,|L1.104|
000022  f890004c          LDRB     r0,[r0,#0x4c]  ; System
000026  2801              CMP      r0,#1
000028  d11a              BNE      |L1.96|
;;;34     				{
;;;35     					if(System.status!=SYSTEM_UNINITIALIZE)
00002a  480f              LDR      r0,|L1.104|
00002c  7ac0              LDRB     r0,[r0,#0xb]  ; System
00002e  2810              CMP      r0,#0x10
000030  d016              BEQ      |L1.96|
;;;36     					{
;;;37     						vTaskDelay(100);
000032  2064              MOVS     r0,#0x64
000034  f7fffffe          BL       vTaskDelay
;;;38     						if(System.Control_Model==1)		//再次检测，防止误判
000038  480b              LDR      r0,|L1.104|
00003a  f890004c          LDRB     r0,[r0,#0x4c]  ; System
00003e  2801              CMP      r0,#1
000040  d10e              BNE      |L1.96|
;;;39     						{
;;;40     						System.emission = 0x00;	
000042  2000              MOVS     r0,#0
000044  4908              LDR      r1,|L1.104|
000046  7588              STRB     r0,[r1,#0x16]
;;;41     						Alarm.no_respond = 0x01;
000048  2001              MOVS     r0,#1
00004a  4915              LDR      r1,|L1.160|
00004c  70c8              STRB     r0,[r1,#3]
;;;42     						Trans_printf(" Alarm.no_respond 2 ! ");
00004e  a015              ADR      r0,|L1.164|
000050  f7fffffe          BL       Trans_printf
;;;43     						Alarm.alarm_history = 0x01;
000054  2001              MOVS     r0,#1
000056  4912              LDR      r1,|L1.160|
000058  7008              STRB     r0,[r1,#0]
;;;44     						Trans_printf(" Task_Alarm遥控开关被关闭了！ \n");
00005a  a018              ADR      r0,|L1.188|
00005c  f7fffffe          BL       Trans_printf
                  |L1.96|
;;;45     						}
;;;46     					}					
;;;47     				}
;;;48     				
;;;49             vTaskDelay(100);
000060  2064              MOVS     r0,#0x64
000062  f7fffffe          BL       vTaskDelay
                  |L1.102|
000066  e7cc              B        |L1.2|
;;;50         }
;;;51     }
                          ENDP

                  |L1.104|
                          DCD      System
                  |L1.108|
00006c  20546173          DCB      " Task_Alarm",213,253,212,218,183,162,201,228,215,180,204
000070  6b5f416c
000074  61726dd5
000078  fdd4dab7
00007c  a2c9e4d7
000080  b4cc    
000082  accfc2d7          DCB      172,207,194,215,164,178,168,177,200,186,205,185,166,194,202
000086  a4b2a8b1
00008a  c8bacdb9
00008e  a6c2ca  
000091  b1a8beaf          DCB      177,168,190,175,188,236,178,226,163,161," \n",0
000095  bcecb2e2
000099  a3a1200a
00009d  00      
00009e  00                DCB      0
00009f  00                DCB      0
                  |L1.160|
                          DCD      Alarm
                  |L1.164|
0000a4  20416c61          DCB      " Alarm.no_respond 2 ! ",0
0000a8  726d2e6e
0000ac  6f5f7265
0000b0  73706f6e
0000b4  64203220
0000b8  212000  
0000bb  00                DCB      0
                  |L1.188|
0000bc  20546173          DCB      " Task_Alarm",210,163,191,216,191,170,185,216,177,187,185
0000c0  6b5f416c
0000c4  61726dd2
0000c8  a3bfd8bf
0000cc  aab9d8b1
0000d0  bbb9    
0000d2  d8b1d5c1          DCB      216,177,213,193,203,163,161," \n",0
0000d6  cba3a120
0000da  0a00    

                          AREA ||.data||, DATA, ALIGN=2

                  xHandleTask_Alarm
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\Task\\Task_Alarm.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_Task_Alarm_c_3da77129____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_Task_Alarm_c_3da77129____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_Task_Alarm_c_3da77129____REVSH|
#line 128
|__asm___12_Task_Alarm_c_3da77129____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
