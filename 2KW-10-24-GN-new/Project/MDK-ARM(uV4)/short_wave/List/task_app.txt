; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\short_wave\obj\task_app.o --asm_dir=.\short_wave\List\ --list_dir=.\short_wave\List\ --depend=.\short_wave\obj\task_app.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\adc -I..\..\User\rtc -I..\..\User\internal_flash -I..\..\User\iwdg -I..\..\Task -I..\..\User\can -I..\..\User\firmware_upgrade -I..\..\User\STMFLASH -I..\..\User\IAP -I.\RTE\_Short_Wave -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\short_wave\obj\task_app.crf ..\..\Task\Task_App.c]
                          THUMB

                          AREA ||i.Check_Data_Valid||, CODE, READONLY, ALIGN=2

                  Check_Data_Valid PROC
;;;247    #if FIRMWARE_UPDATE_EN
;;;248    static uint8_t Check_Data_Valid(uint8_t *Func_code, uint8_t *p_data, uint16_t data_len)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;249    {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4690              MOV      r8,r2
;;;250    	uint16_t	i = 0;
00000a  2700              MOVS     r7,#0
;;;251    	uint16_t	len = 0;
00000c  2600              MOVS     r6,#0
;;;252    	uint8_t		ret = 0;
00000e  46b3              MOV      r11,r6
;;;253    	
;;;254    	uint8_t		buf_CRC[2];
;;;255    	uint16_t	CRC_Back;
;;;256    	uint16_t	ReceiveData_CRC;
;;;257        
;;;258    	for(i=0; data_len>8; i++, data_len--)
000010  bf00              NOP      
000012  e084              B        |L1.286|
                  |L1.20|
;;;259    	{
;;;260    		if( (p_data[i] == 0x05) && (p_data[i+1] == 0x02) )
000014  5de0              LDRB     r0,[r4,r7]
000016  2805              CMP      r0,#5
000018  d17b              BNE      |L1.274|
00001a  1c78              ADDS     r0,r7,#1
00001c  5c20              LDRB     r0,[r4,r0]
00001e  2802              CMP      r0,#2
000020  d177              BNE      |L1.274|
;;;261    		{
;;;262    			len = (p_data[i+3]<<8) + p_data[i+4];
000022  1d38              ADDS     r0,r7,#4
000024  5c21              LDRB     r1,[r4,r0]
000026  1cf8              ADDS     r0,r7,#3
000028  5c20              LDRB     r0,[r4,r0]
00002a  eb012000          ADD      r0,r1,r0,LSL #8
00002e  b286              UXTH     r6,r0
;;;263    			if( data_len < len )
000030  45b0              CMP      r8,r6
000032  da04              BGE      |L1.62|
;;;264    			{
;;;265    				ret = 0x02;				
000034  f04f0b02          MOV      r11,#2
;;;266    				return ret;
000038  4658              MOV      r0,r11
                  |L1.58|
;;;267    			}
;;;268    			else	if( (p_data[5+len+2] == 0x03) && (p_data[5+len+2+1] == 0x04) )
;;;269    			{
;;;270    				Func_code[0] = p_data[5];
;;;271    				Func_code[1] = p_data[6];
;;;272    				
;;;273    				buf_CRC[0] = *(p_data+len+5);
;;;274    				buf_CRC[1] = *(p_data+len+6);
;;;275    				ReceiveData_CRC = ((buf_CRC[0]<<8) +(buf_CRC[1]));
;;;276    				
;;;277    				CRC_Back = CRC16_XMODEM(p_data+5, len);
;;;278    				if( CRC_Back == ReceiveData_CRC )
;;;279    				{
;;;280    					ret = 0x01;
;;;281    					
;;;282    					if( (Func_code[0]==0x0E) && (Func_code[1]==0x01) )				//远程升级，更新固件
;;;283    					{
;;;284    						App_Upgrade.upgrade_package_total = p_data[5+3];
;;;285    						App_Upgrade.upgrade_package_num = p_data[5+4];
;;;286    						memcpy(App_Upgrade.upgrade_version, (p_data+5+5), sizeof(App_Upgrade.upgrade_version));
;;;287    						memcpy(App_Upgrade.upgrade_package, (p_data+5+9), APPLICATION_PACK_SIZE);
;;;288    					}
;;;289    					else	if( (Func_code[0]==0x0F) && (Func_code[1]==0x01) )		//修改System.CAN_ID
;;;290    					{
;;;291    						App_SetID.CAN_ID[0] = p_data[8];
;;;292    						App_SetID.IP[0]=p_data[9];
;;;293    						App_SetID.IP[1]=p_data[10];
;;;294    						App_SetID.IP[2]=p_data[11];
;;;295    						App_SetID.IP[3]=p_data[12];
;;;296    						App_SetID.Socket0_Port[0]=p_data[13];
;;;297    						App_SetID.Socket0_Port[1]=p_data[14];
;;;298    					}
;;;299    					else	if( (Func_code[0]==0x10) && (Func_code[1]==0x01) )		//查询APP版本号
;;;300    					{
;;;301    						
;;;302    					}
;;;303    					else
;;;304    					{
;;;305    						ret = 0x02;
;;;306    					}
;;;307    					
;;;308    					return ret;
;;;309    				}
;;;310    				else
;;;311    				{
;;;312    					ret = 0x02;			
;;;313    					return ret;
;;;314    				}
;;;315    			}
;;;316    			else
;;;317    			{
;;;318    				ret = 0x02;				
;;;319    				return ret;
;;;320    			}
;;;321    		}
;;;322    	}
;;;323    
;;;324    	return 0x02;
;;;325    }
00003a  e8bd8ff8          POP      {r3-r11,pc}
                  |L1.62|
00003e  1df0              ADDS     r0,r6,#7              ;268
000040  5c20              LDRB     r0,[r4,r0]            ;268
000042  2803              CMP      r0,#3                 ;268
000044  d161              BNE      |L1.266|
000046  f1060008          ADD      r0,r6,#8              ;268
00004a  5c20              LDRB     r0,[r4,r0]            ;268
00004c  2804              CMP      r0,#4                 ;268
00004e  d15c              BNE      |L1.266|
000050  7960              LDRB     r0,[r4,#5]            ;270
000052  7028              STRB     r0,[r5,#0]            ;270
000054  79a0              LDRB     r0,[r4,#6]            ;271
000056  7068              STRB     r0,[r5,#1]            ;271
000058  19a0              ADDS     r0,r4,r6              ;273
00005a  7940              LDRB     r0,[r0,#5]            ;273
00005c  f88d0000          STRB     r0,[sp,#0]            ;273
000060  19a0              ADDS     r0,r4,r6              ;274
000062  7980              LDRB     r0,[r0,#6]            ;274
000064  f88d0001          STRB     r0,[sp,#1]            ;274
000068  f89d0001          LDRB     r0,[sp,#1]            ;275
00006c  f89d1000          LDRB     r1,[sp,#0]            ;275
000070  eb002001          ADD      r0,r0,r1,LSL #8       ;275
000074  fa1ffa80          UXTH     r10,r0                ;275
000078  4631              MOV      r1,r6                 ;277
00007a  1d60              ADDS     r0,r4,#5              ;277
00007c  f7fffffe          BL       CRC16_XMODEM
000080  4681              MOV      r9,r0                 ;277
000082  45d1              CMP      r9,r10                ;278
000084  d13d              BNE      |L1.258|
000086  f04f0b01          MOV      r11,#1                ;280
00008a  7828              LDRB     r0,[r5,#0]            ;282
00008c  280e              CMP      r0,#0xe               ;282
00008e  d114              BNE      |L1.186|
000090  7868              LDRB     r0,[r5,#1]            ;282
000092  2801              CMP      r0,#1                 ;282
000094  d111              BNE      |L1.186|
000096  7a20              LDRB     r0,[r4,#8]            ;284
000098  4924              LDR      r1,|L1.300|
00009a  7008              STRB     r0,[r1,#0]            ;284
00009c  7a60              LDRB     r0,[r4,#9]            ;285
00009e  7048              STRB     r0,[r1,#1]            ;285
0000a0  f8d4000a          LDR      r0,[r4,#0xa]          ;286
0000a4  f8c10002          STR      r0,[r1,#2]            ;286  ; App_Upgrade
0000a8  f44f6200          MOV      r2,#0x800             ;287
0000ac  f104010e          ADD      r1,r4,#0xe            ;287
0000b0  481e              LDR      r0,|L1.300|
0000b2  1d80              ADDS     r0,r0,#6              ;287
0000b4  f7fffffe          BL       __aeabi_memcpy
0000b8  e020              B        |L1.252|
                  |L1.186|
0000ba  7828              LDRB     r0,[r5,#0]            ;289
0000bc  280f              CMP      r0,#0xf               ;289
0000be  d115              BNE      |L1.236|
0000c0  7868              LDRB     r0,[r5,#1]            ;289
0000c2  2801              CMP      r0,#1                 ;289
0000c4  d112              BNE      |L1.236|
0000c6  7a20              LDRB     r0,[r4,#8]            ;291
0000c8  4919              LDR      r1,|L1.304|
0000ca  7008              STRB     r0,[r1,#0]            ;291
0000cc  7a60              LDRB     r0,[r4,#9]            ;292
0000ce  7048              STRB     r0,[r1,#1]            ;292
0000d0  7aa1              LDRB     r1,[r4,#0xa]          ;293
0000d2  4817              LDR      r0,|L1.304|
0000d4  7081              STRB     r1,[r0,#2]            ;293
0000d6  7ae1              LDRB     r1,[r4,#0xb]          ;294
0000d8  70c1              STRB     r1,[r0,#3]            ;294
0000da  7b21              LDRB     r1,[r4,#0xc]          ;295
0000dc  7101              STRB     r1,[r0,#4]            ;295
0000de  7b60              LDRB     r0,[r4,#0xd]          ;296
0000e0  4913              LDR      r1,|L1.304|
0000e2  7148              STRB     r0,[r1,#5]            ;296
0000e4  7ba1              LDRB     r1,[r4,#0xe]          ;297
0000e6  4812              LDR      r0,|L1.304|
0000e8  7181              STRB     r1,[r0,#6]            ;297
0000ea  e007              B        |L1.252|
                  |L1.236|
0000ec  7828              LDRB     r0,[r5,#0]            ;299
0000ee  2810              CMP      r0,#0x10              ;299
0000f0  d102              BNE      |L1.248|
0000f2  7868              LDRB     r0,[r5,#1]            ;299
0000f4  2801              CMP      r0,#1                 ;299
0000f6  d001              BEQ      |L1.252|
                  |L1.248|
0000f8  f04f0b02          MOV      r11,#2                ;305
                  |L1.252|
0000fc  4658              MOV      r0,r11                ;308
0000fe  e79c              B        |L1.58|
000100  e007              B        |L1.274|
                  |L1.258|
000102  f04f0b02          MOV      r11,#2                ;312
000106  4658              MOV      r0,r11                ;313
000108  e797              B        |L1.58|
                  |L1.266|
00010a  f04f0b02          MOV      r11,#2                ;318
00010e  4658              MOV      r0,r11                ;319
000110  e793              B        |L1.58|
                  |L1.274|
000112  1c78              ADDS     r0,r7,#1              ;258
000114  b287              UXTH     r7,r0                 ;258
000116  f1a80001          SUB      r0,r8,#1              ;258
00011a  fa1ff880          UXTH     r8,r0                 ;258
                  |L1.286|
00011e  f1b80f08          CMP      r8,#8                 ;258
000122  f73faf77          BGT      |L1.20|
000126  2002              MOVS     r0,#2                 ;324
000128  e787              B        |L1.58|
;;;326    
                          ENDP

00012a  0000              DCW      0x0000
                  |L1.300|
                          DCD      App_Upgrade
                  |L1.304|
                          DCD      App_SetID

                          AREA ||i.Send_App||, CODE, READONLY, ALIGN=2

                  Send_App PROC
;;;326    
;;;327    static uint8_t Send_App(uint8_t *Func_code, uint8_t *p_data, uint8_t data_len)
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;328    {
000004  b0c5              SUB      sp,sp,#0x114
000006  4605              MOV      r5,r0
000008  4689              MOV      r9,r1
00000a  4614              MOV      r4,r2
;;;329      Buffer_t COM_buffer;
;;;330    
;;;331    	uint16_t CRC_Back;
;;;332    	uint8_t Start_Data[8] = {0x05, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
00000c  a13b              ADR      r1,|L2.252|
00000e  c903              LDM      r1,{r0,r1}
000010  e9cd0102          STRD     r0,r1,[sp,#8]
;;;333    	uint8_t End_Data[4] = {0x00, 0x00, 0x03, 0x04};
000014  a03b              ADR      r0,|L2.260|
000016  6800              LDR      r0,[r0,#0]
000018  9001              STR      r0,[sp,#4]
;;;334    
;;;335    	//补零
;;;336        uint8_t temp = 0x00;
00001a  2700              MOVS     r7,#0
;;;337        uint8_t temp_len = 0x00;
00001c  46b8              MOV      r8,r7
;;;338    	
;;;339    	if( (Func_code[0] == 0x0E) && (Func_code[1] == 0x01) )				//固件升级
00001e  7828              LDRB     r0,[r5,#0]
000020  280e              CMP      r0,#0xe
000022  d102              BNE      |L2.42|
000024  7868              LDRB     r0,[r5,#1]
000026  2801              CMP      r0,#1
000028  d00f              BEQ      |L2.74|
                  |L2.42|
;;;340    	{
;;;341    		
;;;342    	}
;;;343    	else	if( (Func_code[0] == 0x0F) && (Func_code[1] == 0x01) )		//修改System ID
00002a  7828              LDRB     r0,[r5,#0]
00002c  280f              CMP      r0,#0xf
00002e  d102              BNE      |L2.54|
000030  7868              LDRB     r0,[r5,#1]
000032  2801              CMP      r0,#1
000034  d009              BEQ      |L2.74|
                  |L2.54|
;;;344        {
;;;345    		
;;;346    	}
;;;347    	else	if( (Func_code[0] == 0x10) && (Func_code[1] == 0x01) )		//查询APP版本号
000036  7828              LDRB     r0,[r5,#0]
000038  2810              CMP      r0,#0x10
00003a  d102              BNE      |L2.66|
00003c  7868              LDRB     r0,[r5,#1]
00003e  2801              CMP      r0,#1
000040  d003              BEQ      |L2.74|
                  |L2.66|
;;;348        {
;;;349    		
;;;350    	}
;;;351    	else
;;;352    	{
;;;353    		return 0;
000042  2000              MOVS     r0,#0
                  |L2.68|
;;;354    	}
;;;355    
;;;356    	data_len += 3;
;;;357    	Start_Data[2] = System.CAN_ID[0];
;;;358    	Start_Data[3] = (data_len>>8)&0xFF;		//数据长度
;;;359    	Start_Data[4] = (data_len>>0)&0xFF;		//数据长度
;;;360    	Start_Data[5] = Func_code[0];		//功能码
;;;361    	Start_Data[6] = 0x02;				//功能码
;;;362    
;;;363    	#if	ADD_CAN_LEN
;;;364    	Start_Data[7] = 5 + data_len + 4;
;;;365    	#endif
;;;366    
;;;367    	memcpy(COM_buffer.data, Start_Data, 8);
;;;368    	memcpy(COM_buffer.data+8, p_data, data_len-3);
;;;369    	CRC_Back = CRC16_XMODEM(COM_buffer.data+5, data_len);
;;;370    	End_Data[0] = (uint8_t)((CRC_Back >> 8) & 0xff);		//存高八位
;;;371    	End_Data[1] = (uint8_t)((CRC_Back >> 0) & 0xff);		//低八位
;;;372    	memcpy(COM_buffer.data+data_len+5, End_Data, 4);
;;;373    	COM_buffer.len = 5+data_len+4;
;;;374    
;;;375    	#if	1	//不够8位，补零
;;;376    	temp = COM_buffer.len % 8;
;;;377    
;;;378    	if( temp == 0x00 )
;;;379    	{
;;;380    
;;;381    	}
;;;382    	else
;;;383    	{
;;;384    		temp_len = 8-temp;
;;;385    		memset(COM_buffer.data+COM_buffer.len, 0, temp_len);
;;;386    		COM_buffer.len += temp_len;
;;;387    	}
;;;388    	#endif
;;;389    	
;;;390    	Write_SOCK_Data_Buffer(1,COM_buffer.data,COM_buffer.len);
;;;391    		
;;;392    	return 1;
;;;393    }
000044  b045              ADD      sp,sp,#0x114
000046  e8bd83f0          POP      {r4-r9,pc}
                  |L2.74|
00004a  1ce0              ADDS     r0,r4,#3              ;356
00004c  b2c4              UXTB     r4,r0                 ;356
00004e  482e              LDR      r0,|L2.264|
000050  7800              LDRB     r0,[r0,#0]            ;357  ; System
000052  f88d000a          STRB     r0,[sp,#0xa]          ;357
000056  2000              MOVS     r0,#0                 ;358
000058  f88d000b          STRB     r0,[sp,#0xb]          ;358
00005c  f88d400c          STRB     r4,[sp,#0xc]          ;359
000060  7828              LDRB     r0,[r5,#0]            ;360
000062  f88d000d          STRB     r0,[sp,#0xd]          ;360
000066  2002              MOVS     r0,#2                 ;361
000068  f88d000e          STRB     r0,[sp,#0xe]          ;361
00006c  f1040009          ADD      r0,r4,#9              ;364
000070  b2c0              UXTB     r0,r0                 ;364
000072  f88d000f          STRB     r0,[sp,#0xf]          ;364
000076  e9dd0102          LDRD     r0,r1,[sp,#8]         ;367
00007a  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;367
00007e  1ee2              SUBS     r2,r4,#3              ;368
000080  4649              MOV      r1,r9                 ;368
000082  a806              ADD      r0,sp,#0x18           ;368
000084  f7fffffe          BL       __aeabi_memcpy
000088  4621              MOV      r1,r4                 ;369
00008a  f10d0015          ADD      r0,sp,#0x15           ;369
00008e  f7fffffe          BL       CRC16_XMODEM
000092  4606              MOV      r6,r0                 ;369
000094  0a30              LSRS     r0,r6,#8              ;370
000096  f88d0004          STRB     r0,[sp,#4]            ;370
00009a  b2f0              UXTB     r0,r6                 ;371
00009c  f88d0005          STRB     r0,[sp,#5]            ;371
0000a0  a804              ADD      r0,sp,#0x10           ;372
0000a2  4420              ADD      r0,r0,r4              ;372
0000a4  9901              LDR      r1,[sp,#4]            ;372
0000a6  f8c01005          STR      r1,[r0,#5]            ;372
0000aa  f1040009          ADD      r0,r4,#9              ;373
0000ae  b2c0              UXTB     r0,r0                 ;373
0000b0  f88d0110          STRB     r0,[sp,#0x110]        ;373
0000b4  f89d0110          LDRB     r0,[sp,#0x110]        ;376
0000b8  17c1              ASRS     r1,r0,#31             ;376
0000ba  eb007151          ADD      r1,r0,r1,LSR #29      ;376
0000be  10c9              ASRS     r1,r1,#3              ;376
0000c0  eba001c1          SUB      r1,r0,r1,LSL #3       ;376
0000c4  b2cf              UXTB     r7,r1                 ;376
0000c6  b187              CBZ      r7,|L2.234|
0000c8  f1c70008          RSB      r0,r7,#8              ;384
0000cc  f00008ff          AND      r8,r0,#0xff           ;384
0000d0  f89d1110          LDRB     r1,[sp,#0x110]        ;385
0000d4  aa04              ADD      r2,sp,#0x10           ;385
0000d6  1888              ADDS     r0,r1,r2              ;385
0000d8  4641              MOV      r1,r8                 ;385
0000da  f7fffffe          BL       __aeabi_memclr
0000de  f89d0110          LDRB     r0,[sp,#0x110]        ;386
0000e2  4440              ADD      r0,r0,r8              ;386
0000e4  b2c0              UXTB     r0,r0                 ;386
0000e6  f88d0110          STRB     r0,[sp,#0x110]        ;386
                  |L2.234|
0000ea  f89d2110          LDRB     r2,[sp,#0x110]        ;390
0000ee  a904              ADD      r1,sp,#0x10           ;390
0000f0  2001              MOVS     r0,#1                 ;390
0000f2  f7fffffe          BL       Write_SOCK_Data_Buffer
0000f6  2001              MOVS     r0,#1                 ;392
0000f8  e7a4              B        |L2.68|
;;;394    
                          ENDP

0000fa  0000              DCW      0x0000
                  |L2.252|
0000fc  050200            DCB      5,2,0
0000ff  00                DCB      0
000100  00                DCB      0
000101  00                DCB      0
000102  00                DCB      0
000103  00                DCB      0
                  |L2.260|
000104  00                DCB      0
000105  00                DCB      0
000106  0304              DCB      3,4
                  |L2.264|
                          DCD      System

                          AREA ||i.Task_App||, CODE, READONLY, ALIGN=2

                  Task_App PROC
;;;63     uint16_t RxBuf_FromUpgrade_len=0;
;;;64     void Task_App(void * pvParameters)
000000  b508              PUSH     {r3,lr}
;;;65     {
;;;66     #if	FIRMWARE_UPDATE_EN
;;;67     	uint8_t			sys_init = 0x00;
000002  2700              MOVS     r7,#0
;;;68     	uint8_t			function_code[2];
;;;69     	uint32_t		address = 0;
000004  46b8              MOV      r8,r7
;;;70     	uint32_t		upgrade_version;
;;;71     
;;;72     	uint32_t		count =0;
000006  2400              MOVS     r4,#0
;;;73       uint32_t		ret;
;;;74     
;;;75     #endif
;;;76     	
;;;77     	
;;;78     	while(1)
000008  e165              B        |L3.726|
                  |L3.10|
;;;79     	{
;;;80     #if	FIRMWARE_UPDATE_EN
;;;81     
;;;82     		count=RxBuf_len;
00000a  48b3              LDR      r0,|L3.728|
00000c  8804              LDRH     r4,[r0,#0]  ; RxBuf_len
;;;83     		
;;;84     		if(count>2)
00000e  2c02              CMP      r4,#2
000010  d97b              BLS      |L3.266|
;;;85     		{
;;;86     			
;;;87     			if(RxBuf[count-1]!=0x04)
000012  1e60              SUBS     r0,r4,#1
000014  49b1              LDR      r1,|L3.732|
000016  5c08              LDRB     r0,[r1,r0]
000018  2804              CMP      r0,#4
00001a  d014              BEQ      |L3.70|
;;;88     			{
;;;89     				for(uint16_t i=0;i<count;i++)
00001c  2000              MOVS     r0,#0
00001e  e00c              B        |L3.58|
                  |L3.32|
;;;90     				{
;;;91     					RxBuf_FromUpgrade[RxBuf_FromUpgrade_len]=RxBuf[i];
000020  49ae              LDR      r1,|L3.732|
000022  5c09              LDRB     r1,[r1,r0]
000024  4aae              LDR      r2,|L3.736|
000026  4baf              LDR      r3,|L3.740|
000028  881b              LDRH     r3,[r3,#0]  ; RxBuf_FromUpgrade_len
00002a  54d1              STRB     r1,[r2,r3]
;;;92     					RxBuf_FromUpgrade_len++;
00002c  49ad              LDR      r1,|L3.740|
00002e  8809              LDRH     r1,[r1,#0]  ; RxBuf_FromUpgrade_len
000030  1c49              ADDS     r1,r1,#1
000032  4aac              LDR      r2,|L3.740|
000034  8011              STRH     r1,[r2,#0]
000036  1c41              ADDS     r1,r0,#1              ;89
000038  b288              UXTH     r0,r1                 ;89
                  |L3.58|
00003a  42a0              CMP      r0,r4                 ;89
00003c  d3f0              BCC      |L3.32|
;;;93     				}
;;;94     					RxBuf_len=0;
00003e  2000              MOVS     r0,#0
000040  49a5              LDR      r1,|L3.728|
000042  8008              STRH     r0,[r1,#0]
000044  e018              B        |L3.120|
                  |L3.70|
;;;95     				
;;;96     			}
;;;97     			else
;;;98     			{
;;;99     					for(uint16_t i=0;i<count;i++)
000046  2000              MOVS     r0,#0
000048  e00c              B        |L3.100|
                  |L3.74|
;;;100    					{
;;;101    						RxBuf_FromUpgrade[RxBuf_FromUpgrade_len]=RxBuf[i];
00004a  49a4              LDR      r1,|L3.732|
00004c  5c09              LDRB     r1,[r1,r0]
00004e  4aa4              LDR      r2,|L3.736|
000050  4ba4              LDR      r3,|L3.740|
000052  881b              LDRH     r3,[r3,#0]  ; RxBuf_FromUpgrade_len
000054  54d1              STRB     r1,[r2,r3]
;;;102    						RxBuf_FromUpgrade_len++;
000056  49a3              LDR      r1,|L3.740|
000058  8809              LDRH     r1,[r1,#0]  ; RxBuf_FromUpgrade_len
00005a  1c49              ADDS     r1,r1,#1
00005c  4aa1              LDR      r2,|L3.740|
00005e  8011              STRH     r1,[r2,#0]
000060  1c41              ADDS     r1,r0,#1              ;99
000062  b288              UXTH     r0,r1                 ;99
                  |L3.100|
000064  42a0              CMP      r0,r4                 ;99
000066  d3f0              BCC      |L3.74|
;;;103    					}
;;;104    					RxBuf_len=0;
000068  2000              MOVS     r0,#0
00006a  499b              LDR      r1,|L3.728|
00006c  8008              STRH     r0,[r1,#0]
;;;105    					count=RxBuf_FromUpgrade_len;
00006e  489d              LDR      r0,|L3.740|
000070  8804              LDRH     r4,[r0,#0]  ; RxBuf_FromUpgrade_len
;;;106    					RxBuf_FromUpgrade_len=0;
000072  2000              MOVS     r0,#0
000074  499b              LDR      r1,|L3.740|
000076  8008              STRH     r0,[r1,#0]
                  |L3.120|
;;;107    			}
;;;108    				
;;;109    			ret = Check_Data_Valid(function_code, RxBuf_FromUpgrade, count);
000078  b2a2              UXTH     r2,r4
00007a  4999              LDR      r1,|L3.736|
00007c  4668              MOV      r0,sp
00007e  f7fffffe          BL       Check_Data_Valid
000082  4606              MOV      r6,r0
;;;110    			
;;;111    			count = 0;
000084  2400              MOVS     r4,#0
;;;112    			if( ret == 0x01)
000086  2e01              CMP      r6,#1
                  |L3.136|
000088  d13f              BNE      |L3.266|
;;;113    			{
;;;114    				if( (function_code[0]==0x0E) && (function_code[1]==0x01) )				//远程升级，更新固件
00008a  f89d0000          LDRB     r0,[sp,#0]
00008e  280e              CMP      r0,#0xe
                  |L3.144|
000090  d17d              BNE      |L3.398|
000092  f89d0001          LDRB     r0,[sp,#1]
000096  2801              CMP      r0,#1
000098  d1fa              BNE      |L3.144|
;;;115    				{
;;;116    
;;;117    					upgrade_version = (App_Upgrade.upgrade_version[0]<<24) + (App_Upgrade.upgrade_version[1]<<16) + (App_Upgrade.upgrade_version[2]<<8) + (App_Upgrade.upgrade_version[3]<<0);
00009a  4893              LDR      r0,|L3.744|
00009c  7880              LDRB     r0,[r0,#2]  ; App_Upgrade
00009e  0601              LSLS     r1,r0,#24
0000a0  4891              LDR      r0,|L3.744|
0000a2  78c0              LDRB     r0,[r0,#3]
0000a4  eb014100          ADD      r1,r1,r0,LSL #16
0000a8  488f              LDR      r0,|L3.744|
0000aa  7900              LDRB     r0,[r0,#4]
0000ac  eb012100          ADD      r1,r1,r0,LSL #8
0000b0  488d              LDR      r0,|L3.744|
0000b2  7940              LDRB     r0,[r0,#5]
0000b4  180d              ADDS     r5,r1,r0
;;;118    					if( upgrade_version < APP_VERSION )
0000b6  488d              LDR      r0,|L3.748|
0000b8  4285              CMP      r5,r0
0000ba  d201              BCS      |L3.192|
;;;119    					{
;;;120    						ret = 0x00;		//清零
0000bc  2600              MOVS     r6,#0
0000be  e004              B        |L3.202|
                  |L3.192|
;;;121    					}
;;;122    					else	if( System.emission == 0x01 )
0000c0  488b              LDR      r0,|L3.752|
0000c2  7d80              LDRB     r0,[r0,#0x16]  ; System
0000c4  2801              CMP      r0,#1
0000c6  d100              BNE      |L3.202|
;;;123    					{
;;;124    						ret = 0x00;		//清零
0000c8  2600              MOVS     r6,#0
                  |L3.202|
;;;125    					}
;;;126    					
;;;127    					if( ret == 0x00 )
0000ca  b91e              CBNZ     r6,|L3.212|
;;;128    					{
;;;129    						App_Upgrade_Back.results = 0xFD;
0000cc  20fd              MOVS     r0,#0xfd
0000ce  4989              LDR      r1,|L3.756|
0000d0  7008              STRB     r0,[r1,#0]
0000d2  e01e              B        |L3.274|
                  |L3.212|
;;;130    					}
;;;131    					else	if( (System.status!=SYSTEM_OPENING) && (System.emission!=0x01) )	//正在开机、正在调谐、发射状态不能升级
0000d4  4886              LDR      r0,|L3.752|
0000d6  7ac0              LDRB     r0,[r0,#0xb]  ; System
0000d8  2806              CMP      r0,#6
0000da  d017              BEQ      |L3.268|
0000dc  4884              LDR      r0,|L3.752|
0000de  7d80              LDRB     r0,[r0,#0x16]  ; System
0000e0  2801              CMP      r0,#1
0000e2  d013              BEQ      |L3.268|
;;;132    					{
;;;133    						address = Get_Old_Application_Address()+(App_Upgrade.upgrade_package_num-1)*APPLICATION_PACK_SIZE;
0000e4  f7fffffe          BL       Get_Old_Application_Address
0000e8  4601              MOV      r1,r0
0000ea  487f              LDR      r0,|L3.744|
0000ec  7840              LDRB     r0,[r0,#1]  ; App_Upgrade
0000ee  1e40              SUBS     r0,r0,#1
0000f0  eb0128c0          ADD      r8,r1,r0,LSL #11
;;;134    						iap_write_appbin(address, App_Upgrade.upgrade_package, APPLICATION_PACK_SIZE);
0000f4  f44f6200          MOV      r2,#0x800
0000f8  497b              LDR      r1,|L3.744|
0000fa  1d89              ADDS     r1,r1,#6
0000fc  4640              MOV      r0,r8
0000fe  f7fffffe          BL       iap_write_appbin
;;;135    						
;;;136    						App_Upgrade_Back.results = 0xFE;
000102  20fe              MOVS     r0,#0xfe
000104  497b              LDR      r1,|L3.756|
000106  7008              STRB     r0,[r1,#0]
000108  e003              B        |L3.274|
                  |L3.266|
00010a  e047              B        |L3.412|
                  |L3.268|
;;;137    						
;;;138    					}
;;;139    					else
;;;140    					{
;;;141    						App_Upgrade_Back.results = 0xFD;
00010c  20fd              MOVS     r0,#0xfd
00010e  4979              LDR      r1,|L3.756|
000110  7008              STRB     r0,[r1,#0]
                  |L3.274|
;;;142    					}
;;;143    					
;;;144    					Send_App(function_code, (uint8_t *)&App_Upgrade_Back, sizeof(App_Upgrade_Back.results));
000112  2201              MOVS     r2,#1
000114  4977              LDR      r1,|L3.756|
000116  4668              MOV      r0,sp
000118  f7fffffe          BL       Send_App
;;;145    					
;;;146    					if( (App_Upgrade_Back.results == 0xFE) && (App_Upgrade.upgrade_package_total == App_Upgrade.upgrade_package_num) && (App_Upgrade.upgrade_package_total>0) )
00011c  4875              LDR      r0,|L3.756|
00011e  7800              LDRB     r0,[r0,#0]  ; App_Upgrade_Back
000120  28fe              CMP      r0,#0xfe
000122  d1b1              BNE      |L3.136|
000124  4870              LDR      r0,|L3.744|
000126  7800              LDRB     r0,[r0,#0]  ; App_Upgrade
000128  496f              LDR      r1,|L3.744|
00012a  7849              LDRB     r1,[r1,#1]  ; App_Upgrade
00012c  4288              CMP      r0,r1
00012e  d1ab              BNE      |L3.136|
000130  486d              LDR      r0,|L3.744|
000132  7800              LDRB     r0,[r0,#0]  ; App_Upgrade
000134  2800              CMP      r0,#0
000136  dd31              BLE      |L3.412|
;;;147    					{
;;;148    						if( Get_Old_Application_Address() == APPLICATION_ADDRESS_BASE+APPLICATION_ADDRESS_OFFSET_1 )
000138  f7fffffe          BL       Get_Old_Application_Address
00013c  496e              LDR      r1,|L3.760|
00013e  4288              CMP      r0,r1
000140  d10d              BNE      |L3.350|
;;;149    						{
;;;150    							APP_Version_1[0] = App_Upgrade.upgrade_version[0];
000142  4869              LDR      r0,|L3.744|
000144  7880              LDRB     r0,[r0,#2]  ; App_Upgrade
000146  496d              LDR      r1,|L3.764|
000148  7008              STRB     r0,[r1,#0]
;;;151    							APP_Version_1[1] = App_Upgrade.upgrade_version[1];
00014a  4867              LDR      r0,|L3.744|
00014c  78c0              LDRB     r0,[r0,#3]
00014e  7048              STRB     r0,[r1,#1]
;;;152    							APP_Version_1[2] = App_Upgrade.upgrade_version[2];
000150  4865              LDR      r0,|L3.744|
000152  7900              LDRB     r0,[r0,#4]
000154  7088              STRB     r0,[r1,#2]
;;;153    							APP_Version_1[3] = App_Upgrade.upgrade_version[3];
000156  4864              LDR      r0,|L3.744|
000158  7940              LDRB     r0,[r0,#5]
00015a  70c8              STRB     r0,[r1,#3]
00015c  e00c              B        |L3.376|
                  |L3.350|
;;;154    						}
;;;155    						else
;;;156    						{
;;;157    							APP_Version_2[0] = App_Upgrade.upgrade_version[0];
00015e  4862              LDR      r0,|L3.744|
000160  7880              LDRB     r0,[r0,#2]  ; App_Upgrade
000162  4967              LDR      r1,|L3.768|
000164  7008              STRB     r0,[r1,#0]
;;;158    							APP_Version_2[1] = App_Upgrade.upgrade_version[1];
000166  4860              LDR      r0,|L3.744|
000168  78c0              LDRB     r0,[r0,#3]
00016a  7048              STRB     r0,[r1,#1]
;;;159    							APP_Version_2[2] = App_Upgrade.upgrade_version[2];
00016c  485e              LDR      r0,|L3.744|
00016e  7900              LDRB     r0,[r0,#4]
000170  7088              STRB     r0,[r1,#2]
;;;160    							APP_Version_2[3] = App_Upgrade.upgrade_version[3];
000172  485d              LDR      r0,|L3.744|
000174  7940              LDRB     r0,[r0,#5]
000176  70c8              STRB     r0,[r1,#3]
                  |L3.376|
;;;161    						}
;;;162    						
;;;163    						APP_Version_Write(APPLICATION_VERSION_ADDRESS, APP_Version_1, APP_Version_2);
000178  4a61              LDR      r2,|L3.768|
00017a  4960              LDR      r1,|L3.764|
00017c  4861              LDR      r0,|L3.772|
00017e  f7fffffe          BL       APP_Version_Write
;;;164    						APP_Version_Read(APPLICATION_VERSION_ADDRESS, APP_Version_1, APP_Version_2);
000182  4a5f              LDR      r2,|L3.768|
000184  495d              LDR      r1,|L3.764|
000186  485f              LDR      r0,|L3.772|
000188  f7fffffe          BL       APP_Version_Read
;;;165    						
;;;166    						//App_printf("App Upgrade...\r\n");
;;;167    						vTaskDelay(1000);		//等待发送完成
00018c  e000              B        |L3.400|
                  |L3.398|
00018e  e006              B        |L3.414|
                  |L3.400|
000190  f44f707a          MOV      r0,#0x3e8
000194  f7fffffe          BL       vTaskDelay
;;;168    						
;;;169    						BootLoad_Jump();
000198  f7fffffe          BL       BootLoad_Jump
                  |L3.412|
00019c  e098              B        |L3.720|
                  |L3.414|
;;;170    					}
;;;171    				}
;;;172    				
;;;173    				else	if( (function_code[0]==0x0F) && (function_code[1]==0x01) )		//修改System.CAN_ID,ip,port
00019e  f89d0000          LDRB     r0,[sp,#0]
0001a2  280f              CMP      r0,#0xf
0001a4  d15c              BNE      |L3.608|
0001a6  f89d0001          LDRB     r0,[sp,#1]
0001aa  2801              CMP      r0,#1
0001ac  d158              BNE      |L3.608|
;;;174    				{
;;;175    					System.Init_Mark=0;				//不是初始化指令，为0表示要写IP和Port进Flash
0001ae  2000              MOVS     r0,#0
0001b0  494f              LDR      r1,|L3.752|
0001b2  f88100a6          STRB     r0,[r1,#0xa6]
;;;176    					System.CAN_ID[0] = App_SetID.CAN_ID[0];
0001b6  4854              LDR      r0,|L3.776|
0001b8  7800              LDRB     r0,[r0,#0]  ; App_SetID
0001ba  7008              STRB     r0,[r1,#0]
;;;177    					System.Ip[0]=App_SetID.IP[0];
0001bc  4852              LDR      r0,|L3.776|
0001be  7840              LDRB     r0,[r0,#1]  ; App_SetID
0001c0  f88100a0          STRB     r0,[r1,#0xa0]
;;;178    					System.Ip[1]=App_SetID.IP[1];
0001c4  4850              LDR      r0,|L3.776|
0001c6  7881              LDRB     r1,[r0,#2]
0001c8  4849              LDR      r0,|L3.752|
0001ca  f88010a1          STRB     r1,[r0,#0xa1]
;;;179    					System.Ip[2]=App_SetID.IP[2];
0001ce  484e              LDR      r0,|L3.776|
0001d0  78c1              LDRB     r1,[r0,#3]
0001d2  4847              LDR      r0,|L3.752|
0001d4  f88010a2          STRB     r1,[r0,#0xa2]
;;;180    					System.Ip[3]=App_SetID.IP[3];
0001d8  484b              LDR      r0,|L3.776|
0001da  7901              LDRB     r1,[r0,#4]
0001dc  4844              LDR      r0,|L3.752|
0001de  f88010a3          STRB     r1,[r0,#0xa3]
;;;181    					System.Port[0]=App_SetID.Socket0_Port[0];
0001e2  4849              LDR      r0,|L3.776|
0001e4  7940              LDRB     r0,[r0,#5]  ; App_SetID
0001e6  4942              LDR      r1,|L3.752|
0001e8  f88100a4          STRB     r0,[r1,#0xa4]
;;;182    					System.Port[1]=App_SetID.Socket0_Port[1];
0001ec  4846              LDR      r0,|L3.776|
0001ee  7981              LDRB     r1,[r0,#6]
0001f0  483f              LDR      r0,|L3.752|
0001f2  f88010a5          STRB     r1,[r0,#0xa5]
;;;183    					
;;;184    					Alarm_threshold.Transmitte_id[0] = System.CAN_ID[0];	//存在flash
0001f6  7800              LDRB     r0,[r0,#0]  ; System
0001f8  4944              LDR      r1,|L3.780|
0001fa  f8810026          STRB     r0,[r1,#0x26]
;;;185    
;;;186    					if( System.already_init == 0x01 )
0001fe  483c              LDR      r0,|L3.752|
000200  7880              LDRB     r0,[r0,#2]  ; System
000202  2801              CMP      r0,#1
000204  d101              BNE      |L3.522|
;;;187    						sys_init = 0x01;
000206  2701              MOVS     r7,#1
000208  e000              B        |L3.524|
                  |L3.522|
;;;188    					else
;;;189    						sys_init = 0x00;
00020a  2700              MOVS     r7,#0
                  |L3.524|
;;;190    					
;;;191    					if( InternalFlash_SaveData_1(sys_init) == 0x00 )
00020c  4638              MOV      r0,r7
00020e  f7fffffe          BL       InternalFlash_SaveData_1
000212  b918              CBNZ     r0,|L3.540|
;;;192    					{
;;;193    						App_SetID_Back.results = 0xFD;
000214  20fd              MOVS     r0,#0xfd
000216  493e              LDR      r1,|L3.784|
000218  7008              STRB     r0,[r1,#0]
00021a  e004              B        |L3.550|
                  |L3.540|
;;;194    						//App_printf("Set System ID fail\r\n");
;;;195    					}
;;;196    					else
;;;197    					{
;;;198    						Flash_to_AcceptAPP();
00021c  f7fffffe          BL       Flash_to_AcceptAPP
;;;199    						
;;;200    						App_SetID_Back.results = 0xFE;
000220  20fe              MOVS     r0,#0xfe
000222  493b              LDR      r1,|L3.784|
000224  7008              STRB     r0,[r1,#0]
                  |L3.550|
;;;201    						//App_printf("Set System ID sucessfully\r\n");
;;;202    					}
;;;203    					
;;;204    					Send_App(function_code, (uint8_t *)&App_SetID_Back, sizeof(App_SetID_Back));
000226  2201              MOVS     r2,#1
000228  4939              LDR      r1,|L3.784|
00022a  4668              MOV      r0,sp
00022c  f7fffffe          BL       Send_App
;;;205    					vTaskDelay(50);
000230  2032              MOVS     r0,#0x32
000232  f7fffffe          BL       vTaskDelay
;;;206    					__set_FAULTMASK(1);//关闭中断
000236  2001              MOVS     r0,#1
000238  f3808813          MSR      FAULTMASK,r0
00023c  bf00              NOP      
;;;207    					NVIC_SystemReset();//软件复位,保证网口重新初始化
00023e  bf00              NOP      
000240  f3bf8f4f          DSB      
000244  4833              LDR      r0,|L3.788|
000246  6800              LDR      r0,[r0,#0]
000248  f40060e0          AND      r0,r0,#0x700
00024c  4932              LDR      r1,|L3.792|
00024e  4308              ORRS     r0,r0,r1
000250  1d00              ADDS     r0,r0,#4
000252  4930              LDR      r1,|L3.788|
000254  6008              STR      r0,[r1,#0]
000256  f3bf8f4f          DSB      
00025a  bf00              NOP      
00025c  bf00              NOP      
                  |L3.606|
00025e  e7fe              B        |L3.606|
                  |L3.608|
;;;208    				}
;;;209    				else	if( (function_code[0]==0x10) && (function_code[1]==0x01) )		//查询APP版本号
000260  f89d0000          LDRB     r0,[sp,#0]
000264  2810              CMP      r0,#0x10
000266  d133              BNE      |L3.720|
000268  f89d0001          LDRB     r0,[sp,#1]
00026c  2801              CMP      r0,#1
00026e  d12f              BNE      |L3.720|
;;;210    				{
;;;211    					App_Version_Back.CAN_ID[0] = System.CAN_ID[0];
000270  481f              LDR      r0,|L3.752|
000272  7800              LDRB     r0,[r0,#0]  ; System
000274  4929              LDR      r1,|L3.796|
000276  7008              STRB     r0,[r1,#0]
;;;212    					App_Version_Back.emit_type[0] = NEW_PROCOTOL;			//NEW_PROCOTOL	locate in main.h
000278  2001              MOVS     r0,#1
00027a  7048              STRB     r0,[r1,#1]
;;;213    					App_Version_Back.version[0] = (APP_VERSION>>24)&0xFF;
00027c  2020              MOVS     r0,#0x20
00027e  7088              STRB     r0,[r1,#2]
;;;214    					App_Version_Back.version[1] = (APP_VERSION>>16)&0xFF;
000280  2121              MOVS     r1,#0x21
000282  4826              LDR      r0,|L3.796|
000284  70c1              STRB     r1,[r0,#3]
;;;215    					App_Version_Back.version[2] = (APP_VERSION>>8)&0xFF;
000286  2110              MOVS     r1,#0x10
000288  7101              STRB     r1,[r0,#4]
;;;216    					App_Version_Back.version[3] = (APP_VERSION>>0)&0xFF;
00028a  2124              MOVS     r1,#0x24
00028c  7141              STRB     r1,[r0,#5]
;;;217    					App_Version_Back.App_Address = Get_APP_Version()+1;
00028e  f7fffffe          BL       Get_APP_Version
000292  1c40              ADDS     r0,r0,#1
000294  4921              LDR      r1,|L3.796|
000296  7188              STRB     r0,[r1,#6]
;;;218    					App_Version_Back.IP[0]=IP_Addr[0];
000298  4821              LDR      r0,|L3.800|
00029a  7800              LDRB     r0,[r0,#0]  ; IP_Addr
00029c  71c8              STRB     r0,[r1,#7]
;;;219    					App_Version_Back.IP[1]=IP_Addr[1];
00029e  4820              LDR      r0,|L3.800|
0002a0  7841              LDRB     r1,[r0,#1]  ; IP_Addr
0002a2  481e              LDR      r0,|L3.796|
0002a4  7201              STRB     r1,[r0,#8]
;;;220    					App_Version_Back.IP[2]=IP_Addr[2];
0002a6  481e              LDR      r0,|L3.800|
0002a8  7881              LDRB     r1,[r0,#2]  ; IP_Addr
0002aa  481c              LDR      r0,|L3.796|
0002ac  7241              STRB     r1,[r0,#9]
;;;221    					App_Version_Back.IP[3]=IP_Addr[3];
0002ae  481c              LDR      r0,|L3.800|
0002b0  78c1              LDRB     r1,[r0,#3]  ; IP_Addr
0002b2  481a              LDR      r0,|L3.796|
0002b4  7281              STRB     r1,[r0,#0xa]
;;;222    					App_Version_Back.Socket0_Port[0]=S0_Port[0];
0002b6  481b              LDR      r0,|L3.804|
0002b8  7800              LDRB     r0,[r0,#0]  ; S0_Port
0002ba  4918              LDR      r1,|L3.796|
0002bc  72c8              STRB     r0,[r1,#0xb]
;;;223    					App_Version_Back.Socket0_Port[1]=S0_Port[1];
0002be  4819              LDR      r0,|L3.804|
0002c0  7841              LDRB     r1,[r0,#1]  ; S0_Port
0002c2  4816              LDR      r0,|L3.796|
0002c4  7301              STRB     r1,[r0,#0xc]
;;;224    					
;;;225    					Send_App(function_code, (uint8_t *)&App_Version_Back, sizeof(App_Version_Back));//暂时没改(升级网口)
0002c6  220d              MOVS     r2,#0xd
0002c8  4601              MOV      r1,r0
0002ca  4668              MOV      r0,sp
0002cc  f7fffffe          BL       Send_App
                  |L3.720|
;;;226    				}
;;;227    				else																	//保留
;;;228    				{
;;;229    
;;;230    				}
;;;231    			}
;;;232    			else
;;;233    			{
;;;234    				
;;;235    			}
;;;236    		}
;;;237    		else
;;;238    		{
;;;239    
;;;240    		}
;;;241    		
;;;242    #endif
;;;243    		vTaskDelay(100);
0002d0  2064              MOVS     r0,#0x64
0002d2  f7fffffe          BL       vTaskDelay
                  |L3.726|
0002d6  e698              B        |L3.10|
;;;244    	}
;;;245    }
;;;246    
                          ENDP

                  |L3.728|
                          DCD      RxBuf_len
                  |L3.732|
                          DCD      RxBuf
                  |L3.736|
                          DCD      RxBuf_FromUpgrade
                  |L3.740|
                          DCD      RxBuf_FromUpgrade_len
                  |L3.744|
                          DCD      App_Upgrade
                  |L3.748|
                          DCD      0x20211024
                  |L3.752|
                          DCD      System
                  |L3.756|
                          DCD      App_Upgrade_Back
                  |L3.760|
                          DCD      0x08002000
                  |L3.764|
                          DCD      APP_Version_1
                  |L3.768|
                          DCD      APP_Version_2
                  |L3.772|
                          DCD      0x08038800
                  |L3.776|
                          DCD      App_SetID
                  |L3.780|
                          DCD      Alarm_threshold
                  |L3.784|
                          DCD      App_SetID_Back
                  |L3.788|
                          DCD      0xe000ed0c
                  |L3.792|
                          DCD      0x05fa0000
                  |L3.796|
                          DCD      App_Version_Back
                  |L3.800|
                          DCD      IP_Addr
                  |L3.804|
                          DCD      S0_Port

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  App_Upgrade
                          %        2054
                  App_Version_Back
                          %        13
                  RxBuf_FromUpgrade
                          %        2100
                  RxBuf
                          %        2048

                          AREA ||.data||, DATA, ALIGN=2

                  App_Upgrade_Back
000000  00                DCB      0x00
                  App_SetID
000001  000000            DCB      0x00,0x00,0x00
                          DCD      0x00000000
                  App_SetID_Back
000008  00000000          DCB      0x00,0x00,0x00,0x00
                  xHandleTask_App
                          DCD      0x00000000
                  RxBuf_FromUpgrade_len
000010  0000              DCW      0x0000

;*** Start embedded assembler ***

#line 1 "..\\..\\Task\\Task_App.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_Task_App_c_146c7ef6____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_Task_App_c_146c7ef6____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_Task_App_c_146c7ef6____REVSH|
#line 128
|__asm___10_Task_App_c_146c7ef6____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
