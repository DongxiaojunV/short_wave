; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\short_wave\obj\task_hardware_monitor.o --asm_dir=.\short_wave\List\ --list_dir=.\short_wave\List\ --depend=.\short_wave\obj\task_hardware_monitor.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\adc -I..\..\User\rtc -I..\..\User\internal_flash -I..\..\User\iwdg -I..\..\Task -I..\..\User\can -I..\..\User\firmware_upgrade -I..\..\User\STMFLASH -I..\..\User\IAP -I.\RTE\_Short_Wave -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\short_wave\obj\task_hardware_monitor.crf ..\..\Task\Task_Hardware_Monitor.c]
                          THUMB

                          AREA ||i.Task_Hardware_Monitor||, CODE, READONLY, ALIGN=2

                  Task_Hardware_Monitor PROC
;;;10     
;;;11     void Task_Hardware_Monitor(void *pvParameters)
000000  b50e              PUSH     {r1-r3,lr}
;;;12     {
;;;13         uint8_t i = 0;
000002  2400              MOVS     r4,#0
;;;14         static uint8_t inquire_counter = 0;
;;;15         int ret;
;;;16         uint8_t temp_freq_str[10] = "00000000";
000004  4afe              LDR      r2,|L1.1024|
000006  ca07              LDM      r2,{r0-r2}
000008  e88d0007          STM      sp,{r0-r2}
;;;17     
;;;18         Run_Diagram_data.mode = '0';	//初始化
00000c  2030              MOVS     r0,#0x30
00000e  49fd              LDR      r1,|L1.1028|
000010  7008              STRB     r0,[r1,#0]
;;;19         Run_Diagram_data.power[0] = '0';
000012  7348              STRB     r0,[r1,#0xd]
;;;20         Run_Diagram_data.power[1] = '0';
000014  2130              MOVS     r1,#0x30
000016  48fb              LDR      r0,|L1.1028|
000018  7381              STRB     r1,[r0,#0xe]
;;;21         Run_Diagram_data.power[2] = '0';
00001a  73c1              STRB     r1,[r0,#0xf]
;;;22         memset(Run_Diagram_data.Freq, 0, sizeof(Run_Diagram_data.Freq));
00001c  1c40              ADDS     r0,r0,#1
00001e  2100              MOVS     r1,#0
000020  6001              STR      r1,[r0,#0]  ; Run_Diagram_data
000022  6041              STR      r1,[r0,#4]  ; Run_Diagram_data
000024  6081              STR      r1,[r0,#8]  ; Run_Diagram_data
;;;23     
;;;24         Monitor.hard_control = 0;
000026  2000              MOVS     r0,#0
000028  49f7              LDR      r1,|L1.1032|
00002a  f88100ca          STRB     r0,[r1,#0xca]
;;;25         Monitor.no_respond_count = 0;
00002e  f88100c9          STRB     r0,[r1,#0xc9]
;;;26     
;;;27         Monitor.need_open = 0;
000032  f88100cb          STRB     r0,[r1,#0xcb]
;;;28         Monitor.need_close = 0;
000036  f88100cc          STRB     r0,[r1,#0xcc]
;;;29         Monitor.need_emit = 0;
00003a  f88100cd          STRB     r0,[r1,#0xcd]
;;;30     
;;;31         while(1)
00003e  e2e8              B        |L1.1554|
                  |L1.64|
;;;32         {
;;;33     #if	1
;;;34     			if(Monitor.no_respond_count==60||Updata_time_flag==1)	//与上位机通信异常,进入硬件接管
000040  48f1              LDR      r0,|L1.1032|
000042  f89000c9          LDRB     r0,[r0,#0xc9]  ; Monitor
000046  283c              CMP      r0,#0x3c
000048  d003              BEQ      |L1.82|
00004a  48f0              LDR      r0,|L1.1036|
00004c  7800              LDRB     r0,[r0,#0]  ; Updata_time_flag
00004e  2801              CMP      r0,#1
000050  d10b              BNE      |L1.106|
                  |L1.82|
;;;35     			{
;;;36     				Updata_time_flag=2;		//上电只用一次
000052  2002              MOVS     r0,#2
000054  49ed              LDR      r1,|L1.1036|
000056  7008              STRB     r0,[r1,#0]
;;;37     				if(Hardware_Time_Count>=Hardware_Time)		//1分钟同步一次时间
000058  48ed              LDR      r0,|L1.1040|
00005a  7800              LDRB     r0,[r0,#0]  ; Hardware_Time_Count
00005c  280c              CMP      r0,#0xc
00005e  db04              BLT      |L1.106|
;;;38     				{
;;;39     					NTP_Pack_Send();
000060  f7fffffe          BL       NTP_Pack_Send
;;;40     					Hardware_Time_Count=0;
000064  2000              MOVS     r0,#0
000066  49ea              LDR      r1,|L1.1040|
000068  7008              STRB     r0,[r1,#0]
                  |L1.106|
;;;41     				}
;;;42     			}
;;;43             if( (Monitor.hard_control==1) && (flash_3_once_flag==1) )	//硬件接管
00006a  48e7              LDR      r0,|L1.1032|
00006c  f89000ca          LDRB     r0,[r0,#0xca]  ; Monitor
000070  2801              CMP      r0,#1
                  |L1.114|
000072  d177              BNE      |L1.356|
000074  48e7              LDR      r0,|L1.1044|
000076  6800              LDR      r0,[r0,#0]  ; flash_3_once_flag
000078  2801              CMP      r0,#1
00007a  d1fa              BNE      |L1.114|
;;;44             {
;;;45                 PC_Cmd.mode = Run_Diagram_data.mode - '0';				//运行图发射命令更新到	PC_Cmd
00007c  48e1              LDR      r0,|L1.1028|
00007e  7800              LDRB     r0,[r0,#0]  ; Run_Diagram_data
000080  3830              SUBS     r0,r0,#0x30
000082  49e5              LDR      r1,|L1.1048|
000084  7008              STRB     r0,[r1,#0]
;;;46                 memcpy(PC_Cmd.freq, Run_Diagram_data.Freq, 12);
000086  48df              LDR      r0,|L1.1028|
000088  1c40              ADDS     r0,r0,#1
00008a  6802              LDR      r2,[r0,#0]  ; Run_Diagram_data
00008c  608a              STR      r2,[r1,#8]  ; PC_Cmd
00008e  6842              LDR      r2,[r0,#4]  ; Run_Diagram_data
000090  60ca              STR      r2,[r1,#0xc]  ; PC_Cmd
000092  6880              LDR      r0,[r0,#8]  ; Run_Diagram_data
000094  6108              STR      r0,[r1,#0x10]  ; PC_Cmd
;;;47                 PC_Cmd.power[0] = Run_Diagram_data.power[0];
000096  48db              LDR      r0,|L1.1028|
000098  7b40              LDRB     r0,[r0,#0xd]  ; Run_Diagram_data
00009a  7088              STRB     r0,[r1,#2]
;;;48                 PC_Cmd.power[1] = Run_Diagram_data.power[1];
00009c  48d9              LDR      r0,|L1.1028|
00009e  7b81              LDRB     r1,[r0,#0xe]
0000a0  48dd              LDR      r0,|L1.1048|
0000a2  70c1              STRB     r1,[r0,#3]
;;;49                 PC_Cmd.power[2] = Run_Diagram_data.power[2];
0000a4  48d7              LDR      r0,|L1.1028|
0000a6  7bc1              LDRB     r1,[r0,#0xf]
0000a8  48db              LDR      r0,|L1.1048|
0000aa  7101              STRB     r1,[r0,#4]
;;;50     					
;;;51     						Power_Range(&GT2000_Tx,PC_Cmd.power);		//转换为功率数据
0000ac  1c81              ADDS     r1,r0,#2
0000ae  48db              LDR      r0,|L1.1052|
0000b0  f7fffffe          BL       Power_Range
;;;52     					
;;;53                 PC_Cmd.channel[0] = 0x01;
0000b4  2001              MOVS     r0,#1
0000b6  49d8              LDR      r1,|L1.1048|
0000b8  7148              STRB     r0,[r1,#5]
;;;54                 PC_Cmd.channel[1] = 0x01;
0000ba  2101              MOVS     r1,#1
0000bc  48d6              LDR      r0,|L1.1048|
0000be  7181              STRB     r1,[r0,#6]
;;;55                 PC_Cmd.channel[2] = 0x01;
0000c0  71c1              STRB     r1,[r0,#7]
;;;56     
;;;57                 if( Monitor.need_open == 0x01 )									//需要开机
0000c2  48d1              LDR      r0,|L1.1032|
0000c4  f89000cb          LDRB     r0,[r0,#0xcb]  ; Monitor
0000c8  2801              CMP      r0,#1
0000ca  d15d              BNE      |L1.392|
;;;58                 {
;;;59                     if( System.open == 0x02 )		//已经开机
0000cc  48d4              LDR      r0,|L1.1056|
0000ce  7b00              LDRB     r0,[r0,#0xc]  ; System
0000d0  2802              CMP      r0,#2
0000d2  d104              BNE      |L1.222|
;;;60                     {               
;;;61                         Monitor.need_open = 0;
0000d4  2000              MOVS     r0,#0
0000d6  49cc              LDR      r1,|L1.1032|
0000d8  f88100cb          STRB     r0,[r1,#0xcb]
0000dc  e04c              B        |L1.376|
                  |L1.222|
;;;62                     }
;;;63                     else	if( System.open == 0 )	//关机了，需要开机
0000de  48d0              LDR      r0,|L1.1056|
0000e0  7b00              LDRB     r0,[r0,#0xc]  ; System
0000e2  bb40              CBNZ     r0,|L1.310|
;;;64                     {
;;;65                         if( System.Voltage > 40.0 )
0000e4  49ce              LDR      r1,|L1.1056|
0000e6  6f48              LDR      r0,[r1,#0x74]  ; System
0000e8  f7fffffe          BL       __aeabi_f2d
0000ec  4606              MOV      r6,r0
0000ee  2200              MOVS     r2,#0
0000f0  4bcc              LDR      r3,|L1.1060|
0000f2  f7fffffe          BL       __aeabi_cdrcmple
0000f6  d20d              BCS      |L1.276|
;;;66                         {
;;;67                             System.open = 0x02;
0000f8  2002              MOVS     r0,#2
0000fa  49c9              LDR      r1,|L1.1056|
0000fc  7308              STRB     r0,[r1,#0xc]
;;;68                             Monitor.need_open = 0;
0000fe  2000              MOVS     r0,#0
000100  49c1              LDR      r1,|L1.1032|
000102  f88100cb          STRB     r0,[r1,#0xcb]
;;;69     												System.status = SYSTEM_STANDBY;
000106  2002              MOVS     r0,#2
000108  49c5              LDR      r1,|L1.1056|
00010a  72c8              STRB     r0,[r1,#0xb]
;;;70                             Power_onBack.results[0]=0xFC;
00010c  20fc              MOVS     r0,#0xfc
00010e  49c6              LDR      r1,|L1.1064|
000110  7048              STRB     r0,[r1,#1]
000112  e031              B        |L1.376|
                  |L1.276|
;;;71                         }
;;;72                         else
;;;73                         {
;;;74                             System.open = 0x01;
000114  2001              MOVS     r0,#1
000116  49c2              LDR      r1,|L1.1056|
000118  7308              STRB     r0,[r1,#0xc]
;;;75     												Monitor.need_open = 0x01;
00011a  49bb              LDR      r1,|L1.1032|
00011c  f88100cb          STRB     r0,[r1,#0xcb]
;;;76                             System.status = SYSTEM_OPENING;
000120  2006              MOVS     r0,#6
000122  49bf              LDR      r1,|L1.1056|
000124  72c8              STRB     r0,[r1,#0xb]
;;;77     
;;;78                             xTaskNotify(xHandleTask_MT2000,	//开机
000126  2300              MOVS     r3,#0
000128  2201              MOVS     r2,#1
00012a  0211              LSLS     r1,r2,#8
00012c  48bf              LDR      r0,|L1.1068|
00012e  6800              LDR      r0,[r0,#0]  ; xHandleTask_MT2000
000130  f7fffffe          BL       xTaskGenericNotify
000134  e020              B        |L1.376|
                  |L1.310|
;;;79                                         BIT_8,
;;;80                                         eSetBits);
;;;81                         }
;;;82                     }
;;;83     								else	if( System.open == 0x01 )		//正在开机
000136  48ba              LDR      r0,|L1.1056|
000138  7b00              LDRB     r0,[r0,#0xc]  ; System
00013a  2801              CMP      r0,#1
00013c  d11c              BNE      |L1.376|
;;;84     								{ 
;;;85     										if( System.Voltage > 40.0 )
00013e  49b8              LDR      r1,|L1.1056|
000140  6f48              LDR      r0,[r1,#0x74]  ; System
000142  f7fffffe          BL       __aeabi_f2d
000146  4606              MOV      r6,r0
000148  2200              MOVS     r2,#0
00014a  4bb6              LDR      r3,|L1.1060|
00014c  f7fffffe          BL       __aeabi_cdrcmple
000150  d209              BCS      |L1.358|
;;;86     										{
;;;87     												Monitor.need_open = 0;
000152  2000              MOVS     r0,#0
000154  49ac              LDR      r1,|L1.1032|
000156  f88100cb          STRB     r0,[r1,#0xcb]
;;;88     												System.open = 0x02;
00015a  2002              MOVS     r0,#2
00015c  49b0              LDR      r1,|L1.1056|
00015e  7308              STRB     r0,[r1,#0xc]
;;;89     												System.status = SYSTEM_STANDBY;
000160  72c8              STRB     r0,[r1,#0xb]
000162  e009              B        |L1.376|
                  |L1.356|
000164  e24e              B        |L1.1540|
                  |L1.358|
;;;90     										}
;;;91     										else
;;;92     										{
;;;93     												System.open = 0x01;
000166  2001              MOVS     r0,#1
000168  49ad              LDR      r1,|L1.1056|
00016a  7308              STRB     r0,[r1,#0xc]
;;;94     												Monitor.need_open = 0x01;
00016c  49a6              LDR      r1,|L1.1032|
00016e  f88100cb          STRB     r0,[r1,#0xcb]
;;;95     												System.status = SYSTEM_OPENING;
000172  2006              MOVS     r0,#6
000174  49aa              LDR      r1,|L1.1056|
000176  72c8              STRB     r0,[r1,#0xb]
                  |L1.376|
;;;96     										}
;;;97     								}
;;;98     								
;;;99     								if( get_history_alarm() == 0x01 )
000178  f7fffffe          BL       get_history_alarm
00017c  2801              CMP      r0,#1
00017e  d102              BNE      |L1.390|
;;;100    								{
;;;101    									System.status = SYSTEM_ALARM;
000180  2011              MOVS     r0,#0x11
000182  49a7              LDR      r1,|L1.1056|
000184  72c8              STRB     r0,[r1,#0xb]
                  |L1.390|
000186  e212              B        |L1.1454|
                  |L1.392|
;;;102    								}
;;;103    							}
;;;104                else	if( Monitor.need_close == 0x01 )						//需要关机
000188  489f              LDR      r0,|L1.1032|
00018a  f89000cc          LDRB     r0,[r0,#0xcc]  ; Monitor
00018e  2801              CMP      r0,#1
000190  d146              BNE      |L1.544|
;;;105                {
;;;106                    if( (System.open == 0) && (System.Voltage < 40.0) )					//已经关机了
000192  48a3              LDR      r0,|L1.1056|
000194  7b00              LDRB     r0,[r0,#0xc]  ; System
000196  b9d8              CBNZ     r0,|L1.464|
000198  49a1              LDR      r1,|L1.1056|
00019a  6f48              LDR      r0,[r1,#0x74]  ; System
00019c  f7fffffe          BL       __aeabi_f2d
0001a0  4606              MOV      r6,r0
0001a2  2200              MOVS     r2,#0
0001a4  4b9f              LDR      r3,|L1.1060|
0001a6  f7fffffe          BL       __aeabi_cdcmple
0001aa  d211              BCS      |L1.464|
;;;107                    {
;;;108                        System.open = 0x00;
0001ac  2000              MOVS     r0,#0
0001ae  499c              LDR      r1,|L1.1056|
0001b0  7308              STRB     r0,[r1,#0xc]
;;;109                        Monitor.need_close = 0;
0001b2  4995              LDR      r1,|L1.1032|
0001b4  f88100cc          STRB     r0,[r1,#0xcc]
;;;110    
;;;111                        if( get_history_alarm() == 0x01 )
0001b8  f7fffffe          BL       get_history_alarm
0001bc  2801              CMP      r0,#1
0001be  d103              BNE      |L1.456|
;;;112                        {
;;;113                            System.status = SYSTEM_ALARM;
0001c0  2011              MOVS     r0,#0x11
0001c2  4997              LDR      r1,|L1.1056|
0001c4  72c8              STRB     r0,[r1,#0xb]
0001c6  e1f2              B        |L1.1454|
                  |L1.456|
;;;114                        }
;;;115                        else
;;;116                        {
;;;117                            System.status = SYSTEM_SHUTDOWN;
0001c8  2004              MOVS     r0,#4
0001ca  4995              LDR      r1,|L1.1056|
0001cc  72c8              STRB     r0,[r1,#0xb]
0001ce  e1ee              B        |L1.1454|
                  |L1.464|
;;;118                        }
;;;119                    }
;;;120                    else	if( (System.open == 0x02) || ( System.status == SYSTEM_STANDBY ) )		//开机了，需要关机
0001d0  4893              LDR      r0,|L1.1056|
0001d2  7b00              LDRB     r0,[r0,#0xc]  ; System
0001d4  2802              CMP      r0,#2
0001d6  d003              BEQ      |L1.480|
0001d8  4891              LDR      r0,|L1.1056|
0001da  7ac0              LDRB     r0,[r0,#0xb]  ; System
0001dc  2802              CMP      r0,#2
0001de  d1d2              BNE      |L1.390|
                  |L1.480|
;;;121                    {
;;;122                        System.close = 1;
0001e0  2001              MOVS     r0,#1
0001e2  498f              LDR      r1,|L1.1056|
0001e4  7348              STRB     r0,[r1,#0xd]
;;;123                        Monitor.need_close = 0x00;
0001e6  2000              MOVS     r0,#0
0001e8  4987              LDR      r1,|L1.1032|
0001ea  f88100cc          STRB     r0,[r1,#0xcc]
;;;124                        xTaskNotify(xHandleTask_MT2000,	//关机
0001ee  2300              MOVS     r3,#0
0001f0  2201              MOVS     r2,#1
0001f2  0251              LSLS     r1,r2,#9
0001f4  488d              LDR      r0,|L1.1068|
0001f6  6800              LDR      r0,[r0,#0]  ; xHandleTask_MT2000
0001f8  f7fffffe          BL       xTaskGenericNotify
;;;125                                    BIT_9,
;;;126                                    eSetBits);
;;;127    
;;;128                        for(i=0; i<30; i++)				//等待关机成功
0001fc  2400              MOVS     r4,#0
0001fe  e00c              B        |L1.538|
                  |L1.512|
;;;129                        {
;;;130                            if( (System.close == 0) || (Monitor.hard_control==0) )		//关机成功或者退出硬件接管	详见Task_MT2000()关机操作
000200  4887              LDR      r0,|L1.1056|
000202  7b40              LDRB     r0,[r0,#0xd]  ; System
000204  b118              CBZ      r0,|L1.526|
000206  4880              LDR      r0,|L1.1032|
000208  f89000ca          LDRB     r0,[r0,#0xca]  ; Monitor
00020c  b900              CBNZ     r0,|L1.528|
                  |L1.526|
;;;131                                break;
00020e  e006              B        |L1.542|
                  |L1.528|
;;;132                            else
;;;133                                vTaskDelay(100);
000210  2064              MOVS     r0,#0x64
000212  f7fffffe          BL       vTaskDelay
000216  1c60              ADDS     r0,r4,#1              ;128
000218  b2c4              UXTB     r4,r0                 ;128
                  |L1.538|
00021a  2c1e              CMP      r4,#0x1e              ;128
00021c  dbf0              BLT      |L1.512|
                  |L1.542|
00021e  e1c6              B        |L1.1454|
                  |L1.544|
;;;134                        }
;;;135                    }
;;;136                }
;;;137                else	if( (PC_Cmd.mode==0x00) && (System.emission==0x01) )	//需要停止
000220  487d              LDR      r0,|L1.1048|
000222  7800              LDRB     r0,[r0,#0]  ; PC_Cmd
000224  b990              CBNZ     r0,|L1.588|
000226  487e              LDR      r0,|L1.1056|
000228  7d80              LDRB     r0,[r0,#0x16]  ; System
00022a  2801              CMP      r0,#1
00022c  d10e              BNE      |L1.588|
;;;138                {
;;;139    
;;;140                    if( System.stop == 0x00 )
00022e  487c              LDR      r0,|L1.1056|
000230  7d40              LDRB     r0,[r0,#0x15]  ; System
000232  2800              CMP      r0,#0
000234  d1a7              BNE      |L1.390|
;;;141                    {
;;;142                        System.stop = 0x01;
000236  2001              MOVS     r0,#1
000238  4979              LDR      r1,|L1.1056|
00023a  7548              STRB     r0,[r1,#0x15]
;;;143                        xTaskNotify(xHandleTask_MT2000,		//停止发射
00023c  2300              MOVS     r3,#0
00023e  2201              MOVS     r2,#1
000240  4611              MOV      r1,r2
000242  487a              LDR      r0,|L1.1068|
000244  6800              LDR      r0,[r0,#0]  ; xHandleTask_MT2000
000246  f7fffffe          BL       xTaskGenericNotify
00024a  e1b0              B        |L1.1454|
                  |L1.588|
;;;144                                    BIT_0,
;;;145                                    eSetBits);
;;;146                    }
;;;147                    else
;;;148                    {
;;;149                        //App_printf("Task_Hardware_Monitor Stopp not execute!\r\n");
;;;150                    }
;;;151                }
;;;152                else	if( Monitor.need_emit == 0x00 )							//是否需要发射
00024c  486e              LDR      r0,|L1.1032|
00024e  f89000cd          LDRB     r0,[r0,#0xcd]  ; Monitor
000252  2800              CMP      r0,#0
000254  d197              BNE      |L1.390|
;;;153                {
;;;154                    if( System.emission==0x01 )							//发射状态
000256  4872              LDR      r0,|L1.1056|
000258  7d80              LDRB     r0,[r0,#0x16]  ; System
00025a  2801              CMP      r0,#1
00025c  d169              BNE      |L1.818|
;;;155                    {
;;;156                        if( (PC_Cmd.mode+'0') != System.mode )			//模式不同，需要发射
00025e  486e              LDR      r0,|L1.1048|
000260  7800              LDRB     r0,[r0,#0]  ; PC_Cmd
000262  3030              ADDS     r0,r0,#0x30
000264  496e              LDR      r1,|L1.1056|
000266  7dc9              LDRB     r1,[r1,#0x17]  ; System
000268  4288              CMP      r0,r1
00026a  d004              BEQ      |L1.630|
;;;157                        {
;;;158                            Monitor.need_emit = 0x01;
00026c  2001              MOVS     r0,#1
00026e  4966              LDR      r1,|L1.1032|
000270  f88100cd          STRB     r0,[r1,#0xcd]
000274  e06a              B        |L1.844|
                  |L1.630|
;;;159                        }
;;;160                        else											//模式相同
;;;161                        {
;;;162                            if( (Monitor.need_emit == 0x00) && (PC_Cmd.mode >= 0x01) )					//固频
000276  4864              LDR      r0,|L1.1032|
000278  f89000cd          LDRB     r0,[r0,#0xcd]  ; Monitor
00027c  b9c0              CBNZ     r0,|L1.688|
00027e  4866              LDR      r0,|L1.1048|
000280  7800              LDRB     r0,[r0,#0]  ; PC_Cmd
000282  2801              CMP      r0,#1
000284  db14              BLT      |L1.688|
;;;163                            {
;;;164                                freq_hex_to_str(PC_Cmd.freq, temp_freq_str);
000286  4669              MOV      r1,sp
000288  4863              LDR      r0,|L1.1048|
00028a  3008              ADDS     r0,r0,#8
00028c  f7fffffe          BL       freq_hex_to_str
;;;165                                ret = strcmp((const char *)temp_freq_str, (const char *)System.freq1);
000290  4963              LDR      r1,|L1.1056|
000292  311e              ADDS     r1,r1,#0x1e
000294  4668              MOV      r0,sp
000296  f7fffffe          BL       strcmp
00029a  4605              MOV      r5,r0
;;;166    
;;;167                                if( ret == 0)														//频率相同
00029c  b925              CBNZ     r5,|L1.680|
;;;168                                {
;;;169                                    Monitor.need_emit = 0x00;
00029e  2000              MOVS     r0,#0
0002a0  4959              LDR      r1,|L1.1032|
0002a2  f88100cd          STRB     r0,[r1,#0xcd]
0002a6  e003              B        |L1.688|
                  |L1.680|
;;;170                                }
;;;171                                else																//频率不同，需要发射
;;;172                                {
;;;173                                    Monitor.need_emit = 0x01;
0002a8  2001              MOVS     r0,#1
0002aa  4957              LDR      r1,|L1.1032|
0002ac  f88100cd          STRB     r0,[r1,#0xcd]
                  |L1.688|
;;;174                                }
;;;175                            }
;;;176    
;;;177                            if( (Monitor.need_emit == 0x00) && (PC_Cmd.mode >= 0x02) )					//双频
0002b0  4855              LDR      r0,|L1.1032|
0002b2  f89000cd          LDRB     r0,[r0,#0xcd]  ; Monitor
0002b6  b9c0              CBNZ     r0,|L1.746|
0002b8  4857              LDR      r0,|L1.1048|
0002ba  7800              LDRB     r0,[r0,#0]  ; PC_Cmd
0002bc  2802              CMP      r0,#2
0002be  db14              BLT      |L1.746|
;;;178                            {
;;;179                                freq_hex_to_str(PC_Cmd.freq+4, temp_freq_str);
0002c0  4669              MOV      r1,sp
0002c2  4855              LDR      r0,|L1.1048|
0002c4  300c              ADDS     r0,r0,#0xc
0002c6  f7fffffe          BL       freq_hex_to_str
;;;180                                ret = strcmp((const char *)temp_freq_str, (const char *)System.freq2);
0002ca  4955              LDR      r1,|L1.1056|
0002cc  3128              ADDS     r1,r1,#0x28
0002ce  4668              MOV      r0,sp
0002d0  f7fffffe          BL       strcmp
0002d4  4605              MOV      r5,r0
;;;181    
;;;182                                if( ret == 0)														//频率相同
0002d6  b925              CBNZ     r5,|L1.738|
;;;183                                {
;;;184                                    Monitor.need_emit = 0x00;
0002d8  2000              MOVS     r0,#0
0002da  494b              LDR      r1,|L1.1032|
0002dc  f88100cd          STRB     r0,[r1,#0xcd]
0002e0  e003              B        |L1.746|
                  |L1.738|
;;;185                                }
;;;186                                else																//频率不同，需要发射
;;;187                                {
;;;188                                    Monitor.need_emit = 0x01;
0002e2  2001              MOVS     r0,#1
0002e4  4948              LDR      r1,|L1.1032|
0002e6  f88100cd          STRB     r0,[r1,#0xcd]
                  |L1.746|
;;;189                                }
;;;190                            }
;;;191    
;;;192                            if( (Monitor.need_emit == 0x00) && (PC_Cmd.mode >= 0x03) )					//三频
0002ea  4847              LDR      r0,|L1.1032|
0002ec  f89000cd          LDRB     r0,[r0,#0xcd]  ; Monitor
0002f0  b9c0              CBNZ     r0,|L1.804|
0002f2  4849              LDR      r0,|L1.1048|
0002f4  7800              LDRB     r0,[r0,#0]  ; PC_Cmd
0002f6  2803              CMP      r0,#3
0002f8  db14              BLT      |L1.804|
;;;193                            {
;;;194                                freq_hex_to_str(PC_Cmd.freq+8, temp_freq_str);
0002fa  4669              MOV      r1,sp
0002fc  4846              LDR      r0,|L1.1048|
0002fe  3010              ADDS     r0,r0,#0x10
000300  f7fffffe          BL       freq_hex_to_str
;;;195                                ret = strcmp((const char *)temp_freq_str, (const char *)System.freq3);
000304  4946              LDR      r1,|L1.1056|
000306  3132              ADDS     r1,r1,#0x32
000308  4668              MOV      r0,sp
00030a  f7fffffe          BL       strcmp
00030e  4605              MOV      r5,r0
;;;196    
;;;197                                if( ret == 0)														//频率相同
000310  b925              CBNZ     r5,|L1.796|
;;;198                                {
;;;199                                    Monitor.need_emit = 0x00;
000312  2000              MOVS     r0,#0
000314  493c              LDR      r1,|L1.1032|
000316  f88100cd          STRB     r0,[r1,#0xcd]
00031a  e003              B        |L1.804|
                  |L1.796|
;;;200                                }
;;;201                                else																//频率不同，需要发射
;;;202                                {
;;;203                                    Monitor.need_emit = 0x01;
00031c  2001              MOVS     r0,#1
00031e  493a              LDR      r1,|L1.1032|
000320  f88100cd          STRB     r0,[r1,#0xcd]
                  |L1.804|
;;;204                                }
;;;205                            }
;;;206    
;;;207                            if( Monitor.need_emit == 0x00 )
000324  4838              LDR      r0,|L1.1032|
000326  f89000cd          LDRB     r0,[r0,#0xcd]  ; Monitor
00032a  b978              CBNZ     r0,|L1.844|
;;;208    												{
;;;209                                power_check();
00032c  f7fffffe          BL       power_check
000330  e00c              B        |L1.844|
                  |L1.818|
;;;210    												}
;;;211                        }
;;;212                    }
;;;213                    else												//不是发射状态
;;;214                    {
;;;215                        if( PC_Cmd.mode >= 0x01 )
000332  4839              LDR      r0,|L1.1048|
000334  7800              LDRB     r0,[r0,#0]  ; PC_Cmd
000336  2801              CMP      r0,#1
000338  db04              BLT      |L1.836|
;;;216                            Monitor.need_emit = 0x01;					//需要发射
00033a  2001              MOVS     r0,#1
00033c  4932              LDR      r1,|L1.1032|
00033e  f88100cd          STRB     r0,[r1,#0xcd]
000342  e003              B        |L1.844|
                  |L1.836|
;;;217                        else
;;;218                            Monitor.need_emit = 0x00;					//不需要发射
000344  2000              MOVS     r0,#0
000346  4930              LDR      r1,|L1.1032|
000348  f88100cd          STRB     r0,[r1,#0xcd]
                  |L1.844|
;;;219                    }
;;;220    
;;;221                    if( Monitor.need_emit == 0x01 )						//需要发射
00034c  482e              LDR      r0,|L1.1032|
00034e  f89000cd          LDRB     r0,[r0,#0xcd]  ; Monitor
000352  2801              CMP      r0,#1
000354  d16e              BNE      |L1.1076|
;;;222                    {
;;;223                        if( System.status == SYSTEM_OPENING )
000356  4832              LDR      r0,|L1.1056|
000358  7ac0              LDRB     r0,[r0,#0xb]  ; System
00035a  2806              CMP      r0,#6
00035c  d06a              BEQ      |L1.1076|
;;;224                        {
;;;225    
;;;226                        }
;;;227                        else
;;;228                        {
;;;229                            /*----------------------------------设置发射参数-----------------------------------*/
;;;230                            switch( PC_Cmd.mode )
00035e  482e              LDR      r0,|L1.1048|
000360  7800              LDRB     r0,[r0,#0]  ; PC_Cmd
000362  2801              CMP      r0,#1
000364  d004              BEQ      |L1.880|
000366  2802              CMP      r0,#2
000368  d006              BEQ      |L1.888|
00036a  2803              CMP      r0,#3
00036c  d10c              BNE      |L1.904|
00036e  e007              B        |L1.896|
                  |L1.880|
;;;231                            {
;;;232    													case 0x01:		GT2000_Tx.Gt2000_mode = 1;					break;
000370  2001              MOVS     r0,#1
000372  492a              LDR      r1,|L1.1052|
000374  7148              STRB     r0,[r1,#5]
000376  e00b              B        |L1.912|
                  |L1.888|
;;;233    													case 0x02:		GT2000_Tx.Gt2000_mode = 2;					break;
000378  2002              MOVS     r0,#2
00037a  4928              LDR      r1,|L1.1052|
00037c  7148              STRB     r0,[r1,#5]
00037e  e007              B        |L1.912|
                  |L1.896|
;;;234    													case 0x03:		GT2000_Tx.Gt2000_mode = 3;					break;
000380  2003              MOVS     r0,#3
000382  4926              LDR      r1,|L1.1052|
000384  7148              STRB     r0,[r1,#5]
000386  e003              B        |L1.912|
                  |L1.904|
;;;235    													default:		Trans_openBack.Trans_state[0]=0xFE;		break;	//参数错误
000388  20fe              MOVS     r0,#0xfe
00038a  4929              LDR      r1,|L1.1072|
00038c  7048              STRB     r0,[r1,#1]
00038e  bf00              NOP      
                  |L1.912|
000390  bf00              NOP                            ;232
;;;236                            }
;;;237    												
;;;238    												if(PC_Cmd.power[0]<100&&PC_Cmd.power[0]>=250)
000392  4821              LDR      r0,|L1.1048|
000394  7880              LDRB     r0,[r0,#2]  ; PC_Cmd
000396  2864              CMP      r0,#0x64
000398  da06              BGE      |L1.936|
00039a  481f              LDR      r0,|L1.1048|
00039c  7880              LDRB     r0,[r0,#2]  ; PC_Cmd
00039e  28fa              CMP      r0,#0xfa
0003a0  db02              BLT      |L1.936|
;;;239    												{
;;;240    													Trans_openBack.Trans_state[0]=0xFE;		//参数错误
0003a2  20fe              MOVS     r0,#0xfe
0003a4  4922              LDR      r1,|L1.1072|
0003a6  7048              STRB     r0,[r1,#1]
                  |L1.936|
;;;241    												}
;;;242    												if(PC_Cmd.power[1]<100&&PC_Cmd.power[1]>=250)
0003a8  481b              LDR      r0,|L1.1048|
0003aa  78c0              LDRB     r0,[r0,#3]
0003ac  2864              CMP      r0,#0x64
0003ae  da06              BGE      |L1.958|
0003b0  4819              LDR      r0,|L1.1048|
0003b2  78c0              LDRB     r0,[r0,#3]
0003b4  28fa              CMP      r0,#0xfa
0003b6  db02              BLT      |L1.958|
;;;243    												{
;;;244    													Trans_openBack.Trans_state[0]=0xFE;		//参数错误
0003b8  20fe              MOVS     r0,#0xfe
0003ba  491d              LDR      r1,|L1.1072|
0003bc  7048              STRB     r0,[r1,#1]
                  |L1.958|
;;;245    												}
;;;246    												if(PC_Cmd.power[2]<100&&PC_Cmd.power[2]>=250)
0003be  4816              LDR      r0,|L1.1048|
0003c0  7900              LDRB     r0,[r0,#4]
0003c2  2864              CMP      r0,#0x64
0003c4  da06              BGE      |L1.980|
0003c6  4814              LDR      r0,|L1.1048|
0003c8  7900              LDRB     r0,[r0,#4]
0003ca  28fa              CMP      r0,#0xfa
0003cc  db02              BLT      |L1.980|
;;;247    												{
;;;248    													Trans_openBack.Trans_state[0]=0xFE;		//参数错误
0003ce  20fe              MOVS     r0,#0xfe
0003d0  4917              LDR      r1,|L1.1072|
0003d2  7048              STRB     r0,[r1,#1]
                  |L1.980|
;;;249    												}   
;;;250    												
;;;251    											/*PC下发的数据转换为功率值 [100~250],对应【0~1950W】,1*13*/
;;;252                            Power_Range(&GT2000_Tx,PC_Cmd.power);   //&GT2000_Tx  此变量为指针类型，应加取地址符号。
0003d4  4910              LDR      r1,|L1.1048|
0003d6  1c89              ADDS     r1,r1,#2
0003d8  4810              LDR      r0,|L1.1052|
0003da  f7fffffe          BL       Power_Range
;;;253    
;;;254                            freq_hex_to_str(PC_Cmd.freq,			System.freq1);
0003de  4910              LDR      r1,|L1.1056|
0003e0  311e              ADDS     r1,r1,#0x1e
0003e2  480d              LDR      r0,|L1.1048|
0003e4  3008              ADDS     r0,r0,#8
0003e6  f7fffffe          BL       freq_hex_to_str
;;;255                            freq_hex_to_str(PC_Cmd.freq,			GT2000_Tx.Gt2000_freq1);	//频率
0003ea  490c              LDR      r1,|L1.1052|
0003ec  3124              ADDS     r1,r1,#0x24
0003ee  480a              LDR      r0,|L1.1048|
0003f0  3008              ADDS     r0,r0,#8
0003f2  f7fffffe          BL       freq_hex_to_str
;;;256                            if( PC_Cmd.mode == 0x02 )
0003f6  4808              LDR      r0,|L1.1048|
0003f8  7800              LDRB     r0,[r0,#0]  ; PC_Cmd
0003fa  2802              CMP      r0,#2
0003fc  d12b              BNE      |L1.1110|
;;;257                            {
;;;258                                freq_hex_to_str(PC_Cmd.freq+4,		GT2000_Tx.Gt2000_freq2);	//频率
0003fe  e01a              B        |L1.1078|
                  |L1.1024|
                          DCD      ||.constdata||
                  |L1.1028|
                          DCD      Run_Diagram_data
                  |L1.1032|
                          DCD      Monitor
                  |L1.1036|
                          DCD      Updata_time_flag
                  |L1.1040|
                          DCD      Hardware_Time_Count
                  |L1.1044|
                          DCD      flash_3_once_flag
                  |L1.1048|
                          DCD      PC_Cmd
                  |L1.1052|
                          DCD      GT2000_Tx
                  |L1.1056|
                          DCD      System
                  |L1.1060|
                          DCD      0x40440000
                  |L1.1064|
                          DCD      Power_onBack
                  |L1.1068|
                          DCD      xHandleTask_MT2000
                  |L1.1072|
                          DCD      Trans_openBack
                  |L1.1076|
000434  e0bb              B        |L1.1454|
                  |L1.1078|
000436  4977              LDR      r1,|L1.1556|
000438  4877              LDR      r0,|L1.1560|
00043a  f7fffffe          BL       freq_hex_to_str
;;;259    
;;;260                                memset(GT2000_Tx.Gt2000_freq3, '0', 8);
00043e  2230              MOVS     r2,#0x30
000440  2108              MOVS     r1,#8
000442  4874              LDR      r0,|L1.1556|
000444  300a              ADDS     r0,r0,#0xa
000446  f7fffffe          BL       __aeabi_memset
;;;261                                GT2000_Tx.Gt2000_freq3[8] = '\0';
00044a  2100              MOVS     r1,#0
00044c  4871              LDR      r0,|L1.1556|
00044e  382e              SUBS     r0,r0,#0x2e
000450  f8801040          STRB     r1,[r0,#0x40]
000454  e037              B        |L1.1222|
                  |L1.1110|
;;;262                            }
;;;263                            else	if( PC_Cmd.mode == 0x03 )
000456  4870              LDR      r0,|L1.1560|
000458  380c              SUBS     r0,r0,#0xc
00045a  7800              LDRB     r0,[r0,#0]  ; PC_Cmd
00045c  2803              CMP      r0,#3
00045e  d10a              BNE      |L1.1142|
;;;264                            {
;;;265                                freq_hex_to_str(PC_Cmd.freq+4,	GT2000_Tx.Gt2000_freq2);		//频率
000460  496c              LDR      r1,|L1.1556|
000462  486d              LDR      r0,|L1.1560|
000464  f7fffffe          BL       freq_hex_to_str
;;;266                                freq_hex_to_str(PC_Cmd.freq+8,	GT2000_Tx.Gt2000_freq3);
000468  496a              LDR      r1,|L1.1556|
00046a  310a              ADDS     r1,r1,#0xa
00046c  486a              LDR      r0,|L1.1560|
00046e  1d00              ADDS     r0,r0,#4
000470  f7fffffe          BL       freq_hex_to_str
000474  e027              B        |L1.1222|
                  |L1.1142|
;;;267                            }
;;;268                            else
;;;269                            {
;;;270                                memset(GT2000_Tx.Gt2000_freq2, '0', 8);
000476  2230              MOVS     r2,#0x30
000478  2108              MOVS     r1,#8
00047a  4866              LDR      r0,|L1.1556|
00047c  f7fffffe          BL       __aeabi_memset
;;;271                                GT2000_Tx.Gt2000_freq2[8] = '\0';
000480  2100              MOVS     r1,#0
000482  4864              LDR      r0,|L1.1556|
000484  382e              SUBS     r0,r0,#0x2e
000486  f8801036          STRB     r1,[r0,#0x36]
;;;272                                memset(GT2000_Tx.Gt2000_freq3, '0', 8);
00048a  2230              MOVS     r2,#0x30
00048c  2108              MOVS     r1,#8
00048e  3038              ADDS     r0,r0,#0x38
000490  f7fffffe          BL       __aeabi_memset
;;;273                                GT2000_Tx.Gt2000_freq3[8] = '\0';
000494  2100              MOVS     r1,#0
000496  485f              LDR      r0,|L1.1556|
000498  382e              SUBS     r0,r0,#0x2e
00049a  f8801040          STRB     r1,[r0,#0x40]
;;;274    
;;;275                                memset(System.freq2, '0', 8);
00049e  2230              MOVS     r2,#0x30
0004a0  2108              MOVS     r1,#8
0004a2  485e              LDR      r0,|L1.1564|
0004a4  f7fffffe          BL       __aeabi_memset
;;;276                                System.freq2[8] = '\0';
0004a8  2100              MOVS     r1,#0
0004aa  485c              LDR      r0,|L1.1564|
0004ac  3828              SUBS     r0,r0,#0x28
0004ae  f8801030          STRB     r1,[r0,#0x30]
;;;277                                memset(System.freq3, '0', 8);
0004b2  2230              MOVS     r2,#0x30
0004b4  2108              MOVS     r1,#8
0004b6  3032              ADDS     r0,r0,#0x32
0004b8  f7fffffe          BL       __aeabi_memset
;;;278                                System.freq3[8] = '\0';
0004bc  2100              MOVS     r1,#0
0004be  4857              LDR      r0,|L1.1564|
0004c0  3828              SUBS     r0,r0,#0x28
0004c2  f880103a          STRB     r1,[r0,#0x3a]
                  |L1.1222|
;;;279                            }
;;;280    
;;;281                            /*-------------------------------------发射--------------------------------------*/
;;;282                            if( System.open != 0x02 )			//没有开机
0004c6  4855              LDR      r0,|L1.1564|
0004c8  3828              SUBS     r0,r0,#0x28
0004ca  7b00              LDRB     r0,[r0,#0xc]  ; System
0004cc  2802              CMP      r0,#2
0004ce  d027              BEQ      |L1.1312|
;;;283                            {
;;;284                                if( System.Voltage > 40.0 )		//再次判断是否开机
0004d0  4952              LDR      r1,|L1.1564|
0004d2  3928              SUBS     r1,r1,#0x28
0004d4  6f48              LDR      r0,[r1,#0x74]  ; System
0004d6  f7fffffe          BL       __aeabi_f2d
0004da  4606              MOV      r6,r0
0004dc  2200              MOVS     r2,#0
0004de  4b50              LDR      r3,|L1.1568|
0004e0  f7fffffe          BL       __aeabi_cdrcmple
0004e4  d218              BCS      |L1.1304|
;;;285                                {
;;;286                                    System.open = 0x02;
0004e6  2002              MOVS     r0,#2
0004e8  494c              LDR      r1,|L1.1564|
0004ea  3928              SUBS     r1,r1,#0x28
0004ec  7308              STRB     r0,[r1,#0xc]
;;;287                                    Monitor.need_open = 0;
0004ee  2000              MOVS     r0,#0
0004f0  494c              LDR      r1,|L1.1572|
0004f2  f88100cb          STRB     r0,[r1,#0xcb]
;;;288                                    Power_onBack.results[0]=0xFC;
0004f6  20fc              MOVS     r0,#0xfc
0004f8  494b              LDR      r1,|L1.1576|
0004fa  7048              STRB     r0,[r1,#1]
;;;289    
;;;290                                    if( get_history_alarm() == 0x01 )
0004fc  f7fffffe          BL       get_history_alarm
000500  2801              CMP      r0,#1
000502  d104              BNE      |L1.1294|
;;;291                                    {
;;;292                                        System.status = SYSTEM_ALARM;
000504  2011              MOVS     r0,#0x11
000506  4945              LDR      r1,|L1.1564|
000508  3928              SUBS     r1,r1,#0x28
00050a  72c8              STRB     r0,[r1,#0xb]
00050c  e008              B        |L1.1312|
                  |L1.1294|
;;;293                                    }
;;;294                                    else
;;;295                                    {
;;;296                                        System.status = SYSTEM_STANDBY;
00050e  2002              MOVS     r0,#2
000510  4942              LDR      r1,|L1.1564|
000512  3928              SUBS     r1,r1,#0x28
000514  72c8              STRB     r0,[r1,#0xb]
000516  e003              B        |L1.1312|
                  |L1.1304|
;;;297                                    }
;;;298                                }
;;;299                                else							//已经提前开机了，但确实没有开机成功，执行开机操作
;;;300                                {
;;;301                                    Monitor.need_open = 0x01;
000518  2001              MOVS     r0,#1
00051a  4942              LDR      r1,|L1.1572|
00051c  f88100cb          STRB     r0,[r1,#0xcb]
                  |L1.1312|
;;;302                                }
;;;303                            }
;;;304    
;;;305                            if( System.open == 0x02 )						//开机了
000520  483e              LDR      r0,|L1.1564|
000522  3828              SUBS     r0,r0,#0x28
000524  7b00              LDRB     r0,[r0,#0xc]  ; System
000526  2802              CMP      r0,#2
000528  d141              BNE      |L1.1454|
;;;306                            {
;;;307                                if( System.emission == 0x01 )
00052a  483c              LDR      r0,|L1.1564|
00052c  3828              SUBS     r0,r0,#0x28
00052e  7d80              LDRB     r0,[r0,#0x16]  ; System
000530  2801              CMP      r0,#1
000532  d118              BNE      |L1.1382|
;;;308                                {
;;;309                                    System.stop = 0x01;
000534  4939              LDR      r1,|L1.1564|
000536  3928              SUBS     r1,r1,#0x28
000538  7548              STRB     r0,[r1,#0x15]
;;;310                                    xTaskNotify(xHandleTask_MT2000,			//停止发射
00053a  2300              MOVS     r3,#0
00053c  2201              MOVS     r2,#1
00053e  4611              MOV      r1,r2
000540  483a              LDR      r0,|L1.1580|
000542  6800              LDR      r0,[r0,#0]  ; xHandleTask_MT2000
000544  f7fffffe          BL       xTaskGenericNotify
;;;311                                                BIT_0,
;;;312                                                eSetBits);
;;;313    
;;;314                                    for(i=0; i<200; i++)
000548  2400              MOVS     r4,#0
00054a  e009              B        |L1.1376|
                  |L1.1356|
;;;315                                    {
;;;316                                        if( System.stop == 0x00 )
00054c  4833              LDR      r0,|L1.1564|
00054e  3828              SUBS     r0,r0,#0x28
000550  7d40              LDRB     r0,[r0,#0x15]  ; System
000552  b900              CBNZ     r0,|L1.1366|
;;;317                                            break;
000554  e006              B        |L1.1380|
                  |L1.1366|
;;;318                                        else
;;;319                                            vTaskDelay(10);
000556  200a              MOVS     r0,#0xa
000558  f7fffffe          BL       vTaskDelay
00055c  1c60              ADDS     r0,r4,#1              ;314
00055e  b2c4              UXTB     r4,r0                 ;314
                  |L1.1376|
000560  2cc8              CMP      r4,#0xc8              ;314
000562  dbf3              BLT      |L1.1356|
                  |L1.1380|
000564  bf00              NOP                            ;317
                  |L1.1382|
;;;320                                    }
;;;321                                }
;;;322    
;;;323                                if( System.emission == 0x00 )
000566  482d              LDR      r0,|L1.1564|
000568  3828              SUBS     r0,r0,#0x28
00056a  7d80              LDRB     r0,[r0,#0x16]  ; System
00056c  b9f8              CBNZ     r0,|L1.1454|
;;;324                                {
;;;325    																if( (System.emission == 0x01) || (Alarm.emission==1) || (Alarm.no_respond==1) || (Alarm.no_power==1) || (Alarm.swr_alarm==0x01) || (Alarm.over_Electric==0x01) )
00056e  482b              LDR      r0,|L1.1564|
000570  3828              SUBS     r0,r0,#0x28
000572  7d80              LDRB     r0,[r0,#0x16]  ; System
000574  2801              CMP      r0,#1
000576  d01a              BEQ      |L1.1454|
000578  482d              LDR      r0,|L1.1584|
00057a  7840              LDRB     r0,[r0,#1]  ; Alarm
00057c  2801              CMP      r0,#1
00057e  d016              BEQ      |L1.1454|
000580  482b              LDR      r0,|L1.1584|
000582  78c0              LDRB     r0,[r0,#3]  ; Alarm
000584  2801              CMP      r0,#1
000586  d012              BEQ      |L1.1454|
000588  4829              LDR      r0,|L1.1584|
00058a  7cc0              LDRB     r0,[r0,#0x13]  ; Alarm
00058c  2801              CMP      r0,#1
00058e  d00e              BEQ      |L1.1454|
000590  4827              LDR      r0,|L1.1584|
000592  7c40              LDRB     r0,[r0,#0x11]  ; Alarm
000594  2801              CMP      r0,#1
000596  d00a              BEQ      |L1.1454|
000598  4825              LDR      r0,|L1.1584|
00059a  7ac0              LDRB     r0,[r0,#0xb]  ; Alarm
00059c  2801              CMP      r0,#1
00059e  d006              BEQ      |L1.1454|
;;;326                                    {
;;;327                                        //App_printf("Task_Harware_Monitor waring: working or alarm state!\r\n");
;;;328                                    }
;;;329                                    else
;;;330                                    {
;;;331                                        xTaskNotify(xHandleTask_MT2000,			//发射
0005a0  2300              MOVS     r3,#0
0005a2  2201              MOVS     r2,#1
0005a4  2108              MOVS     r1,#8
0005a6  4821              LDR      r0,|L1.1580|
0005a8  6800              LDR      r0,[r0,#0]  ; xHandleTask_MT2000
0005aa  f7fffffe          BL       xTaskGenericNotify
                  |L1.1454|
;;;332                                                    BIT_3,
;;;333                                                    eSetBits);
;;;334                                    }
;;;335                                }
;;;336                                else
;;;337                                {
;;;338    
;;;339                                }
;;;340                            }
;;;341                        }
;;;342                    }
;;;343                }
;;;344    
;;;345                if( (Monitor.need_open==0x00) && (Monitor.need_close==0x00) && (Monitor.need_emit==0x00) &&			//不需要开机、关机、发射
0005ae  481d              LDR      r0,|L1.1572|
0005b0  f89000cb          LDRB     r0,[r0,#0xcb]  ; Monitor
0005b4  bb38              CBNZ     r0,|L1.1542|
0005b6  481b              LDR      r0,|L1.1572|
0005b8  f89000cc          LDRB     r0,[r0,#0xcc]  ; Monitor
0005bc  bb18              CBNZ     r0,|L1.1542|
0005be  4819              LDR      r0,|L1.1572|
0005c0  f89000cd          LDRB     r0,[r0,#0xcd]  ; Monitor
0005c4  b9f8              CBNZ     r0,|L1.1542|
;;;346    				(System.close==0x00) && (System.stop==0x00) && (System.status!=SYSTEM_OPENING))	//不是正在关机、停止、开机
0005c6  4815              LDR      r0,|L1.1564|
0005c8  3828              SUBS     r0,r0,#0x28
0005ca  7b40              LDRB     r0,[r0,#0xd]  ; System
0005cc  b9d8              CBNZ     r0,|L1.1542|
0005ce  4813              LDR      r0,|L1.1564|
0005d0  3828              SUBS     r0,r0,#0x28
0005d2  7d40              LDRB     r0,[r0,#0x15]  ; System
0005d4  b9b8              CBNZ     r0,|L1.1542|
0005d6  4811              LDR      r0,|L1.1564|
0005d8  3828              SUBS     r0,r0,#0x28
0005da  7ac0              LDRB     r0,[r0,#0xb]  ; System
0005dc  2806              CMP      r0,#6
0005de  d012              BEQ      |L1.1542|
;;;347                {
;;;348                    inquire_counter++;
0005e0  4814              LDR      r0,|L1.1588|
0005e2  7800              LDRB     r0,[r0,#0]  ; inquire_counter
0005e4  1c40              ADDS     r0,r0,#1
0005e6  4913              LDR      r1,|L1.1588|
0005e8  7008              STRB     r0,[r1,#0]
;;;349                    if( inquire_counter > 20 )
0005ea  4608              MOV      r0,r1
0005ec  7800              LDRB     r0,[r0,#0]  ; inquire_counter
0005ee  2814              CMP      r0,#0x14
0005f0  dd0c              BLE      |L1.1548|
;;;350                    {
;;;351                        inquire_counter = 0;
0005f2  2000              MOVS     r0,#0
0005f4  7008              STRB     r0,[r1,#0]
;;;352                        xTaskNotify(xHandleTask_MT2000,					//查询(更新状态，检测是否报警)
0005f6  2300              MOVS     r3,#0
0005f8  2201              MOVS     r2,#1
0005fa  0291              LSLS     r1,r2,#10
0005fc  480b              LDR      r0,|L1.1580|
0005fe  6800              LDR      r0,[r0,#0]  ; xHandleTask_MT2000
000600  f7fffffe          BL       xTaskGenericNotify
                  |L1.1540|
000604  e002              B        |L1.1548|
                  |L1.1542|
;;;353                                    BIT_10,
;;;354                                    eSetBits);
;;;355                    }
;;;356                }
;;;357                else
;;;358                {
;;;359                    inquire_counter = 0;
000606  2000              MOVS     r0,#0
000608  490a              LDR      r1,|L1.1588|
00060a  7008              STRB     r0,[r1,#0]
                  |L1.1548|
;;;360                }
;;;361            }
;;;362    
;;;363    #endif
;;;364            vTaskDelay(100);
00060c  2064              MOVS     r0,#0x64
00060e  f7fffffe          BL       vTaskDelay
                  |L1.1554|
000612  e515              B        |L1.64|
;;;365        }
;;;366    }
;;;367    
                          ENDP

                  |L1.1556|
                          DCD      GT2000_Tx+0x2e
                  |L1.1560|
                          DCD      PC_Cmd+0xc
                  |L1.1564|
                          DCD      System+0x28
                  |L1.1568|
                          DCD      0x40440000
                  |L1.1572|
                          DCD      Monitor
                  |L1.1576|
                          DCD      Power_onBack
                  |L1.1580|
                          DCD      xHandleTask_MT2000
                  |L1.1584|
                          DCD      Alarm
                  |L1.1588|
                          DCD      inquire_counter

                          AREA ||i.power_check||, CODE, READONLY, ALIGN=2

                  power_check PROC
;;;367    
;;;368    void power_check(void)
000000  4826              LDR      r0,|L2.156|
;;;369    {	
;;;370    		/***硬件接管时，比较现在正在发射的功率等级和运行图中的，不同就需要重新发射****/
;;;371    		if(System.mode=='1')
000002  7dc0              LDRB     r0,[r0,#0x17]  ; System
000004  2831              CMP      r0,#0x31
000006  d10f              BNE      |L2.40|
;;;372    		{
;;;373    			if(System.power[0]==PC_Cmd.power[0])
000008  4824              LDR      r0,|L2.156|
00000a  7ec0              LDRB     r0,[r0,#0x1b]  ; System
00000c  4924              LDR      r1,|L2.160|
00000e  7889              LDRB     r1,[r1,#2]  ; PC_Cmd
000010  4288              CMP      r0,r1
000012  d104              BNE      |L2.30|
;;;374    			{
;;;375    				Monitor.need_emit = 0x00;
000014  2000              MOVS     r0,#0
000016  4923              LDR      r1,|L2.164|
000018  f88100cd          STRB     r0,[r1,#0xcd]
00001c  e03d              B        |L2.154|
                  |L2.30|
;;;376    			}
;;;377    		  else
;;;378    			{
;;;379    					Monitor.need_emit = 0x01;
00001e  2001              MOVS     r0,#1
000020  4920              LDR      r1,|L2.164|
000022  f88100cd          STRB     r0,[r1,#0xcd]
000026  e038              B        |L2.154|
                  |L2.40|
;;;380    			}
;;;381    		}
;;;382    		
;;;383    		else if(System.mode=='2')
000028  481c              LDR      r0,|L2.156|
00002a  7dc0              LDRB     r0,[r0,#0x17]  ; System
00002c  2832              CMP      r0,#0x32
00002e  d115              BNE      |L2.92|
;;;384    		{
;;;385    			if(System.power[0]==PC_Cmd.power[0]&&System.power[1]==PC_Cmd.power[1])
000030  481a              LDR      r0,|L2.156|
000032  7ec0              LDRB     r0,[r0,#0x1b]  ; System
000034  491a              LDR      r1,|L2.160|
000036  7889              LDRB     r1,[r1,#2]  ; PC_Cmd
000038  4288              CMP      r0,r1
00003a  d10a              BNE      |L2.82|
00003c  4817              LDR      r0,|L2.156|
00003e  7f01              LDRB     r1,[r0,#0x1c]
000040  4817              LDR      r0,|L2.160|
000042  78c0              LDRB     r0,[r0,#3]
000044  4281              CMP      r1,r0
000046  d104              BNE      |L2.82|
;;;386    			{
;;;387    				Monitor.need_emit = 0x00;
000048  2000              MOVS     r0,#0
00004a  4916              LDR      r1,|L2.164|
00004c  f88100cd          STRB     r0,[r1,#0xcd]
000050  e023              B        |L2.154|
                  |L2.82|
;;;388    			}
;;;389    			
;;;390    			else
;;;391    			{
;;;392    					Monitor.need_emit = 0x01;
000052  2001              MOVS     r0,#1
000054  4913              LDR      r1,|L2.164|
000056  f88100cd          STRB     r0,[r1,#0xcd]
00005a  e01e              B        |L2.154|
                  |L2.92|
;;;393    			}
;;;394    		}
;;;395    		
;;;396    		else if(System.mode=='3')
00005c  480f              LDR      r0,|L2.156|
00005e  7dc0              LDRB     r0,[r0,#0x17]  ; System
000060  2833              CMP      r0,#0x33
000062  d11a              BNE      |L2.154|
;;;397    		{
;;;398    			if(System.power[0]==PC_Cmd.power[0]&&System.power[1]==PC_Cmd.power[1]&&System.power[2]==PC_Cmd.power[2])
000064  480d              LDR      r0,|L2.156|
000066  7ec0              LDRB     r0,[r0,#0x1b]  ; System
000068  490d              LDR      r1,|L2.160|
00006a  7889              LDRB     r1,[r1,#2]  ; PC_Cmd
00006c  4288              CMP      r0,r1
00006e  d110              BNE      |L2.146|
000070  480a              LDR      r0,|L2.156|
000072  7f01              LDRB     r1,[r0,#0x1c]
000074  480a              LDR      r0,|L2.160|
000076  78c0              LDRB     r0,[r0,#3]
000078  4281              CMP      r1,r0
00007a  d10a              BNE      |L2.146|
00007c  4807              LDR      r0,|L2.156|
00007e  7f41              LDRB     r1,[r0,#0x1d]
000080  4807              LDR      r0,|L2.160|
000082  7900              LDRB     r0,[r0,#4]
000084  4281              CMP      r1,r0
000086  d104              BNE      |L2.146|
;;;399    			{
;;;400    					Monitor.need_emit = 0x00;
000088  2000              MOVS     r0,#0
00008a  4906              LDR      r1,|L2.164|
00008c  f88100cd          STRB     r0,[r1,#0xcd]
000090  e003              B        |L2.154|
                  |L2.146|
;;;401    			}
;;;402    		  else
;;;403    			{
;;;404    					Monitor.need_emit = 0x01;
000092  2001              MOVS     r0,#1
000094  4903              LDR      r1,|L2.164|
000096  f88100cd          STRB     r0,[r1,#0xcd]
                  |L2.154|
;;;405    			}
;;;406    		}
;;;407    
;;;408    
;;;409    
;;;410    }
00009a  4770              BX       lr
                          ENDP

                  |L2.156|
                          DCD      System
                  |L2.160|
                          DCD      PC_Cmd
                  |L2.164|
                          DCD      Monitor

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  30303030          DCB      0x30,0x30,0x30,0x30
000004  30303030          DCB      0x30,0x30,0x30,0x30
000008  0000              DCB      0x00,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  xHandleTask_Hardware_Monitor
                          DCD      0x00000000
                  Updata_time_flag
000004  00                DCB      0x00
                  inquire_counter
000005  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\Task\\Task_Hardware_Monitor.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___23_Task_Hardware_Monitor_c_7aba5fcd____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___23_Task_Hardware_Monitor_c_7aba5fcd____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___23_Task_Hardware_Monitor_c_7aba5fcd____REVSH|
#line 128
|__asm___23_Task_Hardware_Monitor_c_7aba5fcd____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
