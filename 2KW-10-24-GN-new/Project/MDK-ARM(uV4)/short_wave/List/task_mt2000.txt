; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\short_wave\obj\task_mt2000.o --asm_dir=.\short_wave\List\ --list_dir=.\short_wave\List\ --depend=.\short_wave\obj\task_mt2000.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\adc -I..\..\User\rtc -I..\..\User\internal_flash -I..\..\User\iwdg -I..\..\Task -I..\..\User\can -I..\..\User\firmware_upgrade -I..\..\User\STMFLASH -I..\..\User\IAP -I.\RTE\_Short_Wave -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\short_wave\obj\task_mt2000.crf ..\..\Task\Task_MT2000.c]
                          THUMB

                          AREA ||i.Task_MT2000||, CODE, READONLY, ALIGN=2

                  Task_MT2000 PROC
;;;16     
;;;17     void Task_MT2000(void *pvParameters)
000000  b0ba              SUB      sp,sp,#0xe8
;;;18     {
;;;19         uint32_t ulValue;
;;;20         BaseType_t xResult;
;;;21     
;;;22         uint8_t i = 0;
000002  2400              MOVS     r4,#0
;;;23         uint8_t j = 0;
000004  2500              MOVS     r5,#0
;;;24         uint8_t repeat_send_counter = 0;		//指令失败，重发多次
000006  46a1              MOV      r9,r4
;;;25         uint32_t current_time_stamp = 0;
000008  2000              MOVS     r0,#0
00000a  9037              STR      r0,[sp,#0xdc]
;;;26     
;;;27     		uint8_t		freq_begin;
;;;28     		uint8_t		freq_end;
;;;29     		
;;;30     		uint8_t		next_point_int = 0;
00000c  9034              STR      r0,[sp,#0xd0]
;;;31     		uint8_t		next_point_dec = 0;
00000e  9033              STR      r0,[sp,#0xcc]
;;;32     		uint16_t	next_point = 0;
000010  9032              STR      r0,[sp,#0xc8]
;;;33     		
;;;34     		GT2000_t Change_Power_Value;
;;;35     	
;;;36         int ret;
;;;37         while(1)
000012  f001bae2          B.W      |L1.5594|
                  |L1.22|
;;;38         {
;;;39             xResult = xTaskNotifyWait(0x00000000,
000016  f04f33ff          MOV      r3,#0xffffffff
00001a  aa39              ADD      r2,sp,#0xe4
00001c  4619              MOV      r1,r3
00001e  2000              MOVS     r0,#0
000020  f7fffffe          BL       xTaskNotifyWait
000024  9038              STR      r0,[sp,#0xe0]
;;;40                                       0xFFFFFFFF,
;;;41                                       &ulValue,
;;;42                                       portMAX_DELAY); /* 最大允许延迟时间 */
;;;43     
;;;44             if( xResult == pdPASS )
000026  9838              LDR      r0,[sp,#0xe0]
000028  2801              CMP      r0,#1
00002a  f04182d3          BNE.W    |L1.5588|
;;;45             {
;;;46                 if((ulValue & BIT_0) != 0)			//停止  Bit0在Task_Upper.c中的查询、停止发射、触发。
00002e  9839              LDR      r0,[sp,#0xe4]
000030  f0000001          AND      r0,r0,#1
000034  b190              CBZ      r0,|L1.92|
;;;47                 {
;;;48     								System.Power_Adjustment=1;
000036  2001              MOVS     r0,#1
000038  49fe              LDR      r1,|L1.1076|
00003a  f88100a8          STRB     r0,[r1,#0xa8]
;;;49     							  Trans_printf(" BIT_0_to_GT2000_Stop ! ");
00003e  a0fe              ADR      r0,|L1.1080|
000040  f7fffffe          BL       Trans_printf
;;;50                     GT2000_Stop();
000044  f7fffffe          BL       GT2000_Stop
;;;51     							  
;;;52     								vTaskDelay(2000);
000048  f44f60fa          MOV      r0,#0x7d0
00004c  f7fffffe          BL       vTaskDelay
;;;53     								System.Power_Adjustment=0; //增减功率执行标记 1正在
000050  2000              MOVS     r0,#0
000052  49f8              LDR      r1,|L1.1076|
000054  f88100a8          STRB     r0,[r1,#0xa8]
                  |L1.88|
000058  f001babc          B.W      |L1.5588|
                  |L1.92|
;;;54                 }
;;;55     						
;;;56                 else	if((ulValue & BIT_1) != 0)	//增加功率		//待测试
00005c  9839              LDR      r0,[sp,#0xe4]
00005e  f0000002          AND      r0,r0,#2
000062  2800              CMP      r0,#0
000064  d07e              BEQ      |L1.356|
;;;57                 {
;;;58     							if( get_history_alarm() == 0x01 )
000066  f7fffffe          BL       get_history_alarm
00006a  2801              CMP      r0,#1
00006c  d103              BNE      |L1.118|
;;;59                     {
;;;60                         System.status = SYSTEM_ALARM;
00006e  2011              MOVS     r0,#0x11
000070  49f0              LDR      r1,|L1.1076|
000072  72c8              STRB     r0,[r1,#0xb]
000074  e002              B        |L1.124|
                  |L1.118|
;;;61                     }
;;;62                     else
;;;63                     {
;;;64                         System.status = SYSTEM_EMISSING;
000076  2001              MOVS     r0,#1
000078  49ee              LDR      r1,|L1.1076|
00007a  72c8              STRB     r0,[r1,#0xb]
                  |L1.124|
;;;65                     }
;;;66     
;;;67                     System.modify_power = 0x01;
00007c  2001              MOVS     r0,#1
00007e  49ed              LDR      r1,|L1.1076|
000080  7488              STRB     r0,[r1,#0x12]
;;;68                     if(System.mode==1)		//如果是单频
000082  4608              MOV      r0,r1
000084  7dc0              LDRB     r0,[r0,#0x17]  ; System
000086  2801              CMP      r0,#1
000088  d10f              BNE      |L1.170|
;;;69     								{
;;;70     									  power_add(GT2000_Rx.Frequency_power);  //功率微调增，，一次增加+65W
00008a  48f2              LDR      r0,|L1.1108|
00008c  f7fffffe          BL       power_add
;;;71     										Change_Power_Value.Frequency_power[0]=GT2000_Rx.Frequency_power[0];												
000090  48f0              LDR      r0,|L1.1108|
000092  3842              SUBS     r0,r0,#0x42
000094  f8900042          LDRB     r0,[r0,#0x42]  ; GT2000_Rx
000098  f88d009e          STRB     r0,[sp,#0x9e]
;;;72     								    Change_Power_Value.Frequency_power[1]=GT2000_Rx.Frequency_power[1];										
00009c  48ed              LDR      r0,|L1.1108|
00009e  3842              SUBS     r0,r0,#0x42
0000a0  f8901043          LDRB     r1,[r0,#0x43]
0000a4  f88d109f          STRB     r1,[sp,#0x9f]
0000a8  e026              B        |L1.248|
                  |L1.170|
;;;73     								}
;;;74     								
;;;75     								else if(System.mode==2)
0000aa  48e2              LDR      r0,|L1.1076|
0000ac  7dc0              LDRB     r0,[r0,#0x17]  ; System
0000ae  2802              CMP      r0,#2
0000b0  d10f              BNE      |L1.210|
;;;76     								{							
;;;77     									  power_add(GT2000_Rx.Frequency_power);  //功率微调增，，一次增加+65W
0000b2  48e8              LDR      r0,|L1.1108|
0000b4  f7fffffe          BL       power_add
;;;78     										Change_Power_Value.Frequency_power[0]=GT2000_Rx.Frequency_power[0];												
0000b8  48e6              LDR      r0,|L1.1108|
0000ba  3842              SUBS     r0,r0,#0x42
0000bc  f8900042          LDRB     r0,[r0,#0x42]  ; GT2000_Rx
0000c0  f88d009e          STRB     r0,[sp,#0x9e]
;;;79     								    Change_Power_Value.Frequency_power[1]=GT2000_Rx.Frequency_power[1];		
0000c4  48e3              LDR      r0,|L1.1108|
0000c6  3842              SUBS     r0,r0,#0x42
0000c8  f8901043          LDRB     r1,[r0,#0x43]
0000cc  f88d109f          STRB     r1,[sp,#0x9f]
0000d0  e012              B        |L1.248|
                  |L1.210|
;;;80     								}
;;;81     								
;;;82     								else if(System.mode==3)
0000d2  48d8              LDR      r0,|L1.1076|
0000d4  7dc0              LDRB     r0,[r0,#0x17]  ; System
0000d6  2803              CMP      r0,#3
0000d8  d10e              BNE      |L1.248|
;;;83     								{
;;;84     									  power_add(GT2000_Rx.Frequency_power);  //功率微调增，，一次增加+65W
0000da  48de              LDR      r0,|L1.1108|
0000dc  f7fffffe          BL       power_add
;;;85     										Change_Power_Value.Frequency_power[0]=GT2000_Rx.Frequency_power[0];												
0000e0  48dc              LDR      r0,|L1.1108|
0000e2  3842              SUBS     r0,r0,#0x42
0000e4  f8900042          LDRB     r0,[r0,#0x42]  ; GT2000_Rx
0000e8  f88d009e          STRB     r0,[sp,#0x9e]
;;;86     								    Change_Power_Value.Frequency_power[1]=GT2000_Rx.Frequency_power[1];		
0000ec  48d9              LDR      r0,|L1.1108|
0000ee  3842              SUBS     r0,r0,#0x42
0000f0  f8901043          LDRB     r1,[r0,#0x43]
0000f4  f88d109f          STRB     r1,[sp,#0x9f]
                  |L1.248|
;;;87     								}
;;;88     								
;;;89     								memcpy(Change_Power_Value.Gt2000_freq1,GT2000_Rx.Gt2000_freq1,2);
0000f8  48d6              LDR      r0,|L1.1108|
0000fa  3842              SUBS     r0,r0,#0x42
0000fc  8c80              LDRH     r0,[r0,#0x24]  ; GT2000_Rx
0000fe  f8ad0080          STRH     r0,[sp,#0x80]
;;;90     								memcpy(Change_Power_Value.Gt2000_freq2,GT2000_Rx.Gt2000_freq2,2);
000102  48d4              LDR      r0,|L1.1108|
000104  3842              SUBS     r0,r0,#0x42
000106  8dc0              LDRH     r0,[r0,#0x2e]  ; GT2000_Rx
000108  f8ad008a          STRH     r0,[sp,#0x8a]
;;;91     								memcpy(Change_Power_Value.Gt2000_freq3,GT2000_Rx.Gt2000_freq3,2);
00010c  48d1              LDR      r0,|L1.1108|
00010e  3842              SUBS     r0,r0,#0x42
000110  8f00              LDRH     r0,[r0,#0x38]  ; GT2000_Rx
000112  f8ad0094          STRH     r0,[sp,#0x94]
;;;92     								
;;;93     								Change_Power_Value.Gt2000_mode=System.INQUIRE_Mode;   //从机器上查到的工作模式
000116  48c7              LDR      r0,|L1.1076|
000118  7e00              LDRB     r0,[r0,#0x18]  ; System
00011a  f88d0061          STRB     r0,[sp,#0x61]
;;;94     //								Power_Range(&Change_Power_Value,Change_Power_Value.Frequency_power);		//转换为幅度值数据
;;;95     								
;;;96     				Gt_RF_Close();		//关发射
00011e  f7fffffe          BL       Gt_RF_Close
;;;97     				vTaskDelay(50);
000122  2032              MOVS     r0,#0x32
000124  f7fffffe          BL       vTaskDelay
;;;98     								
;;;99     								GT_Set_Value(Change_Power_Value);	 //设置工作参数，前面赋值
000128  225b              MOVS     r2,#0x5b
00012a  a91b              ADD      r1,sp,#0x6c
00012c  4668              MOV      r0,sp
00012e  f7fffffe          BL       __aeabi_memcpy4
000132  a817              ADD      r0,sp,#0x5c
000134  c80f              LDM      r0,{r0-r3}
000136  f7fffffe          BL       GT_Set_Value
;;;100    								Trans_printf(" 2由此进入设置工作模式和频率22 ");
00013a  a0c7              ADR      r0,|L1.1112|
00013c  f7fffffe          BL       Trans_printf
;;;101    								vTaskDelay(500);											
000140  f44f70fa          MOV      r0,#0x1f4
000144  f7fffffe          BL       vTaskDelay
;;;102    					Gt_RF_Open();
000148  f7fffffe          BL       Gt_RF_Open
;;;103    					Trans_printf(" 开发射命令已下发22 ");
00014c  a0ca              ADR      r0,|L1.1144|
00014e  f7fffffe          BL       Trans_printf
;;;104    								
;;;105    								if(System.status!=SYSTEM_SCAN)		//如果不是扫频，直接更新状态
000152  48b8              LDR      r0,|L1.1076|
000154  7ac0              LDRB     r0,[r0,#0xb]  ; System
000156  2805              CMP      r0,#5
000158  d002              BEQ      |L1.352|
;;;106    								{
;;;107    									System.status=SYSTEM_EMISSING;
00015a  2001              MOVS     r0,#1
00015c  49b5              LDR      r1,|L1.1076|
00015e  72c8              STRB     r0,[r1,#0xb]
                  |L1.352|
;;;108    								}
;;;109    								vTaskDelay(100);
000160  2064              MOVS     r0,#0x64
000162  e000              B        |L1.358|
                  |L1.356|
000164  e0d5              B        |L1.786|
                  |L1.358|
000166  f7fffffe          BL       vTaskDelay
;;;110    								Gt_Inquire_All();		//查询一次，看有无报警
00016a  f7fffffe          BL       Gt_Inquire_All
;;;111    								ret=GT2000_Wait_Ack(MT2000_CMD_INQUIRE);							
00016e  20ce              MOVS     r0,#0xce
000170  f7fffffe          BL       GT2000_Wait_Ack
000174  4606              MOV      r6,r0
;;;112    								if( ret == MT2000_ACK_ALARM )
000176  1cb0              ADDS     r0,r6,#2
000178  b910              CBNZ     r0,|L1.384|
;;;113    								{
;;;114    										GT2000_Alarm_Stop();
00017a  f7fffffe          BL       GT2000_Alarm_Stop
00017e  e003              B        |L1.392|
                  |L1.384|
;;;115    								}
;;;116    								else	if( ret == MT2000_ACK_OK )
000180  2e01              CMP      r6,#1
000182  d101              BNE      |L1.392|
;;;117    								{
;;;118    										GT2000_Buffer_Clean();
000184  f7fffffe          BL       GT2000_Buffer_Clean
                  |L1.392|
;;;119    								}			
;;;120    
;;;121    								if( ret != MT2000_ACK_OK)	
000188  2e01              CMP      r6,#1
00018a  d00d              BEQ      |L1.424|
;;;122    								{
;;;123    										System.stop = 0x00;
00018c  2000              MOVS     r0,#0
00018e  49a9              LDR      r1,|L1.1076|
000190  7548              STRB     r0,[r1,#0x15]
;;;124    
;;;125    										System.open = 0x02;
000192  2002              MOVS     r0,#2
000194  7308              STRB     r0,[r1,#0xc]
;;;126    										System.achieve_add_sub = 0;
000196  2000              MOVS     r0,#0
000198  7448              STRB     r0,[r1,#0x11]
;;;127    										System.modify_power = 0;
00019a  7488              STRB     r0,[r1,#0x12]
;;;128    										System.cancel_add_sub = 0;
00019c  74c8              STRB     r0,[r1,#0x13]
;;;129    										System_Status_Clean();
00019e  f7fffffe          BL       System_Status_Clean
;;;130    
;;;131    										Alarm.no_respond_locate = 10;
0001a2  200a              MOVS     r0,#0xa
0001a4  49ba              LDR      r1,|L1.1168|
0001a6  7188              STRB     r0,[r1,#6]
                  |L1.424|
;;;132    								}
;;;133    								//发射成功之后，System.emission=0x01; 有些标志位未置位，导致Task_Hardware_Monitor()会再次判断为需要发射，出现警告
;;;134    
;;;135    								/* 发射成功之后，不会马上更新数据，在这里等待数据更新(功率会更新的比较慢) */
;;;136    						for(i=0; i<100; i++)
0001a8  2400              MOVS     r4,#0
0001aa  e022              B        |L1.498|
                  |L1.428|
;;;137    						{
;;;138    							Gt_Inquire_All();
0001ac  f7fffffe          BL       Gt_Inquire_All
;;;139    							vTaskDelay(50);
0001b0  2032              MOVS     r0,#0x32
0001b2  f7fffffe          BL       vTaskDelay
;;;140    							ret=GT2000_Wait_Ack(MT2000_CMD_INQUIRE);
0001b6  20ce              MOVS     r0,#0xce
0001b8  f7fffffe          BL       GT2000_Wait_Ack
0001bc  4606              MOV      r6,r0
;;;141    							if( ret == MT2000_ACK_ALARM )
0001be  1cb0              ADDS     r0,r6,#2
0001c0  b908              CBNZ     r0,|L1.454|
;;;142    							{
;;;143    									GT2000_Alarm_Stop();
0001c2  f7fffffe          BL       GT2000_Alarm_Stop
                  |L1.454|
;;;144    							}
;;;145    							if( System.Forward_Power >= 150.0 )
0001c6  499b              LDR      r1,|L1.1076|
0001c8  6ec8              LDR      r0,[r1,#0x6c]  ; System
0001ca  f7fffffe          BL       __aeabi_f2d
0001ce  4607              MOV      r7,r0
0001d0  2200              MOVS     r2,#0
0001d2  4bb0              LDR      r3,|L1.1172|
0001d4  f7fffffe          BL       __aeabi_cdrcmple
0001d8  d803              BHI      |L1.482|
;;;146    							{
;;;147    									System.emission = 0x01;
0001da  2001              MOVS     r0,#1
0001dc  4995              LDR      r1,|L1.1076|
0001de  7588              STRB     r0,[r1,#0x16]
;;;148    									break;
0001e0  e009              B        |L1.502|
                  |L1.482|
;;;149    							}
;;;150    							else
;;;151    							{
;;;152    									System.emission = 0x00;		//等待返回的功率不为零，否则清零
0001e2  2000              MOVS     r0,#0
0001e4  4993              LDR      r1,|L1.1076|
0001e6  7588              STRB     r0,[r1,#0x16]
;;;153    							}
;;;154    
;;;155    								vTaskDelay(100);
0001e8  2064              MOVS     r0,#0x64
0001ea  f7fffffe          BL       vTaskDelay
0001ee  1c60              ADDS     r0,r4,#1              ;136
0001f0  b2c4              UXTB     r4,r0                 ;136
                  |L1.498|
0001f2  2c64              CMP      r4,#0x64              ;136
0001f4  dbda              BLT      |L1.428|
                  |L1.502|
0001f6  bf00              NOP                            ;148
;;;156    						}
;;;157    	
;;;158    						if( ret != MT2000_ACK_OK )
0001f8  2e01              CMP      r6,#1
0001fa  d002              BEQ      |L1.514|
;;;159    						{
;;;160    								Alarm.no_respond_locate = 12;
0001fc  200c              MOVS     r0,#0xc
0001fe  49a4              LDR      r1,|L1.1168|
000200  7188              STRB     r0,[r1,#6]
                  |L1.514|
;;;161    						}
;;;162    					
;;;163    						if( (System.Forward_Power <= 10.0) && (System.Electricity >= 10.0) )	//无功率报警
000202  498c              LDR      r1,|L1.1076|
000204  6ec8              LDR      r0,[r1,#0x6c]  ; System
000206  f7fffffe          BL       __aeabi_f2d
00020a  4607              MOV      r7,r0
00020c  4688              MOV      r8,r1
00020e  2200              MOVS     r2,#0
000210  4ba1              LDR      r3,|L1.1176|
000212  f7fffffe          BL       __aeabi_cdcmple
000216  d83d              BHI      |L1.660|
000218  4986              LDR      r1,|L1.1076|
00021a  6f88              LDR      r0,[r1,#0x78]  ; System
00021c  f7fffffe          BL       __aeabi_f2d
000220  4607              MOV      r7,r0
000222  4688              MOV      r8,r1
000224  2200              MOVS     r2,#0
000226  4b9c              LDR      r3,|L1.1176|
000228  f7fffffe          BL       __aeabi_cdrcmple
00022c  d832              BHI      |L1.660|
;;;164    						{
;;;165    						
;;;166    								if( Alarm.no_power == 0 )
00022e  4898              LDR      r0,|L1.1168|
000230  7cc0              LDRB     r0,[r0,#0x13]  ; Alarm
000232  bb78              CBNZ     r0,|L1.660|
;;;167    								{
;;;168    									if( System.time_update_flag == 0x01 )
000234  487f              LDR      r0,|L1.1076|
000236  7a80              LDRB     r0,[r0,#0xa]  ; System
000238  2801              CMP      r0,#1
00023a  d124              BNE      |L1.646|
;;;169    									{
;;;170    										Alarm.no_power_time_flag = 0x01;
00023c  4994              LDR      r1,|L1.1168|
00023e  7508              STRB     r0,[r1,#0x14]
;;;171    										Time_Printf( (RTC_GetCounter()+g_stamp_distance), &set_time );
000240  f7fffffe          BL       RTC_GetCounter
000244  4995              LDR      r1,|L1.1180|
000246  6809              LDR      r1,[r1,#0]  ; g_stamp_distance
000248  1847              ADDS     r7,r0,r1
00024a  4995              LDR      r1,|L1.1184|
00024c  4638              MOV      r0,r7
00024e  f7fffffe          BL       Time_Printf
;;;172    										Alarm_historyBack.no_power_time[0]=set_time.tm_year-2000;
000252  4893              LDR      r0,|L1.1184|
000254  7d00              LDRB     r0,[r0,#0x14]  ; set_time
000256  f5a060fa          SUB      r0,r0,#0x7d0
00025a  4992              LDR      r1,|L1.1188|
00025c  70c8              STRB     r0,[r1,#3]
;;;173    										Alarm_historyBack.no_power_time[1]=set_time.tm_mon;
00025e  4890              LDR      r0,|L1.1184|
000260  7c01              LDRB     r1,[r0,#0x10]  ; set_time
000262  4890              LDR      r0,|L1.1188|
000264  7101              STRB     r1,[r0,#4]
;;;174    										Alarm_historyBack.no_power_time[2]=set_time.tm_mday;
000266  488e              LDR      r0,|L1.1184|
000268  7b01              LDRB     r1,[r0,#0xc]  ; set_time
00026a  488e              LDR      r0,|L1.1188|
00026c  7141              STRB     r1,[r0,#5]
;;;175    										Alarm_historyBack.no_power_time[3]=set_time.tm_hour;
00026e  488c              LDR      r0,|L1.1184|
000270  7a01              LDRB     r1,[r0,#8]  ; set_time
000272  488c              LDR      r0,|L1.1188|
000274  7181              STRB     r1,[r0,#6]
;;;176    										Alarm_historyBack.no_power_time[4]=set_time.tm_min;
000276  488a              LDR      r0,|L1.1184|
000278  7901              LDRB     r1,[r0,#4]  ; set_time
00027a  488a              LDR      r0,|L1.1188|
00027c  71c1              STRB     r1,[r0,#7]
;;;177    										Alarm_historyBack.no_power_time[5]=set_time.tm_sec;
00027e  4888              LDR      r0,|L1.1184|
000280  7801              LDRB     r1,[r0,#0]  ; set_time
000282  4888              LDR      r0,|L1.1188|
000284  7201              STRB     r1,[r0,#8]
                  |L1.646|
;;;178    									}
;;;179    
;;;180    									Alarm.alarm_history = 1;
000286  2001              MOVS     r0,#1
000288  4981              LDR      r1,|L1.1168|
00028a  7008              STRB     r0,[r1,#0]
;;;181    									Alarm.no_power = 1;
00028c  74c8              STRB     r0,[r1,#0x13]
;;;182    									Trans_printf(" 增加功率检测到无功率报警2！ \n");
00028e  a086              ADR      r0,|L1.1192|
000290  f7fffffe          BL       Trans_printf
                  |L1.660|
;;;183    								}
;;;184    						}
;;;185    						//发射成功，检查报警
;;;186    						swr_power_alarm_check();	//驻波比检测
000294  f7fffffe          BL       swr_power_alarm_check
;;;187    
;;;188    						if( Alarm.emission == 0x01 )	//激励器自身报警，立即停止
000298  487d              LDR      r0,|L1.1168|
00029a  7840              LDRB     r0,[r0,#1]  ; Alarm
00029c  2801              CMP      r0,#1
00029e  d101              BNE      |L1.676|
;;;189    						{
;;;190    								GT2000_Alarm_Stop();
0002a0  f7fffffe          BL       GT2000_Alarm_Stop
                  |L1.676|
;;;191    						}
;;;192    								
;;;193    						if( (Alarm.emission==0x01) || (Alarm.no_respond==0x01) || (Alarm.no_power==0x01) || (Alarm.swr_alarm==0x01) || (Alarm.over_Electric==0x01) )	//激励器自身报警，无应答报警、无功率报警
0002a4  487a              LDR      r0,|L1.1168|
0002a6  7840              LDRB     r0,[r0,#1]  ; Alarm
0002a8  2801              CMP      r0,#1
0002aa  d00f              BEQ      |L1.716|
0002ac  4878              LDR      r0,|L1.1168|
0002ae  78c0              LDRB     r0,[r0,#3]  ; Alarm
0002b0  2801              CMP      r0,#1
0002b2  d00b              BEQ      |L1.716|
0002b4  4876              LDR      r0,|L1.1168|
0002b6  7cc0              LDRB     r0,[r0,#0x13]  ; Alarm
0002b8  2801              CMP      r0,#1
0002ba  d007              BEQ      |L1.716|
0002bc  4874              LDR      r0,|L1.1168|
0002be  7c40              LDRB     r0,[r0,#0x11]  ; Alarm
0002c0  2801              CMP      r0,#1
0002c2  d003              BEQ      |L1.716|
0002c4  4872              LDR      r0,|L1.1168|
0002c6  7ac0              LDRB     r0,[r0,#0xb]  ; Alarm
0002c8  2801              CMP      r0,#1
0002ca  d103              BNE      |L1.724|
                  |L1.716|
;;;194    						{
;;;195    								System.status = SYSTEM_ALARM;
0002cc  2011              MOVS     r0,#0x11
0002ce  4959              LDR      r1,|L1.1076|
0002d0  72c8              STRB     r0,[r1,#0xb]
0002d2  e012              B        |L1.762|
                  |L1.724|
;;;196    						}
;;;197    						else	if( (System.cancel_sweeping==0x01) || (System.stop==0x01) )			//取消扫频，停止后返回
0002d4  4857              LDR      r0,|L1.1076|
0002d6  7bc0              LDRB     r0,[r0,#0xf]  ; System
0002d8  2801              CMP      r0,#1
0002da  d003              BEQ      |L1.740|
0002dc  4855              LDR      r0,|L1.1076|
0002de  7d40              LDRB     r0,[r0,#0x15]  ; System
0002e0  2801              CMP      r0,#1
0002e2  d10a              BNE      |L1.762|
                  |L1.740|
;;;198    						{
;;;199    								if( get_history_alarm() == 0x01 )
0002e4  f7fffffe          BL       get_history_alarm
0002e8  2801              CMP      r0,#1
0002ea  d103              BNE      |L1.756|
;;;200    								{
;;;201    										System.status = SYSTEM_ALARM;
0002ec  2011              MOVS     r0,#0x11
0002ee  4951              LDR      r1,|L1.1076|
0002f0  72c8              STRB     r0,[r1,#0xb]
0002f2  e002              B        |L1.762|
                  |L1.756|
;;;202    								}
;;;203    								else
;;;204    								{
;;;205    										System.status = SYSTEM_STANDBY;
0002f4  2002              MOVS     r0,#2
0002f6  494f              LDR      r1,|L1.1076|
0002f8  72c8              STRB     r0,[r1,#0xb]
                  |L1.762|
;;;206    								}
;;;207    						}
;;;208    
;;;209                    System.modify_power = 0x00;
0002fa  2000              MOVS     r0,#0
0002fc  494d              LDR      r1,|L1.1076|
0002fe  7488              STRB     r0,[r1,#0x12]
;;;210    								
;;;211    								vTaskDelay(3000);		//等待功率稳定
000300  f64030b8          MOV      r0,#0xbb8
000304  f7fffffe          BL       vTaskDelay
;;;212    						
;;;213    								System.Power_Adjustment=0;
000308  2000              MOVS     r0,#0
00030a  494a              LDR      r1,|L1.1076|
00030c  f88100a8          STRB     r0,[r1,#0xa8]
000310  e6a2              B        |L1.88|
                  |L1.786|
;;;214                }
;;;215    						
;;;216                else 	if((ulValue & BIT_2) != 0)	//减小功率		
000312  9839              LDR      r0,[sp,#0xe4]
000314  f0000004          AND      r0,r0,#4
000318  2800              CMP      r0,#0
00031a  d07d              BEQ      |L1.1048|
;;;217                {
;;;218                    if( get_history_alarm() == 0x01 )
00031c  f7fffffe          BL       get_history_alarm
000320  2801              CMP      r0,#1
000322  d103              BNE      |L1.812|
;;;219                    {
;;;220                        System.status = SYSTEM_ALARM;
000324  2011              MOVS     r0,#0x11
000326  4943              LDR      r1,|L1.1076|
000328  72c8              STRB     r0,[r1,#0xb]
00032a  e002              B        |L1.818|
                  |L1.812|
;;;221                    }
;;;222                    else
;;;223                    {
;;;224                        System.status = SYSTEM_EMISSING;
00032c  2001              MOVS     r0,#1
00032e  4941              LDR      r1,|L1.1076|
000330  72c8              STRB     r0,[r1,#0xb]
                  |L1.818|
;;;225                    }
;;;226    
;;;227                    System.modify_power = 0x01;
000332  2001              MOVS     r0,#1
000334  493f              LDR      r1,|L1.1076|
000336  7488              STRB     r0,[r1,#0x12]
;;;228                    if(System.mode==1)		//如果是单频
000338  4608              MOV      r0,r1
00033a  7dc0              LDRB     r0,[r0,#0x17]  ; System
00033c  2801              CMP      r0,#1
00033e  d119              BNE      |L1.884|
;;;229    								{
;;;230    									if(GT2000_Rx.Now_all_power>0x41)			//当前功率至少65W
000340  4844              LDR      r0,|L1.1108|
000342  3842              SUBS     r0,r0,#0x42
000344  f8b00044          LDRH     r0,[r0,#0x44]  ; GT2000_Rx
000348  2841              CMP      r0,#0x41
00034a  dd0f              BLE      |L1.876|
;;;231    									{
;;;232    										power_sub(GT2000_Rx.Frequency_power);  //功率微调减，，一次减小-65W
00034c  4841              LDR      r0,|L1.1108|
00034e  f7fffffe          BL       power_sub
;;;233    										Change_Power_Value.Frequency_power[0]=GT2000_Rx.Frequency_power[0];												
000352  4840              LDR      r0,|L1.1108|
000354  3842              SUBS     r0,r0,#0x42
000356  f8900042          LDRB     r0,[r0,#0x42]  ; GT2000_Rx
00035a  f88d009e          STRB     r0,[sp,#0x9e]
;;;234    								    Change_Power_Value.Frequency_power[1]=GT2000_Rx.Frequency_power[1];	
00035e  483d              LDR      r0,|L1.1108|
000360  3842              SUBS     r0,r0,#0x42
000362  f8901043          LDRB     r1,[r0,#0x43]
000366  f88d109f          STRB     r1,[sp,#0x9f]
00036a  e03e              B        |L1.1002|
                  |L1.876|
;;;235    									}
;;;236    									else
;;;237    									{
;;;238    										Sub_PowerBack.results[0]=0xFC;				//失败
00036c  20fc              MOVS     r0,#0xfc
00036e  4956              LDR      r1,|L1.1224|
000370  7048              STRB     r0,[r1,#1]
000372  e03a              B        |L1.1002|
                  |L1.884|
;;;239    									}
;;;240    								}
;;;241    								
;;;242    								else if(System.mode==2)
000374  482f              LDR      r0,|L1.1076|
000376  7dc0              LDRB     r0,[r0,#0x17]  ; System
000378  2802              CMP      r0,#2
00037a  d119              BNE      |L1.944|
;;;243    								{
;;;244    									if(GT2000_Rx.Now_all_power>0x41)			//当前功率至少65W
00037c  4835              LDR      r0,|L1.1108|
00037e  3842              SUBS     r0,r0,#0x42
000380  f8b00044          LDRH     r0,[r0,#0x44]  ; GT2000_Rx
000384  2841              CMP      r0,#0x41
000386  dd0f              BLE      |L1.936|
;;;245    									{
;;;246    										power_sub(GT2000_Rx.Frequency_power);  //功率微调减，，一次减小-65W
000388  4832              LDR      r0,|L1.1108|
00038a  f7fffffe          BL       power_sub
;;;247    										Change_Power_Value.Frequency_power[0]=GT2000_Rx.Frequency_power[0];												
00038e  4831              LDR      r0,|L1.1108|
000390  3842              SUBS     r0,r0,#0x42
000392  f8900042          LDRB     r0,[r0,#0x42]  ; GT2000_Rx
000396  f88d009e          STRB     r0,[sp,#0x9e]
;;;248    								    Change_Power_Value.Frequency_power[1]=GT2000_Rx.Frequency_power[1];	
00039a  482e              LDR      r0,|L1.1108|
00039c  3842              SUBS     r0,r0,#0x42
00039e  f8901043          LDRB     r1,[r0,#0x43]
0003a2  f88d109f          STRB     r1,[sp,#0x9f]
0003a6  e020              B        |L1.1002|
                  |L1.936|
;;;249    									}
;;;250    									else
;;;251    									{
;;;252    										Sub_PowerBack.results[0]=0xFC;				//失败
0003a8  20fc              MOVS     r0,#0xfc
0003aa  4947              LDR      r1,|L1.1224|
0003ac  7048              STRB     r0,[r1,#1]
0003ae  e01c              B        |L1.1002|
                  |L1.944|
;;;253    									}
;;;254    								}
;;;255    								
;;;256    								else if(System.mode==3)
0003b0  4820              LDR      r0,|L1.1076|
0003b2  7dc0              LDRB     r0,[r0,#0x17]  ; System
0003b4  2803              CMP      r0,#3
0003b6  d118              BNE      |L1.1002|
;;;257    								{
;;;258    									if(GT2000_Rx.Now_all_power>0x41)			//当前功率至少65W
0003b8  4826              LDR      r0,|L1.1108|
0003ba  3842              SUBS     r0,r0,#0x42
0003bc  f8b00044          LDRH     r0,[r0,#0x44]  ; GT2000_Rx
0003c0  2841              CMP      r0,#0x41
0003c2  dd0f              BLE      |L1.996|
;;;259    									{
;;;260    										power_sub(GT2000_Rx.Frequency_power);  //功率微调减，，一次减小-65W
0003c4  4823              LDR      r0,|L1.1108|
0003c6  f7fffffe          BL       power_sub
;;;261    										Change_Power_Value.Frequency_power[0]=GT2000_Rx.Frequency_power[0];												
0003ca  4822              LDR      r0,|L1.1108|
0003cc  3842              SUBS     r0,r0,#0x42
0003ce  f8900042          LDRB     r0,[r0,#0x42]  ; GT2000_Rx
0003d2  f88d009e          STRB     r0,[sp,#0x9e]
;;;262    								    Change_Power_Value.Frequency_power[1]=GT2000_Rx.Frequency_power[1];	
0003d6  481f              LDR      r0,|L1.1108|
0003d8  3842              SUBS     r0,r0,#0x42
0003da  f8901043          LDRB     r1,[r0,#0x43]
0003de  f88d109f          STRB     r1,[sp,#0x9f]
0003e2  e002              B        |L1.1002|
                  |L1.996|
;;;263    									}
;;;264    									else
;;;265    									{
;;;266    										Sub_PowerBack.results[0]=0xFC;				//失败
0003e4  20fc              MOVS     r0,#0xfc
0003e6  4938              LDR      r1,|L1.1224|
0003e8  7048              STRB     r0,[r1,#1]
                  |L1.1002|
;;;267    									}
;;;268    								}
;;;269    								
;;;270    								memcpy(Change_Power_Value.Gt2000_freq1,GT2000_Rx.Gt2000_freq1,8);
0003ea  481a              LDR      r0,|L1.1108|
0003ec  3842              SUBS     r0,r0,#0x42
0003ee  6a41              LDR      r1,[r0,#0x24]  ; GT2000_Rx
0003f0  9120              STR      r1,[sp,#0x80]
0003f2  6a80              LDR      r0,[r0,#0x28]  ; GT2000_Rx
0003f4  9021              STR      r0,[sp,#0x84]
;;;271    								memcpy(Change_Power_Value.Gt2000_freq2,GT2000_Rx.Gt2000_freq2,8);
0003f6  4817              LDR      r0,|L1.1108|
0003f8  3814              SUBS     r0,r0,#0x14
0003fa  6801              LDR      r1,[r0,#0]  ; GT2000_Rx
0003fc  f8cd108a          STR      r1,[sp,#0x8a]
000400  6840              LDR      r0,[r0,#4]  ; GT2000_Rx
000402  f8cd008e          STR      r0,[sp,#0x8e]
;;;272    								memcpy(Change_Power_Value.Gt2000_freq3,GT2000_Rx.Gt2000_freq3,8);
000406  4813              LDR      r0,|L1.1108|
000408  3842              SUBS     r0,r0,#0x42
00040a  6b81              LDR      r1,[r0,#0x38]  ; GT2000_Rx
00040c  9125              STR      r1,[sp,#0x94]
00040e  6bc0              LDR      r0,[r0,#0x3c]  ; GT2000_Rx
000410  9026              STR      r0,[sp,#0x98]
;;;273    								
;;;274    								Change_Power_Value.Gt2000_mode=System.INQUIRE_Mode;   //从机器上查到的工作模式
000412  4808              LDR      r0,|L1.1076|
000414  7e00              LDRB     r0,[r0,#0x18]  ; System
000416  e000              B        |L1.1050|
                  |L1.1048|
000418  e14e              B        |L1.1720|
                  |L1.1050|
00041a  f88d0061          STRB     r0,[sp,#0x61]
;;;275    //								Power_Range(&Change_Power_Value,Change_Power_Value.power);		//转换为幅度值数据
;;;276    								
;;;277    								Gt_RF_Close();		//关发射
00041e  f7fffffe          BL       Gt_RF_Close
;;;278    								vTaskDelay(50);
000422  2032              MOVS     r0,#0x32
000424  f7fffffe          BL       vTaskDelay
;;;279    								
;;;280    								GT_Set_Value(Change_Power_Value);	//设置发射机参数
000428  225b              MOVS     r2,#0x5b
00042a  a91b              ADD      r1,sp,#0x6c
00042c  4668              MOV      r0,sp
00042e  f7fffffe          BL       __aeabi_memcpy4
000432  e04b              B        |L1.1228|
                  |L1.1076|
                          DCD      System
                  |L1.1080|
000438  20424954          DCB      " BIT_0_to_GT2000_Stop ! ",0
00043c  5f305f74
000440  6f5f4754
000444  32303030
000448  5f53746f
00044c  70202120
000450  00      
000451  00                DCB      0
000452  00                DCB      0
000453  00                DCB      0
                  |L1.1108|
                          DCD      GT2000_Rx+0x42
                  |L1.1112|
000458  2032d3c9          DCB      " 2",211,201,180,203,189,248,200,235,201,232,214,195,185
00045c  b4cbbdf8
000460  c8ebc9e8
000464  d6c3b9  
000467  a4d7f7c4          DCB      164,215,247,196,163,202,189,186,205,198,181,194,202,"22 "
00046b  a3cabdba
00046f  cdc6b5c2
000473  ca323220
000477  00                DCB      0
                  |L1.1144|
000478  20bfaab7          DCB      " ",191,170,183,162,201,228,195,252,193,238,210,209,207,194
00047c  a2c9e4c3
000480  fcc1eed2
000484  d1cfc2  
000487  b7a23232          DCB      183,162,"22 ",0
00048b  2000    
00048d  00                DCB      0
00048e  00                DCB      0
00048f  00                DCB      0
                  |L1.1168|
                          DCD      Alarm
                  |L1.1172|
                          DCD      0x4062c000
                  |L1.1176|
                          DCD      0x40240000
                  |L1.1180|
                          DCD      g_stamp_distance
                  |L1.1184|
                          DCD      set_time
                  |L1.1188|
                          DCD      Alarm_historyBack
                  |L1.1192|
0004a8  20d4f6bc          DCB      " ",212,246,188,211,185,166,194,202,188,236,178,226,181,189
0004ac  d3b9a6c2
0004b0  cabcecb2
0004b4  e2b5bd  
0004b7  cedeb9a6          DCB      206,222,185,166,194,202,177,168,190,175,"2",163,161," \n"
0004bb  c2cab1a8
0004bf  beaf32a3
0004c3  a1200a  
0004c6  00                DCB      0
0004c7  00                DCB      0
                  |L1.1224|
                          DCD      Sub_PowerBack
                  |L1.1228|
0004cc  a817              ADD      r0,sp,#0x5c
0004ce  c80f              LDM      r0,{r0-r3}
0004d0  f7fffffe          BL       GT_Set_Value
;;;281    								Trans_printf(" 3由此进入设置工作模式和频率设置 ");
0004d4  a0f3              ADR      r0,|L1.2212|
0004d6  f7fffffe          BL       Trans_printf
;;;282    								vTaskDelay(50);
0004da  2032              MOVS     r0,#0x32
0004dc  f7fffffe          BL       vTaskDelay
;;;283    								Gt2000_Open(); //开机
0004e0  f7fffffe          BL       Gt2000_Open
;;;284    								Trans_printf(" 开机--等待30s--再开发射 ");
0004e4  a0f8              ADR      r0,|L1.2248|
0004e6  f7fffffe          BL       Trans_printf
;;;285    								vTaskDelay(30000);				//等待30s									
0004ea  f2475030          MOV      r0,#0x7530
0004ee  f7fffffe          BL       vTaskDelay
;;;286    								Gt_RF_Open();  //开发射Gt_RF_Open
0004f2  f7fffffe          BL       Gt_RF_Open
;;;287    								Trans_printf(" 开发射命令已下发 ");
0004f6  a0fb              ADR      r0,|L1.2276|
0004f8  f7fffffe          BL       Trans_printf
;;;288    								
;;;289    								
;;;290    								if(System.status!=SYSTEM_SCAN)		//如果不是扫频，直接更新状态
0004fc  48fe              LDR      r0,|L1.2296|
0004fe  7ac0              LDRB     r0,[r0,#0xb]  ; System
000500  2805              CMP      r0,#5
000502  d002              BEQ      |L1.1290|
;;;291    								{
;;;292    									System.status=SYSTEM_EMISSING;
000504  2001              MOVS     r0,#1
000506  49fc              LDR      r1,|L1.2296|
000508  72c8              STRB     r0,[r1,#0xb]
                  |L1.1290|
;;;293    								}
;;;294    								vTaskDelay(100);
00050a  2064              MOVS     r0,#0x64
00050c  f7fffffe          BL       vTaskDelay
;;;295    								Gt_Inquire_All();		//查询一次，看有无报警
000510  f7fffffe          BL       Gt_Inquire_All
;;;296    								ret=GT2000_Wait_Ack(MT2000_CMD_INQUIRE);						
000514  20ce              MOVS     r0,#0xce
000516  f7fffffe          BL       GT2000_Wait_Ack
00051a  4606              MOV      r6,r0
;;;297    								if( ret == MT2000_ACK_ALARM )
00051c  1cb0              ADDS     r0,r6,#2
00051e  b910              CBNZ     r0,|L1.1318|
;;;298    								{
;;;299    										GT2000_Alarm_Stop();
000520  f7fffffe          BL       GT2000_Alarm_Stop
000524  e003              B        |L1.1326|
                  |L1.1318|
;;;300    								}
;;;301    								else	if( ret == MT2000_ACK_OK )
000526  2e01              CMP      r6,#1
000528  d101              BNE      |L1.1326|
;;;302    								{
;;;303    										GT2000_Buffer_Clean();
00052a  f7fffffe          BL       GT2000_Buffer_Clean
                  |L1.1326|
;;;304    								}			
;;;305    
;;;306    								if( ret != MT2000_ACK_OK)	
00052e  2e01              CMP      r6,#1
000530  d00d              BEQ      |L1.1358|
;;;307    								{
;;;308    										System.stop = 0x00;
000532  2000              MOVS     r0,#0
000534  49f0              LDR      r1,|L1.2296|
000536  7548              STRB     r0,[r1,#0x15]
;;;309    
;;;310    										System.open = 0x02;
000538  2002              MOVS     r0,#2
00053a  7308              STRB     r0,[r1,#0xc]
;;;311    										System.achieve_add_sub = 0;
00053c  2000              MOVS     r0,#0
00053e  7448              STRB     r0,[r1,#0x11]
;;;312    										System.modify_power = 0;
000540  7488              STRB     r0,[r1,#0x12]
;;;313    										System.cancel_add_sub = 0;
000542  74c8              STRB     r0,[r1,#0x13]
;;;314    										System_Status_Clean();
000544  f7fffffe          BL       System_Status_Clean
;;;315    
;;;316    										Alarm.no_respond_locate = 10;
000548  200a              MOVS     r0,#0xa
00054a  49ec              LDR      r1,|L1.2300|
00054c  7188              STRB     r0,[r1,#6]
                  |L1.1358|
;;;317    								}
;;;318    								//发射成功之后，System.emission=0x01; 有些标志位未置位，导致Task_Hardware_Monitor()会再次判断为需要发射，出现警告
;;;319    
;;;320    								/* 发射成功之后，不会马上更新数据，在这里等待数据更新(功率会更新的比较慢) */
;;;321    						for(i=0; i<100; i++)
00054e  2400              MOVS     r4,#0
000550  e022              B        |L1.1432|
                  |L1.1362|
;;;322    						{
;;;323    							Gt_Inquire_All();
000552  f7fffffe          BL       Gt_Inquire_All
;;;324    							vTaskDelay(50);
000556  2032              MOVS     r0,#0x32
000558  f7fffffe          BL       vTaskDelay
;;;325    							ret=GT2000_Wait_Ack(MT2000_CMD_INQUIRE);
00055c  20ce              MOVS     r0,#0xce
00055e  f7fffffe          BL       GT2000_Wait_Ack
000562  4606              MOV      r6,r0
;;;326    							if( ret == MT2000_ACK_ALARM )
000564  1cb0              ADDS     r0,r6,#2
000566  b908              CBNZ     r0,|L1.1388|
;;;327    							{
;;;328    									GT2000_Alarm_Stop();
000568  f7fffffe          BL       GT2000_Alarm_Stop
                  |L1.1388|
;;;329    							}
;;;330    							if( System.Forward_Power >= 150.0 )
00056c  49e2              LDR      r1,|L1.2296|
00056e  6ec8              LDR      r0,[r1,#0x6c]  ; System
000570  f7fffffe          BL       __aeabi_f2d
000574  4607              MOV      r7,r0
000576  2200              MOVS     r2,#0
000578  4be1              LDR      r3,|L1.2304|
00057a  f7fffffe          BL       __aeabi_cdrcmple
00057e  d803              BHI      |L1.1416|
;;;331    							{
;;;332    									System.emission = 0x01;
000580  2001              MOVS     r0,#1
000582  49dd              LDR      r1,|L1.2296|
000584  7588              STRB     r0,[r1,#0x16]
;;;333    									break;
000586  e009              B        |L1.1436|
                  |L1.1416|
;;;334    							}
;;;335    							else
;;;336    							{
;;;337    									System.emission = 0x00;		//等待返回的功率不为零，否则清零
000588  2000              MOVS     r0,#0
00058a  49db              LDR      r1,|L1.2296|
00058c  7588              STRB     r0,[r1,#0x16]
;;;338    							}
;;;339    
;;;340    								vTaskDelay(100);
00058e  2064              MOVS     r0,#0x64
000590  f7fffffe          BL       vTaskDelay
000594  1c60              ADDS     r0,r4,#1              ;321
000596  b2c4              UXTB     r4,r0                 ;321
                  |L1.1432|
000598  2c64              CMP      r4,#0x64              ;321
00059a  dbda              BLT      |L1.1362|
                  |L1.1436|
00059c  bf00              NOP                            ;333
;;;341    						}
;;;342    	
;;;343    						if( ret != MT2000_ACK_OK )
00059e  2e01              CMP      r6,#1
0005a0  d002              BEQ      |L1.1448|
;;;344    						{
;;;345    								Alarm.no_respond_locate = 12;
0005a2  200c              MOVS     r0,#0xc
0005a4  49d5              LDR      r1,|L1.2300|
0005a6  7188              STRB     r0,[r1,#6]
                  |L1.1448|
;;;346    						}
;;;347    					
;;;348    						if( (System.Forward_Power <= 10.0) && (System.Electricity >= 10.0) )	//无功率报警
0005a8  49d3              LDR      r1,|L1.2296|
0005aa  6ec8              LDR      r0,[r1,#0x6c]  ; System
0005ac  f7fffffe          BL       __aeabi_f2d
0005b0  4607              MOV      r7,r0
0005b2  4688              MOV      r8,r1
0005b4  2200              MOVS     r2,#0
0005b6  4bd3              LDR      r3,|L1.2308|
0005b8  f7fffffe          BL       __aeabi_cdcmple
0005bc  d83d              BHI      |L1.1594|
0005be  49ce              LDR      r1,|L1.2296|
0005c0  6f88              LDR      r0,[r1,#0x78]  ; System
0005c2  f7fffffe          BL       __aeabi_f2d
0005c6  4607              MOV      r7,r0
0005c8  4688              MOV      r8,r1
0005ca  2200              MOVS     r2,#0
0005cc  4bcd              LDR      r3,|L1.2308|
0005ce  f7fffffe          BL       __aeabi_cdrcmple
0005d2  d832              BHI      |L1.1594|
;;;349    						{
;;;350    						
;;;351    								if( Alarm.no_power == 0 )
0005d4  48c9              LDR      r0,|L1.2300|
0005d6  7cc0              LDRB     r0,[r0,#0x13]  ; Alarm
0005d8  bb78              CBNZ     r0,|L1.1594|
;;;352    								{
;;;353    									if( System.time_update_flag == 0x01 )
0005da  48c7              LDR      r0,|L1.2296|
0005dc  7a80              LDRB     r0,[r0,#0xa]  ; System
0005de  2801              CMP      r0,#1
0005e0  d124              BNE      |L1.1580|
;;;354    									{
;;;355    										Alarm.no_power_time_flag = 0x01;
0005e2  49c6              LDR      r1,|L1.2300|
0005e4  7508              STRB     r0,[r1,#0x14]
;;;356    										Time_Printf( (RTC_GetCounter()+g_stamp_distance), &set_time );
0005e6  f7fffffe          BL       RTC_GetCounter
0005ea  49c7              LDR      r1,|L1.2312|
0005ec  6809              LDR      r1,[r1,#0]  ; g_stamp_distance
0005ee  1847              ADDS     r7,r0,r1
0005f0  49c6              LDR      r1,|L1.2316|
0005f2  4638              MOV      r0,r7
0005f4  f7fffffe          BL       Time_Printf
;;;357    										Alarm_historyBack.no_power_time[0]=set_time.tm_year-2000;
0005f8  48c4              LDR      r0,|L1.2316|
0005fa  7d00              LDRB     r0,[r0,#0x14]  ; set_time
0005fc  f5a060fa          SUB      r0,r0,#0x7d0
000600  49c3              LDR      r1,|L1.2320|
000602  70c8              STRB     r0,[r1,#3]
;;;358    										Alarm_historyBack.no_power_time[1]=set_time.tm_mon;
000604  48c1              LDR      r0,|L1.2316|
000606  7c01              LDRB     r1,[r0,#0x10]  ; set_time
000608  48c1              LDR      r0,|L1.2320|
00060a  7101              STRB     r1,[r0,#4]
;;;359    										Alarm_historyBack.no_power_time[2]=set_time.tm_mday;
00060c  48bf              LDR      r0,|L1.2316|
00060e  7b01              LDRB     r1,[r0,#0xc]  ; set_time
000610  48bf              LDR      r0,|L1.2320|
000612  7141              STRB     r1,[r0,#5]
;;;360    										Alarm_historyBack.no_power_time[3]=set_time.tm_hour;
000614  48bd              LDR      r0,|L1.2316|
000616  7a01              LDRB     r1,[r0,#8]  ; set_time
000618  48bd              LDR      r0,|L1.2320|
00061a  7181              STRB     r1,[r0,#6]
;;;361    										Alarm_historyBack.no_power_time[4]=set_time.tm_min;
00061c  48bb              LDR      r0,|L1.2316|
00061e  7901              LDRB     r1,[r0,#4]  ; set_time
000620  48bb              LDR      r0,|L1.2320|
000622  71c1              STRB     r1,[r0,#7]
;;;362    										Alarm_historyBack.no_power_time[5]=set_time.tm_sec;
000624  48b9              LDR      r0,|L1.2316|
000626  7801              LDRB     r1,[r0,#0]  ; set_time
000628  48b9              LDR      r0,|L1.2320|
00062a  7201              STRB     r1,[r0,#8]
                  |L1.1580|
;;;363    									}
;;;364    
;;;365    									Alarm.alarm_history = 1;
00062c  2001              MOVS     r0,#1
00062e  49b3              LDR      r1,|L1.2300|
000630  7008              STRB     r0,[r1,#0]
;;;366    									Alarm.no_power = 1;
000632  74c8              STRB     r0,[r1,#0x13]
;;;367    									Trans_printf(" 检测到无功率报警3！ \n");
000634  a0b7              ADR      r0,|L1.2324|
000636  f7fffffe          BL       Trans_printf
                  |L1.1594|
;;;368    								}
;;;369    						}
;;;370    						//发射成功，检查报警
;;;371    						swr_power_alarm_check();	//驻波比检测
00063a  f7fffffe          BL       swr_power_alarm_check
;;;372    
;;;373    						if( Alarm.emission == 0x01 )	//激励器自身报警，立即停止
00063e  48af              LDR      r0,|L1.2300|
000640  7840              LDRB     r0,[r0,#1]  ; Alarm
000642  2801              CMP      r0,#1
000644  d101              BNE      |L1.1610|
;;;374    						{
;;;375    								GT2000_Alarm_Stop();
000646  f7fffffe          BL       GT2000_Alarm_Stop
                  |L1.1610|
;;;376    						}
;;;377    								
;;;378    						if( (Alarm.emission==0x01) || (Alarm.no_respond==0x01) || (Alarm.no_power==0x01) || (Alarm.swr_alarm==0x01) || (Alarm.over_Electric==0x01) )	//激励器自身报警，无应答报警、无功率报警
00064a  48ac              LDR      r0,|L1.2300|
00064c  7840              LDRB     r0,[r0,#1]  ; Alarm
00064e  2801              CMP      r0,#1
000650  d00f              BEQ      |L1.1650|
000652  48aa              LDR      r0,|L1.2300|
000654  78c0              LDRB     r0,[r0,#3]  ; Alarm
000656  2801              CMP      r0,#1
000658  d00b              BEQ      |L1.1650|
00065a  48a8              LDR      r0,|L1.2300|
00065c  7cc0              LDRB     r0,[r0,#0x13]  ; Alarm
00065e  2801              CMP      r0,#1
000660  d007              BEQ      |L1.1650|
000662  48a6              LDR      r0,|L1.2300|
000664  7c40              LDRB     r0,[r0,#0x11]  ; Alarm
000666  2801              CMP      r0,#1
000668  d003              BEQ      |L1.1650|
00066a  48a4              LDR      r0,|L1.2300|
00066c  7ac0              LDRB     r0,[r0,#0xb]  ; Alarm
00066e  2801              CMP      r0,#1
000670  d103              BNE      |L1.1658|
                  |L1.1650|
;;;379    						{
;;;380    								System.status = SYSTEM_ALARM;
000672  2011              MOVS     r0,#0x11
000674  49a0              LDR      r1,|L1.2296|
000676  72c8              STRB     r0,[r1,#0xb]
000678  e012              B        |L1.1696|
                  |L1.1658|
;;;381    						}
;;;382    						else	if( (System.cancel_sweeping==0x01) || (System.stop==0x01) )			//取消扫频，停止后返回
00067a  489f              LDR      r0,|L1.2296|
00067c  7bc0              LDRB     r0,[r0,#0xf]  ; System
00067e  2801              CMP      r0,#1
000680  d003              BEQ      |L1.1674|
000682  489d              LDR      r0,|L1.2296|
000684  7d40              LDRB     r0,[r0,#0x15]  ; System
000686  2801              CMP      r0,#1
000688  d10a              BNE      |L1.1696|
                  |L1.1674|
;;;383    						{
;;;384    								if( get_history_alarm() == 0x01 )
00068a  f7fffffe          BL       get_history_alarm
00068e  2801              CMP      r0,#1
000690  d103              BNE      |L1.1690|
;;;385    								{
;;;386    										System.status = SYSTEM_ALARM;
000692  2011              MOVS     r0,#0x11
000694  4998              LDR      r1,|L1.2296|
000696  72c8              STRB     r0,[r1,#0xb]
000698  e002              B        |L1.1696|
                  |L1.1690|
;;;387    								}
;;;388    								else
;;;389    								{
;;;390    										System.status = SYSTEM_STANDBY;
00069a  2002              MOVS     r0,#2
00069c  4996              LDR      r1,|L1.2296|
00069e  72c8              STRB     r0,[r1,#0xb]
                  |L1.1696|
;;;391    								}
;;;392    						}
;;;393    
;;;394                    System.modify_power = 0x00;
0006a0  2000              MOVS     r0,#0
0006a2  4995              LDR      r1,|L1.2296|
0006a4  7488              STRB     r0,[r1,#0x12]
;;;395    						
;;;396    								vTaskDelay(3000);		//等待功率稳定
0006a6  f64030b8          MOV      r0,#0xbb8
0006aa  f7fffffe          BL       vTaskDelay
;;;397    						
;;;398    								System.Power_Adjustment=0;
0006ae  2000              MOVS     r0,#0
0006b0  4991              LDR      r1,|L1.2296|
0006b2  f88100a8          STRB     r0,[r1,#0xa8]
0006b6  e4cf              B        |L1.88|
                  |L1.1720|
;;;399                }
;;;400    						
;;;401                else 	if((ulValue & BIT_3) != 0)	//发射
0006b8  9839              LDR      r0,[sp,#0xe4]
0006ba  f0000008          AND      r0,r0,#8
0006be  2800              CMP      r0,#0
0006c0  d07e              BEQ      |L1.1984|
;;;402                {
;;;403                    //App_printf("先查询一下是不是停止状态\r\n");
;;;404                         //重复发送计数器
;;;405                    for(repeat_send_counter=0; repeat_send_counter<NO_RESPOND_MAX; repeat_send_counter++)
0006c2  f04f0900          MOV      r9,#0
0006c6  e00e              B        |L1.1766|
                  |L1.1736|
;;;406                    {
;;;407    									
;;;408    											Gt_Inquire_All();		//发射机状态查询								
0006c8  f7fffffe          BL       Gt_Inquire_All
;;;409    											ret=GT2000_Wait_Ack(MT2000_CMD_INQUIRE);
0006cc  20ce              MOVS     r0,#0xce
0006ce  f7fffffe          BL       GT2000_Wait_Ack
0006d2  4606              MOV      r6,r0
;;;410    											if( (ret == MT2000_ACK_OK) || (ret == MT2000_ACK_ALARM) )
0006d4  2e01              CMP      r6,#1
0006d6  d001              BEQ      |L1.1756|
0006d8  1cb0              ADDS     r0,r6,#2
0006da  b900              CBNZ     r0,|L1.1758|
                  |L1.1756|
;;;411    													break;
0006dc  e006              B        |L1.1772|
                  |L1.1758|
0006de  f1090001          ADD      r0,r9,#1              ;405
0006e2  f00009ff          AND      r9,r0,#0xff           ;405
                  |L1.1766|
0006e6  f1b90f03          CMP      r9,#3                 ;405
0006ea  dbed              BLT      |L1.1736|
                  |L1.1772|
0006ec  bf00              NOP      
;;;412    
;;;413                    }
;;;414    								Trans_printf(" 重复发送先查询一下是不是停止状态 \n");
0006ee  a08f              ADR      r0,|L1.2348|
0006f0  f7fffffe          BL       Trans_printf
;;;415                    if( ret == MT2000_ACK_OK )   //成功查询了，才继续下面的，否则就是报警状态
0006f4  2e01              CMP      r6,#1
0006f6  d177              BNE      |L1.2024|
;;;416                    {
;;;417                        if( GT2000_Rx.sys_open == 0 )
0006f8  4895              LDR      r0,|L1.2384|
0006fa  f8900021          LDRB     r0,[r0,#0x21]  ; GT2000_Rx
0006fe  b930              CBNZ     r0,|L1.1806|
;;;418                        {
;;;419                            System.open = 0x00;  //开机标志位	0:关机	1:正在开机	2:已经开机
000700  2000              MOVS     r0,#0
000702  497d              LDR      r1,|L1.2296|
000704  7308              STRB     r0,[r1,#0xc]
;;;420    											  Trans_printf(" 发射机未开机，关机 \n");
000706  a093              ADR      r0,|L1.2388|
000708  f7fffffe          BL       Trans_printf
00070c  e091              B        |L1.2098|
                  |L1.1806|
;;;421                        }
;;;422                        else	if( (System.emission == 0x01) || (Alarm.emission==0x01) || (Alarm.no_respond==0x01) ||
00070e  487a              LDR      r0,|L1.2296|
000710  7d80              LDRB     r0,[r0,#0x16]  ; System
000712  2801              CMP      r0,#1
000714  d013              BEQ      |L1.1854|
000716  4879              LDR      r0,|L1.2300|
000718  7840              LDRB     r0,[r0,#1]  ; Alarm
00071a  2801              CMP      r0,#1
00071c  d00f              BEQ      |L1.1854|
00071e  4877              LDR      r0,|L1.2300|
000720  78c0              LDRB     r0,[r0,#3]  ; Alarm
000722  2801              CMP      r0,#1
000724  d00b              BEQ      |L1.1854|
;;;423                                    (Alarm.no_power==0x01) || (Alarm.swr_alarm==0x01) || (Alarm.over_Electric==0x01) )
000726  4875              LDR      r0,|L1.2300|
000728  7cc0              LDRB     r0,[r0,#0x13]  ; Alarm
00072a  2801              CMP      r0,#1
00072c  d007              BEQ      |L1.1854|
00072e  4873              LDR      r0,|L1.2300|
000730  7c40              LDRB     r0,[r0,#0x11]  ; Alarm
000732  2801              CMP      r0,#1
000734  d003              BEQ      |L1.1854|
000736  4871              LDR      r0,|L1.2300|
000738  7ac0              LDRB     r0,[r0,#0xb]  ; Alarm
00073a  2801              CMP      r0,#1
00073c  d103              BNE      |L1.1862|
                  |L1.1854|
;;;424                        {
;;;425                                //正在发射，无响应，无功率，驻波比报警，过流报警。不执行操作
;;;426    											 Trans_printf(" 正在发射，无响应，无功率，驻波比报警，过流报警。不执行操作 \n");
00073e  a08b              ADR      r0,|L1.2412|
000740  f7fffffe          BL       Trans_printf
000744  e075              B        |L1.2098|
                  |L1.1862|
;;;427                        }
;;;428                        else	//执行发射
;;;429                        {
;;;430    											if(System.Launch_Switch_state!=1)		//查询结果不是发射状态
000746  486c              LDR      r0,|L1.2296|
000748  f8900058          LDRB     r0,[r0,#0x58]  ; System
00074c  2801              CMP      r0,#1
00074e  d070              BEQ      |L1.2098|
;;;431    											{
;;;432                            GT2000_Emit(); //开发射
000750  f7fffffe          BL       GT2000_Emit
;;;433    												vTaskDelay(10000);   //等待
000754  f2427010          MOV      r0,#0x2710
000758  f7fffffe          BL       vTaskDelay
;;;434    												Trans_printf(" 3_T0_GT2000_Emit() \n");
00075c  a093              ADR      r0,|L1.2476|
00075e  f7fffffe          BL       Trans_printf
;;;435    												Trans_printf(" 查询结果不是发射状态，开发射 \n");
000762  a098              ADR      r0,|L1.2500|
000764  f7fffffe          BL       Trans_printf
;;;436    
;;;437                            if( (Alarm.emission==0x01) || (Alarm.no_respond==0x01) || (Alarm.no_power==0x01) || (Alarm.swr_alarm==0x01) )	//激励器自身报警，无应答报警、无功率报警
000768  4864              LDR      r0,|L1.2300|
00076a  7840              LDRB     r0,[r0,#1]  ; Alarm
00076c  2801              CMP      r0,#1
00076e  d00b              BEQ      |L1.1928|
000770  4862              LDR      r0,|L1.2300|
000772  78c0              LDRB     r0,[r0,#3]  ; Alarm
000774  2801              CMP      r0,#1
000776  d007              BEQ      |L1.1928|
000778  4860              LDR      r0,|L1.2300|
00077a  7cc0              LDRB     r0,[r0,#0x13]  ; Alarm
00077c  2801              CMP      r0,#1
00077e  d003              BEQ      |L1.1928|
000780  485e              LDR      r0,|L1.2300|
000782  7c40              LDRB     r0,[r0,#0x11]  ; Alarm
000784  2801              CMP      r0,#1
000786  d104              BNE      |L1.1938|
                  |L1.1928|
;;;438                            {
;;;439                                GT2000_Stop();
000788  f7fffffe          BL       GT2000_Stop
;;;440    													Trans_printf(" 已发送开发射命令，但有紧急报警，停止！ \n");
00078c  a095              ADR      r0,|L1.2532|
00078e  f7fffffe          BL       Trans_printf
                  |L1.1938|
;;;441                            }
;;;442    
;;;443                            if( System.emission == 0x01 )
000792  4859              LDR      r0,|L1.2296|
000794  7d80              LDRB     r0,[r0,#0x16]  ; System
000796  2801              CMP      r0,#1
000798  d12b              BNE      |L1.2034|
;;;444                            {
;;;445                                if( Monitor.hard_control == 0x00 )
00079a  489d              LDR      r0,|L1.2576|
00079c  f89000ca          LDRB     r0,[r0,#0xca]  ; Monitor
0007a0  b928              CBNZ     r0,|L1.1966|
;;;446                                {
;;;447                                    System.status = SYSTEM_EMISSING;		//不是硬件接管，而且扫频不会在这，所以直接返回发射状态
0007a2  2001              MOVS     r0,#1
0007a4  4954              LDR      r1,|L1.2296|
0007a6  72c8              STRB     r0,[r1,#0xb]
;;;448    															  Trans_printf(" 不是硬件接管，而且扫频不会在这，所以直接返回发射状态 \n");
0007a8  a09a              ADR      r0,|L1.2580|
0007aa  f7fffffe          BL       Trans_printf
                  |L1.1966|
;;;449                                }                           
;;;450                                    if( get_history_alarm() == 0x01 )
0007ae  f7fffffe          BL       get_history_alarm
0007b2  2801              CMP      r0,#1
0007b4  d108              BNE      |L1.1992|
;;;451                                    {
;;;452                                        System.status = SYSTEM_ALARM;
0007b6  2011              MOVS     r0,#0x11
0007b8  494f              LDR      r1,|L1.2296|
0007ba  72c8              STRB     r0,[r1,#0xb]
;;;453    																	Trans_printf(" 开发射途中，有历史报警，返回报警状态 \n");
0007bc  a0a3              ADR      r0,|L1.2636|
0007be  e000              B        |L1.1986|
                  |L1.1984|
0007c0  e03b              B        |L1.2106|
                  |L1.1986|
0007c2  f7fffffe          BL       Trans_printf
0007c6  e005              B        |L1.2004|
                  |L1.1992|
;;;454                                    }
;;;455                                    else
;;;456                                    {
;;;457                                        System.status = SYSTEM_EMISSING;
0007c8  2001              MOVS     r0,#1
0007ca  494b              LDR      r1,|L1.2296|
0007cc  72c8              STRB     r0,[r1,#0xb]
;;;458    																	Trans_printf(" 开发射成功！返回发射状态 \n");
0007ce  a0a9              ADR      r0,|L1.2676|
0007d0  f7fffffe          BL       Trans_printf
                  |L1.2004|
;;;459                                    }
;;;460                                							
;;;461    														if( Monitor.hard_control == 0x01 )
0007d4  488e              LDR      r0,|L1.2576|
0007d6  f89000ca          LDRB     r0,[r0,#0xca]  ; Monitor
0007da  2801              CMP      r0,#1
0007dc  d118              BNE      |L1.2064|
;;;462    														{
;;;463    															Monitor.need_emit = 0x00; //查询运行图时，模式、频率或功率等级不一致：1需要发射 0不需要
0007de  2000              MOVS     r0,#0
0007e0  498b              LDR      r1,|L1.2576|
0007e2  f88100cd          STRB     r0,[r1,#0xcd]
;;;464    															Trans_printf(" Monitor.hard_control=1，不需要发射 \n");
0007e6  e000              B        |L1.2026|
                  |L1.2024|
0007e8  e01d              B        |L1.2086|
                  |L1.2026|
0007ea  a0a9              ADR      r0,|L1.2704|
0007ec  f7fffffe          BL       Trans_printf
0007f0  e00e              B        |L1.2064|
                  |L1.2034|
;;;465    														}
;;;466                            }
;;;467                            else
;;;468                            {
;;;469                                System.sweep = 0;
0007f2  2000              MOVS     r0,#0
0007f4  4940              LDR      r1,|L1.2296|
0007f6  7388              STRB     r0,[r1,#0xe]
;;;470                                System.stop = 0;
0007f8  7548              STRB     r0,[r1,#0x15]
;;;471                                System.achieve_add_sub = 0;
0007fa  7448              STRB     r0,[r1,#0x11]
;;;472                                System.modify_power = 0;
0007fc  7488              STRB     r0,[r1,#0x12]
;;;473                                System.cancel_add_sub = 0;
0007fe  74c8              STRB     r0,[r1,#0x13]
;;;474                                System_Status_Clean();
000800  f7fffffe          BL       System_Status_Clean
;;;475    
;;;476    														System.status = SYSTEM_STANDBY;
000804  2002              MOVS     r0,#2
000806  493c              LDR      r1,|L1.2296|
000808  72c8              STRB     r0,[r1,#0xb]
;;;477    													Trans_printf(" System.emission！=1，待机状态 \n");
00080a  a0ab              ADR      r0,|L1.2744|
00080c  f7fffffe          BL       Trans_printf
                  |L1.2064|
;;;478                     
;;;479                            }
;;;480    						
;;;481    											if( get_history_alarm() == 0x01 )
000810  f7fffffe          BL       get_history_alarm
000814  2801              CMP      r0,#1
000816  d10c              BNE      |L1.2098|
;;;482    											{
;;;483    												System.status = SYSTEM_ALARM;
000818  2011              MOVS     r0,#0x11
00081a  4937              LDR      r1,|L1.2296|
00081c  72c8              STRB     r0,[r1,#0xb]
;;;484    												Trans_printf(" 执行发射过程中有历史报警！ \n");
00081e  a0af              ADR      r0,|L1.2780|
000820  f7fffffe          BL       Trans_printf
000824  e005              B        |L1.2098|
                  |L1.2086|
;;;485    											}
;;;486    										}
;;;487                        }
;;;488                    }
;;;489                    else	//查询失败
;;;490                    {
;;;491                        Alarm.no_respond_locate = 16;
000826  2010              MOVS     r0,#0x10
000828  4934              LDR      r1,|L1.2300|
00082a  7188              STRB     r0,[r1,#6]
;;;492                        //App_printf("Task_MT2000 Emit Inquire 16 no respond.\r\n");
;;;493    									Trans_printf(" System.emission！=1，待机状态 \n");
00082c  a0a2              ADR      r0,|L1.2744|
00082e  f7fffffe          BL       Trans_printf
                  |L1.2098|
;;;494                    }
;;;495    							Trans_printf(" 发射事件BIT_3执行完毕 \n");
000832  a0b2              ADR      r0,|L1.2812|
000834  f7fffffe          BL       Trans_printf
                  |L1.2104|
000838  e40e              B        |L1.88|
                  |L1.2106|
;;;496                }
;;;497    						
;;;498                else 	if((ulValue & BIT_4) != 0)	//保留
00083a  9839              LDR      r0,[sp,#0xe4]
00083c  f0000010          AND      r0,r0,#0x10
000840  2800              CMP      r0,#0
000842  d1f9              BNE      |L1.2104|
;;;499                {
;;;500    
;;;501                }
;;;502                else 	if((ulValue & BIT_5) != 0)	//扫频
000844  9839              LDR      r0,[sp,#0xe4]
000846  f0000020          AND      r0,r0,#0x20
00084a  2800              CMP      r0,#0
00084c  d029              BEQ      |L1.2210|
;;;503                {
;;;504    				
;;;505    				/*--------------------------------扫频前先清除过期数据-----------------------------------*/
;;;506                    for(i=0; (i<10)&&((System.cancel_sweeping == 0x00) && (System.stop == 0x00) ); i++)		
00084e  2400              MOVS     r4,#0
000850  e20e              B        |L1.3184|
                  |L1.2130|
;;;507    				{                          //取消扫频		1:取消扫频               //紧急停止标志位	1:紧急停止(正在增减功率，但是已经过了工作时间，需要紧急停止)	通知Task_MT2000(),BJ2000_Stop();MT2000_Cmd_Stop();才置位
;;;508    					current_time_stamp = RTC_GetCounter() + g_stamp_distance;
000852  f7fffffe          BL       RTC_GetCounter
000856  492c              LDR      r1,|L1.2312|
000858  6809              LDR      r1,[r1,#0]  ; g_stamp_distance
00085a  4408              ADD      r0,r0,r1
00085c  9037              STR      r0,[sp,#0xdc]
;;;509    					
;;;510    					next_point = Scan_Breakpoint_Read();
00085e  f7fffffe          BL       Scan_Breakpoint_Read
000862  9032              STR      r0,[sp,#0xc8]
;;;511    					next_point_int = next_point/10;    //整数部分
000864  210a              MOVS     r1,#0xa
000866  9832              LDR      r0,[sp,#0xc8]
000868  fb90f0f1          SDIV     r0,r0,r1
00086c  b2c0              UXTB     r0,r0
00086e  9034              STR      r0,[sp,#0xd0]
;;;512    					next_point_dec = next_point%10;    //小数部分
000870  9832              LDR      r0,[sp,#0xc8]
000872  fb90f2f1          SDIV     r2,r0,r1
000876  fb010012          MLS      r0,r1,r2,r0
00087a  b2c0              UXTB     r0,r0
00087c  9033              STR      r0,[sp,#0xcc]
;;;513    					     //存储扫频结束的时间戳
;;;514    					if( (freq_band_time_stamp[i] != 0) && (freq_band_time_stamp[i] != 0xFFFFFFFF) &&	//时间戳数据是有效数据(不一定没过期)
00087e  48a6              LDR      r0,|L1.2840|
000880  f8500024          LDR      r0,[r0,r4,LSL #2]
000884  b160              CBZ      r0,|L1.2208|
000886  48a4              LDR      r0,|L1.2840|
000888  f8500024          LDR      r0,[r0,r4,LSL #2]
00088c  1c40              ADDS     r0,r0,#1
00088e  b138              CBZ      r0,|L1.2208|
;;;515    						(current_time_stamp < (freq_band_time_stamp[i] + FREQ_BAND_UPDATE_TIME) ) )		//数据有效，未过期
000890  48a1              LDR      r0,|L1.2840|
000892  f8500024          LDR      r0,[r0,r4,LSL #2]
000896  49a1              LDR      r1,|L1.2844|
000898  4401              ADD      r1,r1,r0
00089a  9837              LDR      r0,[sp,#0xdc]
00089c  4281              CMP      r1,r0
00089e  e13f              B        |L1.2848|
                  |L1.2208|
0008a0  e19d              B        |L1.3038|
                  |L1.2210|
0008a2  e3fd              B        |L1.4256|
                  |L1.2212|
0008a4  2033d3c9          DCB      " 3",211,201,180,203,189,248,200,235,201,232,214,195,185
0008a8  b4cbbdf8
0008ac  c8ebc9e8
0008b0  d6c3b9  
0008b3  a4d7f7c4          DCB      164,215,247,196,163,202,189,186,205,198,181,194,202,201,232
0008b7  a3cabdba
0008bb  cdc6b5c2
0008bf  cac9e8  
0008c2  d6c32000          DCB      214,195," ",0
0008c6  00                DCB      0
0008c7  00                DCB      0
                  |L1.2248|
0008c8  20bfaabb          DCB      " ",191,170,187,250,"--",181,200,180,253,"30s--",212,217
0008cc  fa2d2db5
0008d0  c8b4fd33
0008d4  30732d2d
0008d8  d4d9    
0008da  bfaab7a2          DCB      191,170,183,162,201,228," ",0
0008de  c9e42000
0008e2  00                DCB      0
0008e3  00                DCB      0
                  |L1.2276|
0008e4  20bfaab7          DCB      " ",191,170,183,162,201,228,195,252,193,238,210,209,207,194
0008e8  a2c9e4c3
0008ec  fcc1eed2
0008f0  d1cfc2  
0008f3  b7a22000          DCB      183,162," ",0
0008f7  00                DCB      0
                  |L1.2296|
                          DCD      System
                  |L1.2300|
                          DCD      Alarm
                  |L1.2304|
                          DCD      0x4062c000
                  |L1.2308|
                          DCD      0x40240000
                  |L1.2312|
                          DCD      g_stamp_distance
                  |L1.2316|
                          DCD      set_time
                  |L1.2320|
                          DCD      Alarm_historyBack
                  |L1.2324|
000914  20bcecb2          DCB      " ",188,236,178,226,181,189,206,222,185,166,194,202,177,168
000918  e2b5bdce
00091c  deb9a6c2
000920  cab1a8  
000923  beaf33a3          DCB      190,175,"3",163,161," \n",0
000927  a1200a00
00092b  00                DCB      0
                  |L1.2348|
00092c  20d6d8b8          DCB      " ",214,216,184,180,183,162,203,205,207,200,178,233,209,175
000930  b4b7a2cb
000934  cdcfc8b2
000938  e9d1af  
00093b  d2bbcfc2          DCB      210,187,207,194,202,199,178,187,202,199,205,163,214,185,215
00093f  cac7b2bb
000943  cac7cda3
000947  d6b9d7  
00094a  b4ccac20          DCB      180,204,172," \n",0
00094e  0a00    
                  |L1.2384|
                          DCD      GT2000_Rx
                  |L1.2388|
000954  20b7a2c9          DCB      " ",183,162,201,228,187,250,206,180,191,170,187,250,163,172
000958  e4bbface
00095c  b4bfaabb
000960  faa3ac  
000963  b9d8bbfa          DCB      185,216,187,250," \n",0
000967  200a00  
00096a  00                DCB      0
00096b  00                DCB      0
                  |L1.2412|
00096c  20d5fdd4          DCB      " ",213,253,212,218,183,162,201,228,163,172,206,222,207,236
000970  dab7a2c9
000974  e4a3acce
000978  decfec  
00097b  d3a6a3ac          DCB      211,166,163,172,206,222,185,166,194,202,163,172,215,164,178
00097f  cedeb9a6
000983  c2caa3ac
000987  d7a4b2  
00098a  a8b1c8b1          DCB      168,177,200,177,168,190,175,163,172,185,253,193,247,177,168
00098e  a8beafa3
000992  acb9fdc1
000996  f7b1a8  
000999  beafa1a3          DCB      190,175,161,163,178,187,214,180,208,208,178,217,215,247," "
00099d  b2bbd6b4
0009a1  d0d0b2d9
0009a5  d7f720  
0009a8  0a00              DCB      "\n",0
0009aa  00                DCB      0
0009ab  00                DCB      0
                  |L1.2476|
0009ac  20335f54          DCB      " 3_T0_GT2000_Emit() \n",0
0009b0  305f4754
0009b4  32303030
0009b8  5f456d69
0009bc  74282920
0009c0  0a00    
0009c2  00                DCB      0
0009c3  00                DCB      0
                  |L1.2500|
0009c4  20b2e9d1          DCB      " ",178,233,209,175,189,225,185,251,178,187,202,199,183,162
0009c8  afbde1b9
0009cc  fbb2bbca
0009d0  c7b7a2  
0009d3  c9e4d7b4          DCB      201,228,215,180,204,172,163,172,191,170,183,162,201,228," "
0009d7  ccaca3ac
0009db  bfaab7a2
0009df  c9e420  
0009e2  0a00              DCB      "\n",0
                  |L1.2532|
0009e4  20d2d1b7          DCB      " ",210,209,183,162,203,205,191,170,183,162,201,228,195,252
0009e8  a2cbcdbf
0009ec  aab7a2c9
0009f0  e4c3fc  
0009f3  c1eea3ac          DCB      193,238,163,172,181,171,211,208,189,244,188,177,177,168,190
0009f7  b5abd3d0
0009fb  bdf4bcb1
0009ff  b1a8be  
000a02  afa3accd          DCB      175,163,172,205,163,214,185,163,161," \n",0
000a06  a3d6b9a3
000a0a  a1200a00
000a0e  00                DCB      0
000a0f  00                DCB      0
                  |L1.2576|
                          DCD      Monitor
                  |L1.2580|
000a14  20b2bbca          DCB      " ",178,187,202,199,211,178,188,254,189,211,185,220,163,172
000a18  c7d3b2bc
000a1c  febdd3b9
000a20  dca3ac  
000a23  b6f8c7d2          DCB      182,248,199,210,201,168,198,181,178,187,187,225,212,218,213
000a27  c9a8c6b5
000a2b  b2bbbbe1
000a2f  d4dad5  
000a32  e2a3accb          DCB      226,163,172,203,249,210,212,214,177,189,211,183,181,187,216
000a36  f9d2d4d6
000a3a  b1bdd3b7
000a3e  b5bbd8  
000a41  b7a2c9e4          DCB      183,162,201,228,215,180,204,172," \n",0
000a45  d7b4ccac
000a49  200a00  
                  |L1.2636|
000a4c  20bfaab7          DCB      " ",191,170,183,162,201,228,205,190,214,208,163,172,211,208
000a50  a2c9e4cd
000a54  bed6d0a3
000a58  acd3d0  
000a5b  c0facab7          DCB      192,250,202,183,177,168,190,175,163,172,183,181,187,216,177
000a5f  b1a8beaf
000a63  a3acb7b5
000a67  bbd8b1  
000a6a  a8beafd7          DCB      168,190,175,215,180,204,172," \n",0
000a6e  b4ccac20
000a72  0a00    
                  |L1.2676|
000a74  20bfaab7          DCB      " ",191,170,183,162,201,228,179,201,185,166,163,161,183,181
000a78  a2c9e4b3
000a7c  c9b9a6a3
000a80  a1b7b5  
000a83  bbd8b7a2          DCB      187,216,183,162,201,228,215,180,204,172," \n",0
000a87  c9e4d7b4
000a8b  ccac200a
000a8f  00      
                  |L1.2704|
000a90  204d6f6e          DCB      " Monitor.hard_control=1",163,172,178,187,208,232,210,170
000a94  69746f72
000a98  2e686172
000a9c  645f636f
000aa0  6e74726f
000aa4  6c3d31a3
000aa8  acb2bbd0
000aac  e8d2aa  
000aaf  b7a2c9e4          DCB      183,162,201,228," \n",0
000ab3  200a00  
000ab6  00                DCB      0
000ab7  00                DCB      0
                  |L1.2744|
000ab8  20537973          DCB      " System.emission",163,161,"=1",163,172,180,253,187,250,215
000abc  74656d2e
000ac0  656d6973
000ac4  73696f6e
000ac8  a3a13d31
000acc  a3acb4fd
000ad0  bbfad7  
000ad3  b4ccac20          DCB      180,204,172," \n",0
000ad7  0a00    
000ad9  00                DCB      0
000ada  00                DCB      0
000adb  00                DCB      0
                  |L1.2780|
000adc  20d6b4d0          DCB      " ",214,180,208,208,183,162,201,228,185,253,179,204,214,208
000ae0  d0b7a2c9
000ae4  e4b9fdb3
000ae8  ccd6d0  
000aeb  d3d0c0fa          DCB      211,208,192,250,202,183,177,168,190,175,163,161," \n",0
000aef  cab7b1a8
000af3  beafa3a1
000af7  200a00  
000afa  00                DCB      0
000afb  00                DCB      0
                  |L1.2812|
000afc  20b7a2c9          DCB      " ",183,162,201,228,202,194,188,254,"BIT_3",214,180,208,208
000b00  e4cac2bc
000b04  fe424954
000b08  5f33d6b4
000b0c  d0d0    
000b0e  cdeab1cf          DCB      205,234,177,207," \n",0
000b12  200a00  
000b15  00                DCB      0
000b16  00                DCB      0
000b17  00                DCB      0
                  |L1.2840|
                          DCD      freq_band_time_stamp
                  |L1.2844|
                          DCD      0x00093a80
                  |L1.2848|
000b20  d95d              BLS      |L1.3038|
;;;516              {
;;;517    						if( (next_point == 50) && 						//next point is 5.0MHz
000b22  9832              LDR      r0,[sp,#0xc8]
000b24  2832              CMP      r0,#0x32
000b26  d10a              BNE      |L1.2878|
;;;518    							(freq_band_time_stamp[9] != 0) && 			//.9 is finish
000b28  48f6              LDR      r0,|L1.3844|
000b2a  6a40              LDR      r0,[r0,#0x24]  ; freq_band_time_stamp
000b2c  b138              CBZ      r0,|L1.2878|
;;;519    							(freq_band_time_stamp[9] != 0xFFFFFFFF) ) //存储扫频结束的时间戳
000b2e  48f5              LDR      r0,|L1.3844|
000b30  6a40              LDR      r0,[r0,#0x24]  ; freq_band_time_stamp
000b32  1c40              ADDS     r0,r0,#1
000b34  b118              CBZ      r0,|L1.2878|
;;;520    						{						
;;;521    							re_scan_flag = 0x01;  //1:存在有效的扫描数据，扫描按钮已被激活
000b36  2001              MOVS     r0,#1
000b38  49f3              LDR      r1,|L1.3848|
000b3a  7008              STRB     r0,[r1,#0]
;;;522    							break;
000b3c  e0a2              B        |L1.3204|
                  |L1.2878|
;;;523    						}
;;;524    						else	if( next_point_dec > i )		//已经扫过的，跳过
000b3e  9833              LDR      r0,[sp,#0xcc]
000b40  42a0              CMP      r0,r4
000b42  dd03              BLE      |L1.2892|
;;;525    						{
;;;526    							re_scan_flag = 0x00;
000b44  2000              MOVS     r0,#0
000b46  49f0              LDR      r1,|L1.3848|
000b48  7008              STRB     r0,[r1,#0]
;;;527    							continue;
000b4a  e08f              B        |L1.3180|
                  |L1.2892|
;;;528    						}
;;;529    						else	//部分数据过期，需要重新扫频，先清零(停止扫频之后会保存时间戳，数据不会过期，不会清零)
;;;530    						{
;;;531    							re_scan_flag = 0x00;
000b4c  2000              MOVS     r0,#0
000b4e  49ee              LDR      r1,|L1.3848|
000b50  7008              STRB     r0,[r1,#0]
;;;532    							freq_band_time_stamp[i] = 0x00; //清零存储扫频结束的时间戳
000b52  49ec              LDR      r1,|L1.3844|
000b54  f8410024          STR      r0,[r1,r4,LSL #2]
;;;533    
;;;534    							if( (i==0) || (i==1) )
000b58  b10c              CBZ      r4,|L1.2910|
000b5a  2c01              CMP      r4,#1
000b5c  d11f              BNE      |L1.2974|
                  |L1.2910|
;;;535    							{
;;;536    								for( j=next_point_int; j<=26; j++)
000b5e  9d34              LDR      r5,[sp,#0xd0]
000b60  e01a              B        |L1.2968|
                  |L1.2914|
;;;537    								{
;;;538    									Forward_Power_array[ (j-3)*10 + i ] = 0.0;  //从3Mhz开始保存，清零[0]~[23.9]
000b62  2100              MOVS     r1,#0
000b64  1ee8              SUBS     r0,r5,#3
000b66  eb000080          ADD      r0,r0,r0,LSL #2
000b6a  eb040040          ADD      r0,r4,r0,LSL #1
000b6e  4ae7              LDR      r2,|L1.3852|
000b70  f8421020          STR      r1,[r2,r0,LSL #2]
;;;539    									Reverse_Power_array[ (j-3)*10 + i ] = 0.0;
000b74  1ee8              SUBS     r0,r5,#3
000b76  eb000080          ADD      r0,r0,r0,LSL #2
000b7a  eb040040          ADD      r0,r4,r0,LSL #1
000b7e  4ae4              LDR      r2,|L1.3856|
000b80  f8421020          STR      r1,[r2,r0,LSL #2]
;;;540    									SWR_array[ (j-3)*10 + i ] = 0.0;
000b84  1ee8              SUBS     r0,r5,#3
000b86  eb000080          ADD      r0,r0,r0,LSL #2
000b8a  eb040040          ADD      r0,r4,r0,LSL #1
000b8e  4ae1              LDR      r2,|L1.3860|
000b90  f8421020          STR      r1,[r2,r0,LSL #2]
000b94  1c68              ADDS     r0,r5,#1              ;536
000b96  b2c5              UXTB     r5,r0                 ;536
                  |L1.2968|
000b98  2d1a              CMP      r5,#0x1a              ;536
000b9a  dde2              BLE      |L1.2914|
000b9c  e065              B        |L1.3178|
                  |L1.2974|
;;;541    								}
;;;542    							}
;;;543    							else
;;;544    							{
;;;545    								for( j=next_point_int; j<=25; j++)
000b9e  9d34              LDR      r5,[sp,#0xd0]
000ba0  e01a              B        |L1.3032|
                  |L1.2978|
;;;546    								{
;;;547    									Forward_Power_array[ (j-3)*10 + i ] = 0.0;  //从3.2Mhz开始保存，清零[0]~[22.9]
000ba2  2100              MOVS     r1,#0
000ba4  1ee8              SUBS     r0,r5,#3
000ba6  eb000080          ADD      r0,r0,r0,LSL #2
000baa  eb040040          ADD      r0,r4,r0,LSL #1
000bae  4ad7              LDR      r2,|L1.3852|
000bb0  f8421020          STR      r1,[r2,r0,LSL #2]
;;;548    									Reverse_Power_array[ (j-3)*10 + i ] = 0.0;
000bb4  1ee8              SUBS     r0,r5,#3
000bb6  eb000080          ADD      r0,r0,r0,LSL #2
000bba  eb040040          ADD      r0,r4,r0,LSL #1
000bbe  4ad4              LDR      r2,|L1.3856|
000bc0  f8421020          STR      r1,[r2,r0,LSL #2]
;;;549    									SWR_array[ (j-3)*10 + i ] = 0.0;
000bc4  1ee8              SUBS     r0,r5,#3
000bc6  eb000080          ADD      r0,r0,r0,LSL #2
000bca  eb040040          ADD      r0,r4,r0,LSL #1
000bce  4ad1              LDR      r2,|L1.3860|
000bd0  f8421020          STR      r1,[r2,r0,LSL #2]
000bd4  1c68              ADDS     r0,r5,#1              ;545
000bd6  b2c5              UXTB     r5,r0                 ;545
                  |L1.3032|
000bd8  2d19              CMP      r5,#0x19              ;545
000bda  dde2              BLE      |L1.2978|
000bdc  e045              B        |L1.3178|
                  |L1.3038|
;;;550    								}
;;;551    							}
;;;552    						}
;;;553    					}
;;;554    					else	//该段数据全部无效或者过期，全部清零
;;;555    					{
;;;556    						freq_band_time_stamp[i] = 0x00;
000bde  2000              MOVS     r0,#0
000be0  49c8              LDR      r1,|L1.3844|
000be2  f8410024          STR      r0,[r1,r4,LSL #2]
;;;557    
;;;558    						if( (i==0) || (i==1) )
000be6  b10c              CBZ      r4,|L1.3052|
000be8  2c01              CMP      r4,#1
000bea  d11f              BNE      |L1.3116|
                  |L1.3052|
;;;559    						{
;;;560    							for(j=5; j<=26; j++)
000bec  2505              MOVS     r5,#5
000bee  e01a              B        |L1.3110|
                  |L1.3056|
;;;561    							{
;;;562    								Forward_Power_array[ (j-3)*10 + i ] = 0.0;
000bf0  2100              MOVS     r1,#0
000bf2  1ee8              SUBS     r0,r5,#3
000bf4  eb000080          ADD      r0,r0,r0,LSL #2
000bf8  eb040040          ADD      r0,r4,r0,LSL #1
000bfc  4ac3              LDR      r2,|L1.3852|
000bfe  f8421020          STR      r1,[r2,r0,LSL #2]
;;;563    								Reverse_Power_array[ (j-3)*10 + i ] = 0.0;
000c02  1ee8              SUBS     r0,r5,#3
000c04  eb000080          ADD      r0,r0,r0,LSL #2
000c08  eb040040          ADD      r0,r4,r0,LSL #1
000c0c  4ac0              LDR      r2,|L1.3856|
000c0e  f8421020          STR      r1,[r2,r0,LSL #2]
;;;564    								SWR_array[ (j-3)*10 + i ] = 0.0;
000c12  1ee8              SUBS     r0,r5,#3
000c14  eb000080          ADD      r0,r0,r0,LSL #2
000c18  eb040040          ADD      r0,r4,r0,LSL #1
000c1c  4abd              LDR      r2,|L1.3860|
000c1e  f8421020          STR      r1,[r2,r0,LSL #2]
000c22  1c68              ADDS     r0,r5,#1              ;560
000c24  b2c5              UXTB     r5,r0                 ;560
                  |L1.3110|
000c26  2d1a              CMP      r5,#0x1a              ;560
000c28  dde2              BLE      |L1.3056|
000c2a  e01e              B        |L1.3178|
                  |L1.3116|
;;;565    							}
;;;566    						}
;;;567    						else
;;;568    						{
;;;569    							for(j=5; j<=25; j++)
000c2c  2505              MOVS     r5,#5
000c2e  e01a              B        |L1.3174|
                  |L1.3120|
;;;570    							{
;;;571    								Forward_Power_array[ (j-3)*10 + i ] = 0.0;
000c30  2100              MOVS     r1,#0
000c32  1ee8              SUBS     r0,r5,#3
000c34  eb000080          ADD      r0,r0,r0,LSL #2
000c38  eb040040          ADD      r0,r4,r0,LSL #1
000c3c  4ab3              LDR      r2,|L1.3852|
000c3e  f8421020          STR      r1,[r2,r0,LSL #2]
;;;572    								Reverse_Power_array[ (j-3)*10 + i ] = 0.0;
000c42  1ee8              SUBS     r0,r5,#3
000c44  eb000080          ADD      r0,r0,r0,LSL #2
000c48  eb040040          ADD      r0,r4,r0,LSL #1
000c4c  4ab0              LDR      r2,|L1.3856|
000c4e  f8421020          STR      r1,[r2,r0,LSL #2]
;;;573    								SWR_array[ (j-3)*10 + i ] = 0.0;
000c52  1ee8              SUBS     r0,r5,#3
000c54  eb000080          ADD      r0,r0,r0,LSL #2
000c58  eb040040          ADD      r0,r4,r0,LSL #1
000c5c  4aad              LDR      r2,|L1.3860|
000c5e  f8421020          STR      r1,[r2,r0,LSL #2]
000c62  1c68              ADDS     r0,r5,#1              ;569
000c64  b2c5              UXTB     r5,r0                 ;569
                  |L1.3174|
000c66  2d19              CMP      r5,#0x19              ;569
000c68  dde2              BLE      |L1.3120|
                  |L1.3178|
000c6a  bf00              NOP                            ;527
                  |L1.3180|
000c6c  1c60              ADDS     r0,r4,#1              ;506
000c6e  b2c4              UXTB     r4,r0                 ;506
                  |L1.3184|
000c70  2c0a              CMP      r4,#0xa               ;506
000c72  da07              BGE      |L1.3204|
000c74  48a8              LDR      r0,|L1.3864|
000c76  7bc0              LDRB     r0,[r0,#0xf]          ;506  ; System
000c78  b920              CBNZ     r0,|L1.3204|
000c7a  48a7              LDR      r0,|L1.3864|
000c7c  7d40              LDRB     r0,[r0,#0x15]         ;506  ; System
000c7e  2800              CMP      r0,#0                 ;506
000c80  f43fade7          BEQ      |L1.2130|
                  |L1.3204|
000c84  bf00              NOP                            ;522
;;;574    							}
;;;575    						}
;;;576    					}
;;;577    				}
;;;578    				
;;;579    				if(InternalFlash_SaveData_2()==1)   //将正向功率和驻波比保存到flash   1:成功
000c86  f7fffffe          BL       InternalFlash_SaveData_2
;;;580    				{
;;;581    					//App_printf("flash save successed!\r\n");
;;;582    				}
;;;583    				else
;;;584    				{
;;;585    					//App_printf("flash save error!\r\n");
;;;586    				}
;;;587    				
;;;588                    Flash2_to_AcceptAPP();		//读取  //读取flash内的正向功率和驻波比到Scan_FrqBackx
000c8a  f7fffffe          BL       Flash2_to_AcceptAPP
;;;589    				
;;;590    				if(Scan_Begin==0||Scan_End==0)
000c8e  2100              MOVS     r1,#0
000c90  48a2              LDR      r0,|L1.3868|
000c92  6800              LDR      r0,[r0,#0]  ; Scan_Begin
000c94  f7fffffe          BL       __aeabi_cfcmpeq
000c98  d005              BEQ      |L1.3238|
000c9a  2100              MOVS     r1,#0
000c9c  48a0              LDR      r0,|L1.3872|
000c9e  6800              LDR      r0,[r0,#0]  ; Scan_End
000ca0  f7fffffe          BL       __aeabi_cfcmpeq
000ca4  d178              BNE      |L1.3480|
                  |L1.3238|
;;;591    				{
;;;592    	/*---------------------------------------开始扫频----------------------------------------*/
;;;593    					for(int num=0; (num<10)&&((System.cancel_sweeping == 0x00) && (System.stop == 0x00) ); num++)		
000ca6  f04f0a00          MOV      r10,#0
000caa  e0a5              B        |L1.3576|
                  |L1.3244|
;;;594    					{
;;;595    							current_time_stamp = RTC_GetCounter() + g_stamp_distance;
000cac  f7fffffe          BL       RTC_GetCounter
000cb0  499c              LDR      r1,|L1.3876|
000cb2  6809              LDR      r1,[r1,#0]  ; g_stamp_distance
000cb4  4408              ADD      r0,r0,r1
000cb6  9037              STR      r0,[sp,#0xdc]
;;;596    
;;;597    							if( re_scan_flag == 0x01 )
000cb8  4893              LDR      r0,|L1.3848|
000cba  7800              LDRB     r0,[r0,#0]  ; re_scan_flag
000cbc  2801              CMP      r0,#1
000cbe  d009              BEQ      |L1.3284|
;;;598    							{
;;;599    								
;;;600    							}
;;;601    							else	if( (freq_band_time_stamp[num] != 0) && (freq_band_time_stamp[num] != 0xFFFFFFFF) )		//有效数据(过期数据之前已经清零了)
000cc0  4890              LDR      r0,|L1.3844|
000cc2  f850002a          LDR      r0,[r0,r10,LSL #2]
000cc6  b128              CBZ      r0,|L1.3284|
000cc8  488e              LDR      r0,|L1.3844|
000cca  f850002a          LDR      r0,[r0,r10,LSL #2]
000cce  1c40              ADDS     r0,r0,#1
000cd0  b100              CBZ      r0,|L1.3284|
;;;602    							{
;;;603    								continue;  //跳过本次循环体中余下尚未执行的语句，立即进行下一次的循环条件判定，结束本次循环。
000cd2  e08f              B        |L1.3572|
                  |L1.3284|
;;;604    							}
;;;605    							//甘肃短波设备工资范围5.9-21.8
;;;606    					switch(num)
000cd4  f1ba0f0a          CMP      r10,#0xa
000cd8  d238              BCS      |L1.3404|
000cda  e8dff00a          TBB      [pc,r10]
000cde  050a              DCB      0x05,0x0a
000ce0  0f14191e          DCB      0x0f,0x14,0x19,0x1e
000ce4  23282d32          DCB      0x23,0x28,0x2d,0x32
;;;607    					{
;;;608    						case 0:		freq_begin=6;		freq_end=21;		break;
000ce8  2006              MOVS     r0,#6
000cea  9036              STR      r0,[sp,#0xd8]
000cec  2015              MOVS     r0,#0x15
000cee  9035              STR      r0,[sp,#0xd4]
000cf0  e02c              B        |L1.3404|
;;;609    						case 1:		freq_begin=6;		freq_end=21;		break;
000cf2  2006              MOVS     r0,#6
000cf4  9036              STR      r0,[sp,#0xd8]
000cf6  2015              MOVS     r0,#0x15
000cf8  9035              STR      r0,[sp,#0xd4]
000cfa  e027              B        |L1.3404|
;;;610    						case 2:		freq_begin=6;		freq_end=21;		break;
000cfc  2006              MOVS     r0,#6
000cfe  9036              STR      r0,[sp,#0xd8]
000d00  2015              MOVS     r0,#0x15
000d02  9035              STR      r0,[sp,#0xd4]
000d04  e022              B        |L1.3404|
;;;611    						case 3:		freq_begin=6;		freq_end=21;		break;
000d06  2006              MOVS     r0,#6
000d08  9036              STR      r0,[sp,#0xd8]
000d0a  2015              MOVS     r0,#0x15
000d0c  9035              STR      r0,[sp,#0xd4]
000d0e  e01d              B        |L1.3404|
;;;612    						case 4:		freq_begin=6;		freq_end=21;		break;
000d10  2006              MOVS     r0,#6
000d12  9036              STR      r0,[sp,#0xd8]
000d14  2015              MOVS     r0,#0x15
000d16  9035              STR      r0,[sp,#0xd4]
000d18  e018              B        |L1.3404|
;;;613    						case 5:		freq_begin=6;		freq_end=21;		break;
000d1a  2006              MOVS     r0,#6
000d1c  9036              STR      r0,[sp,#0xd8]
000d1e  2015              MOVS     r0,#0x15
000d20  9035              STR      r0,[sp,#0xd4]
000d22  e013              B        |L1.3404|
;;;614    						case 6:		freq_begin=6;		freq_end=21;		break;
000d24  2006              MOVS     r0,#6
000d26  9036              STR      r0,[sp,#0xd8]
000d28  2015              MOVS     r0,#0x15
000d2a  9035              STR      r0,[sp,#0xd4]
000d2c  e00e              B        |L1.3404|
;;;615    						case 7:		freq_begin=6;		freq_end=21;		break;
000d2e  2006              MOVS     r0,#6
000d30  9036              STR      r0,[sp,#0xd8]
000d32  2015              MOVS     r0,#0x15
000d34  9035              STR      r0,[sp,#0xd4]
000d36  e009              B        |L1.3404|
;;;616    						case 8:		freq_begin=6;		freq_end=21;		break;
000d38  2006              MOVS     r0,#6
000d3a  9036              STR      r0,[sp,#0xd8]
000d3c  2015              MOVS     r0,#0x15
000d3e  9035              STR      r0,[sp,#0xd4]
000d40  e004              B        |L1.3404|
;;;617    						case 9:		freq_begin=5;		freq_end=20;		break;
000d42  2005              MOVS     r0,#5
000d44  9036              STR      r0,[sp,#0xd8]
000d46  2014              MOVS     r0,#0x14
000d48  9035              STR      r0,[sp,#0xd4]
000d4a  bf00              NOP      
                  |L1.3404|
000d4c  bf00              NOP                            ;608
;;;618    					}
;;;619    
;;;620                        /*------------------------------------------扫频------------------------------------------*/
;;;621    
;;;622                        Band_scan(freq_begin, freq_end, num);		
000d4e  f00a02ff          AND      r2,r10,#0xff
000d52  e9dd1035          LDRD     r1,r0,[sp,#0xd4]
000d56  f7fffffe          BL       Band_scan
;;;623    					
;;;624    					//退出扫频之后就保存，不管退出原因是什么
;;;625    					freq_band_time_stamp[num] = RTC_GetCounter() + g_stamp_distance;
000d5a  f7fffffe          BL       RTC_GetCounter
000d5e  4971              LDR      r1,|L1.3876|
000d60  6809              LDR      r1,[r1,#0]  ; g_stamp_distance
000d62  4408              ADD      r0,r0,r1
000d64  4967              LDR      r1,|L1.3844|
000d66  f841002a          STR      r0,[r1,r10,LSL #2]
;;;626                        if(InternalFlash_SaveData_2()==1)   //将正向功率和驻波比保存到flash   1:成功
000d6a  f7fffffe          BL       InternalFlash_SaveData_2
000d6e  2801              CMP      r0,#1
000d70  d102              BNE      |L1.3448|
;;;627                        {
;;;628                            Flash2_to_AcceptAPP();   //读取flash内的正向功率和驻波比到Scan_FrqBackx
000d72  f7fffffe          BL       Flash2_to_AcceptAPP
000d76  e002              B        |L1.3454|
                  |L1.3448|
;;;629                            //App_printf("flash save successed!\r\n");
;;;630                        }
;;;631                        else
;;;632                        {
;;;633                            //App_printf("flash save error!\r\n");
;;;634                            System.sweep = 0;
000d78  2000              MOVS     r0,#0
000d7a  4967              LDR      r1,|L1.3864|
000d7c  7388              STRB     r0,[r1,#0xe]
                  |L1.3454|
;;;635                        }
;;;636    					
;;;637                        //无应答报警、无功率报警(驻波比和电流报警，不处理)		--20190415 Luonus
;;;638                        if( (Alarm.emission==0x01) || (Alarm.no_respond==0x01) || (Alarm.no_power==0x01) )
000d7e  486a              LDR      r0,|L1.3880|
000d80  7840              LDRB     r0,[r0,#1]  ; Alarm
000d82  2801              CMP      r0,#1
000d84  d007              BEQ      |L1.3478|
000d86  4868              LDR      r0,|L1.3880|
000d88  78c0              LDRB     r0,[r0,#3]  ; Alarm
000d8a  2801              CMP      r0,#1
000d8c  d003              BEQ      |L1.3478|
000d8e  4866              LDR      r0,|L1.3880|
000d90  7cc0              LDRB     r0,[r0,#0x13]  ; Alarm
000d92  2801              CMP      r0,#1
000d94  d105              BNE      |L1.3490|
                  |L1.3478|
;;;639                        {
;;;640    											Trans_printf(" scan1扫频、无应答报警、无功率报警！不处理退出循环 \n");
000d96  e000              B        |L1.3482|
                  |L1.3480|
000d98  e03a              B        |L1.3600|
                  |L1.3482|
000d9a  a064              ADR      r0,|L1.3884|
000d9c  f7fffffe          BL       Trans_printf
;;;641                            break;  //退出循环
000da0  e035              B        |L1.3598|
                  |L1.3490|
;;;642                        }
;;;643                        else	if( (System.cancel_sweeping == 0x01) || (System.stop == 0x01)  )		//取消扫频
000da2  485d              LDR      r0,|L1.3864|
000da4  7bc0              LDRB     r0,[r0,#0xf]  ; System
000da6  2801              CMP      r0,#1
000da8  d003              BEQ      |L1.3506|
000daa  485b              LDR      r0,|L1.3864|
000dac  7d40              LDRB     r0,[r0,#0x15]  ; System
000dae  2801              CMP      r0,#1
000db0  d103              BNE      |L1.3514|
                  |L1.3506|
;;;644                        {
;;;645    											Trans_printf(" scan1扫频、取消扫频！不处理 \n");
000db2  a06c              ADR      r0,|L1.3940|
000db4  f7fffffe          BL       Trans_printf
;;;646                            break;
000db8  e029              B        |L1.3598|
                  |L1.3514|
;;;647                        }
;;;648                        else	if( System.Voltage < 40.0 )				//关机了
000dba  4957              LDR      r1,|L1.3864|
000dbc  6f48              LDR      r0,[r1,#0x74]  ; System
000dbe  f7fffffe          BL       __aeabi_f2d
000dc2  4607              MOV      r7,r0
000dc4  4688              MOV      r8,r1
000dc6  2200              MOVS     r2,#0
000dc8  4b6e              LDR      r3,|L1.3972|
000dca  f7fffffe          BL       __aeabi_cdcmple
000dce  d203              BCS      |L1.3544|
;;;649                        {
;;;650    											Trans_printf(" scan1扫频System.Voltage < 40.0，关机了 \n");
000dd0  a06d              ADR      r0,|L1.3976|
000dd2  f7fffffe          BL       Trans_printf
;;;651                            break;
000dd6  e01a              B        |L1.3598|
                  |L1.3544|
;;;652                        }
;;;653    
;;;654    					if( num == 9 )	
000dd8  f1ba0f09          CMP      r10,#9
000ddc  d109              BNE      |L1.3570|
;;;655    					{
;;;656    						System.already_swept = 1;    //扫频完成标志		//断点扫描之后，该标志位已经无意义
000dde  2001              MOVS     r0,#1
000de0  494d              LDR      r1,|L1.3864|
000de2  70c8              STRB     r0,[r1,#3]
;;;657                            System.sweep = 0x02;  //扫频标志位	1:正在扫频，2:扫频完成，更新status标志位，并将sweep清零		最后，保存在flash
000de4  2002              MOVS     r0,#2
000de6  7388              STRB     r0,[r1,#0xe]
;;;658    						
;;;659    						Scan_Breakpoint_Save(5, 9);					//扫频完了，下次扫频是重新扫频  //获取扫频断点5.9
000de8  2109              MOVS     r1,#9
000dea  2005              MOVS     r0,#5
000dec  f7fffffe          BL       Scan_Breakpoint_Save
;;;660    						break;
000df0  e00d              B        |L1.3598|
                  |L1.3570|
000df2  bf00              NOP                            ;603
                  |L1.3572|
000df4  f10a0a01          ADD      r10,r10,#1            ;593
                  |L1.3576|
000df8  f1ba0f0a          CMP      r10,#0xa              ;593
000dfc  da07              BGE      |L1.3598|
000dfe  4846              LDR      r0,|L1.3864|
000e00  7bc0              LDRB     r0,[r0,#0xf]          ;593  ; System
000e02  b920              CBNZ     r0,|L1.3598|
000e04  4844              LDR      r0,|L1.3864|
000e06  7d40              LDRB     r0,[r0,#0x15]         ;593  ; System
000e08  2800              CMP      r0,#0                 ;593
000e0a  f43faf4f          BEQ      |L1.3244|
                  |L1.3598|
000e0e  e131              B        |L1.4212|
                  |L1.3600|
;;;661    					}
;;;662    
;;;663                  }    //for循环结束
;;;664    					}	  //Scan_Begin！=0 && Scan_End！=0
;;;665    				else
;;;666    				{
;;;667    					uint8_t Scan_start,Scan_end;				//不能超过255
;;;668    					uint8_t clean_int,clean_dec;
;;;669    					Scan_start=Scan_Begin*10;			//扩大为整数
000e10  4968              LDR      r1,|L1.4020|
000e12  4842              LDR      r0,|L1.3868|
000e14  6800              LDR      r0,[r0,#0]  ; Scan_Begin
000e16  f7fffffe          BL       __aeabi_fmul
000e1a  4683              MOV      r11,r0
000e1c  f7fffffe          BL       __aeabi_f2uiz
000e20  b2c0              UXTB     r0,r0
000e22  9016              STR      r0,[sp,#0x58]
;;;670    					Scan_end=Scan_End*10;
000e24  4963              LDR      r1,|L1.4020|
000e26  483e              LDR      r0,|L1.3872|
000e28  6800              LDR      r0,[r0,#0]  ; Scan_End
000e2a  f7fffffe          BL       __aeabi_fmul
000e2e  4683              MOV      r11,r0
000e30  f7fffffe          BL       __aeabi_f2uiz
000e34  b2c7              UXTB     r7,r0
;;;671    				/*---------------------------------------开始扫频2----------------------------------------*/
;;;672    												
;;;673    				/*--------------------------------扫频前先清除以往数据-----------------------------------*/
;;;674            if((System.cancel_sweeping == 0x00) && (System.stop == 0x00))  //未取消扫频，未急停		1:取消扫频	1:紧急停止
000e36  4838              LDR      r0,|L1.3864|
000e38  7bc0              LDRB     r0,[r0,#0xf]  ; System
000e3a  bb80              CBNZ     r0,|L1.3742|
000e3c  4836              LDR      r0,|L1.3864|
000e3e  7d40              LDRB     r0,[r0,#0x15]  ; System
000e40  bb68              CBNZ     r0,|L1.3742|
;;;675    				{		
;;;676    						for(j=Scan_start; j<=Scan_end; j++)
000e42  9d16              LDR      r5,[sp,#0x58]
000e44  e029              B        |L1.3738|
                  |L1.3654|
;;;677    						{
;;;678    							clean_int=j/10;
000e46  200a              MOVS     r0,#0xa
000e48  fb95f0f0          SDIV     r0,r5,r0
000e4c  f00008ff          AND      r8,r0,#0xff
;;;679    							clean_dec=j%10;
000e50  200a              MOVS     r0,#0xa
000e52  fb95f1f0          SDIV     r1,r5,r0
000e56  fb005011          MLS      r0,r0,r1,r5
000e5a  f0000aff          AND      r10,r0,#0xff
;;;680    							Forward_Power_array[ (clean_int-3)*10 + clean_dec ] = 0.0;
000e5e  2100              MOVS     r1,#0
000e60  f1a80003          SUB      r0,r8,#3
000e64  eb000080          ADD      r0,r0,r0,LSL #2
000e68  eb0a0040          ADD      r0,r10,r0,LSL #1
000e6c  4a27              LDR      r2,|L1.3852|
000e6e  f8421020          STR      r1,[r2,r0,LSL #2]
;;;681    							Reverse_Power_array[ (clean_int-3)*10 + clean_dec ] = 0.0;
000e72  f1a80003          SUB      r0,r8,#3
000e76  eb000080          ADD      r0,r0,r0,LSL #2
000e7a  eb0a0040          ADD      r0,r10,r0,LSL #1
000e7e  4a24              LDR      r2,|L1.3856|
000e80  f8421020          STR      r1,[r2,r0,LSL #2]
;;;682    							SWR_array[ (clean_int-3)*10 + clean_dec ] = 0.0;
000e84  f1a80003          SUB      r0,r8,#3
000e88  eb000080          ADD      r0,r0,r0,LSL #2
000e8c  eb0a0040          ADD      r0,r10,r0,LSL #1
000e90  4a20              LDR      r2,|L1.3860|
000e92  f8421020          STR      r1,[r2,r0,LSL #2]
000e96  1c68              ADDS     r0,r5,#1              ;676
000e98  b2c5              UXTB     r5,r0                 ;676
                  |L1.3738|
000e9a  42bd              CMP      r5,r7                 ;676
000e9c  ddd3              BLE      |L1.3654|
                  |L1.3742|
;;;683    						}
;;;684    				}
;;;685                     for(int count=Scan_start;(count<=Scan_end)&&(System.cancel_sweeping == 0x00)&&(System.stop == 0x00);count++)
000e9e  f8ddb058          LDR      r11,[sp,#0x58]
000ea2  e0db              B        |L1.4188|
                  |L1.3748|
;;;686    								 {									 
;;;687    										Trans_printf(" 进入分段扫频函数2！count= %d \n",count);   //为什么I会=0
000ea4  4659              MOV      r1,r11
000ea6  a044              ADR      r0,|L1.4024|
000ea8  f7fffffe          BL       Trans_printf
;;;688    									 Optional_Band_scan(count,Scan_end);  //分段扫频函数2
000eac  f00b00ff          AND      r0,r11,#0xff
000eb0  4639              MOV      r1,r7
000eb2  f7fffffe          BL       Optional_Band_scan
;;;689    								    
;;;690    									
;;;691    										//退出扫频之后就保存，不管退出原因是什么
;;;692                        if(InternalFlash_SaveData_2()==1) //将正向功率和驻波比保存到flash   1:成功
000eb6  f7fffffe          BL       InternalFlash_SaveData_2
000eba  2801              CMP      r0,#1
000ebc  d102              BNE      |L1.3780|
;;;693                        {
;;;694                            Flash2_to_AcceptAPP();   //读取flash内的正向功率和驻波比到Scan_FrqBackx
000ebe  f7fffffe          BL       Flash2_to_AcceptAPP
000ec2  e002              B        |L1.3786|
                  |L1.3780|
;;;695                            //App_printf("flash save successed!\r\n");
;;;696                        }
;;;697                        else
;;;698                        {
;;;699                            //App_printf("flash save error!\r\n");
;;;700                            System.sweep = 0;
000ec4  2000              MOVS     r0,#0
000ec6  4914              LDR      r1,|L1.3864|
000ec8  7388              STRB     r0,[r1,#0xe]
                  |L1.3786|
;;;701                        }
;;;702    					
;;;703                        //无应答报警、无功率报警(驻波比和电流报警，不处理)		--20190415 Luonus
;;;704                        if( (Alarm.emission==0x01) || (Alarm.no_respond==0x01) || (Alarm.no_power==0x01) )
000eca  4817              LDR      r0,|L1.3880|
000ecc  7840              LDRB     r0,[r0,#1]  ; Alarm
000ece  2801              CMP      r0,#1
000ed0  d007              BEQ      |L1.3810|
000ed2  4815              LDR      r0,|L1.3880|
000ed4  78c0              LDRB     r0,[r0,#3]  ; Alarm
000ed6  2801              CMP      r0,#1
000ed8  d003              BEQ      |L1.3810|
000eda  4813              LDR      r0,|L1.3880|
000edc  7cc0              LDRB     r0,[r0,#0x13]  ; Alarm
000ede  2801              CMP      r0,#1
000ee0  d103              BNE      |L1.3818|
                  |L1.3810|
;;;705                        {
;;;706    											Trans_printf(" 扫频、无应答报警、无功率报警！不处理 \n");
000ee2  a03d              ADR      r0,|L1.4056|
000ee4  f7fffffe          BL       Trans_printf
;;;707                            break;  //退出循环
000ee8  e0c2              B        |L1.4208|
                  |L1.3818|
;;;708                        }
;;;709                        else	if( (System.cancel_sweeping == 0x01) || (System.stop == 0x01)  )		//取消扫频
000eea  480b              LDR      r0,|L1.3864|
000eec  7bc0              LDRB     r0,[r0,#0xf]  ; System
000eee  2801              CMP      r0,#1
000ef0  d003              BEQ      |L1.3834|
000ef2  4809              LDR      r0,|L1.3864|
000ef4  7d40              LDRB     r0,[r0,#0x15]  ; System
000ef6  2801              CMP      r0,#1
000ef8  d103              BNE      |L1.3842|
                  |L1.3834|
;;;710                        {
;;;711    											Trans_printf(" 扫频、取消扫频！不处理 \n");
000efa  a041              ADR      r0,|L1.4096|
000efc  f7fffffe          BL       Trans_printf
;;;712                            break;
000f00  e0b6              B        |L1.4208|
                  |L1.3842|
000f02  e08b              B        |L1.4124|
                  |L1.3844|
                          DCD      freq_band_time_stamp
                  |L1.3848|
                          DCD      re_scan_flag
                  |L1.3852|
                          DCD      Forward_Power_array
                  |L1.3856|
                          DCD      Reverse_Power_array
                  |L1.3860|
                          DCD      SWR_array
                  |L1.3864|
                          DCD      System
                  |L1.3868|
                          DCD      Scan_Begin
                  |L1.3872|
                          DCD      Scan_End
                  |L1.3876|
                          DCD      g_stamp_distance
                  |L1.3880|
                          DCD      Alarm
                  |L1.3884|
000f2c  20736361          DCB      " scan1",201,168,198,181,161,162,206,222,211,166,180,240
000f30  6e31c9a8
000f34  c6b5a1a2
000f38  ceded3a6
000f3c  b4f0    
000f3e  b1a8beaf          DCB      177,168,190,175,161,162,206,222,185,166,194,202,177,168,190
000f42  a1a2cede
000f46  b9a6c2ca
000f4a  b1a8be  
000f4d  afa3a1b2          DCB      175,163,161,178,187,180,166,192,237,205,203,179,246,209,173
000f51  bbb4a6c0
000f55  edcdcbb3
000f59  f6d1ad  
000f5c  bbb7200a          DCB      187,183," \n",0
000f60  00      
000f61  00                DCB      0
000f62  00                DCB      0
000f63  00                DCB      0
                  |L1.3940|
000f64  20736361          DCB      " scan1",201,168,198,181,161,162,200,161,207,251,201,168
000f68  6e31c9a8
000f6c  c6b5a1a2
000f70  c8a1cffb
000f74  c9a8    
000f76  c6b5a3a1          DCB      198,181,163,161,178,187,180,166,192,237," \n",0
000f7a  b2bbb4a6
000f7e  c0ed200a
000f82  00      
000f83  00                DCB      0
                  |L1.3972|
                          DCD      0x40440000
                  |L1.3976|
000f88  20736361          DCB      " scan1",201,168,198,181,"System.Voltage < 40.0",163,172
000f8c  6e31c9a8
000f90  c6b55379
000f94  7374656d
000f98  2e566f6c
000f9c  74616765
000fa0  203c2034
000fa4  302e30a3
000fa8  ac      
000fa9  b9d8bbfa          DCB      185,216,187,250,193,203," \n",0
000fad  c1cb200a
000fb1  00      
000fb2  00                DCB      0
000fb3  00                DCB      0
                  |L1.4020|
                          DCD      0x41200000
                  |L1.4024|
000fb8  20bdf8c8          DCB      " ",189,248,200,235,183,214,182,206,201,168,198,181,186,175
000fbc  ebb7d6b6
000fc0  cec9a8c6
000fc4  b5baaf  
000fc7  cafd32a3          DCB      202,253,"2",163,161,"count= %d \n",0
000fcb  a1636f75
000fcf  6e743d20
000fd3  2564200a
000fd7  00      
                  |L1.4056|
000fd8  20c9a8c6          DCB      " ",201,168,198,181,161,162,206,222,211,166,180,240,177,168
000fdc  b5a1a2ce
000fe0  ded3a6b4
000fe4  f0b1a8  
000fe7  beafa1a2          DCB      190,175,161,162,206,222,185,166,194,202,177,168,190,175,163
000feb  cedeb9a6
000fef  c2cab1a8
000ff3  beafa3  
000ff6  a1b2bbb4          DCB      161,178,187,180,166,192,237," \n",0
000ffa  a6c0ed20
000ffe  0a00    
                  |L1.4096|
001000  20c9a8c6          DCB      " ",201,168,198,181,161,162,200,161,207,251,201,168,198,181
001004  b5a1a2c8
001008  a1cffbc9
00100c  a8c6b5  
00100f  a3a1b2bb          DCB      163,161,178,187,180,166,192,237," \n",0
001013  b4a6c0ed
001017  200a00  
00101a  00                DCB      0
00101b  00                DCB      0
                  |L1.4124|
;;;713                        }
;;;714                        else	if( System.Voltage < 40.0 )				//关机了
00101c  49f9              LDR      r1,|L1.5124|
00101e  6f48              LDR      r0,[r1,#0x74]  ; System
001020  f7fffffe          BL       __aeabi_f2d
001024  2200              MOVS     r2,#0
001026  4bf8              LDR      r3,|L1.5128|
001028  e9cd0114          STRD     r0,r1,[sp,#0x50]
00102c  f7fffffe          BL       __aeabi_cdcmple
001030  d203              BCS      |L1.4154|
;;;715                        {
;;;716    											Trans_printf(" System.Voltage < 40.0，关机了 \n");
001032  a0f6              ADR      r0,|L1.5132|
001034  f7fffffe          BL       Trans_printf
;;;717                            break;
001038  e01a              B        |L1.4208|
                  |L1.4154|
;;;718                        }
;;;719    
;;;720    
;;;721    										if( i ==  Scan_end)	
00103a  42bc              CMP      r4,r7
00103c  d10c              BNE      |L1.4184|
;;;722    										{
;;;723    											System.already_swept = 1;   //扫频完成标志		//断点扫描之后，该标志位已经无意义
00103e  2001              MOVS     r0,#1
001040  49f0              LDR      r1,|L1.5124|
001042  70c8              STRB     r0,[r1,#3]
;;;724    																	System.sweep = 0x02;  //扫频标志位	1:正在扫频，2:扫频完成，更新status标志位，并将sweep清零		最后，保存在flash
001044  2002              MOVS     r0,#2
001046  7388              STRB     r0,[r1,#0xe]
;;;725    											
;;;726    											Trans_printf(" 已经扫频完了，下次扫频是重新扫频 \n");
001048  a0f9              ADR      r0,|L1.5168|
00104a  f7fffffe          BL       Trans_printf
;;;727    											Scan_Breakpoint_Save(5, 9);					//扫频完了，下次扫频是重新扫频
00104e  2109              MOVS     r1,#9
001050  2005              MOVS     r0,#5
001052  f7fffffe          BL       Scan_Breakpoint_Save
;;;728    											break;
001056  e00b              B        |L1.4208|
                  |L1.4184|
001058  f10b0b01          ADD      r11,r11,#1            ;685
                  |L1.4188|
00105c  45bb              CMP      r11,r7                ;685
00105e  dc07              BGT      |L1.4208|
001060  48e8              LDR      r0,|L1.5124|
001062  7bc0              LDRB     r0,[r0,#0xf]          ;685  ; System
001064  b920              CBNZ     r0,|L1.4208|
001066  48e7              LDR      r0,|L1.5124|
001068  7d40              LDRB     r0,[r0,#0x15]         ;685  ; System
00106a  2800              CMP      r0,#0                 ;685
00106c  f43faf1a          BEQ      |L1.3748|
                  |L1.4208|
001070  bf00              NOP                            ;707
;;;729    										}
;;;730    							}   //for结束
;;;731    						}	
001072  bf00              NOP      
                  |L1.4212|
;;;732    				
;;;733    						re_scan_flag = 0x00;   //开扫频标志位，停止扫频
001074  2000              MOVS     r0,#0
001076  49f7              LDR      r1,|L1.5204|
001078  7008              STRB     r0,[r1,#0]
;;;734                    if( (Alarm.emission==0x01) || (Alarm.no_respond==0x01) || (Alarm.no_power==0x01) )		//报警退出		--20190415 Luonus
00107a  48f7              LDR      r0,|L1.5208|
00107c  7840              LDRB     r0,[r0,#1]  ; Alarm
00107e  2801              CMP      r0,#1
001080  d007              BEQ      |L1.4242|
001082  48f5              LDR      r0,|L1.5208|
001084  78c0              LDRB     r0,[r0,#3]  ; Alarm
001086  2801              CMP      r0,#1
001088  d003              BEQ      |L1.4242|
00108a  48f3              LDR      r0,|L1.5208|
00108c  7cc0              LDRB     r0,[r0,#0x13]  ; Alarm
00108e  2801              CMP      r0,#1
001090  d129              BNE      |L1.4326|
                  |L1.4242|
;;;735                    {
;;;736    									Trans_printf(" 扫频报警退出 \n");
001092  a0f2              ADR      r0,|L1.5212|
001094  f7fffffe          BL       Trans_printf
;;;737                        System.sweep = 0x00;
001098  2000              MOVS     r0,#0
00109a  49da              LDR      r1,|L1.5124|
00109c  7388              STRB     r0,[r1,#0xe]
;;;738                        Scan_FrqBack.results[0] = 0xFD;		//扫频失败
00109e  e000              B        |L1.4258|
                  |L1.4256|
0010a0  e09e              B        |L1.4576|
                  |L1.4258|
0010a2  20fd              MOVS     r0,#0xfd
0010a4  49f1              LDR      r1,|L1.5228|
0010a6  7048              STRB     r0,[r1,#1]
;;;739    									
;;;740    				            Gt_RF_Close();		
0010a8  f7fffffe          BL       Gt_RF_Close
;;;741    										vTaskDelay(3000);  //关发射3s后关机
0010ac  f64030b8          MOV      r0,#0xbb8
0010b0  f7fffffe          BL       vTaskDelay
;;;742    										Gt2000_Close();
0010b4  f7fffffe          BL       Gt2000_Close
;;;743    										vTaskDelay(1500);   //关机
0010b8  f24050dc          MOV      r0,#0x5dc
0010bc  f7fffffe          BL       vTaskDelay
;;;744    										ret=MT2000_ACK_OK;
0010c0  2601              MOVS     r6,#1
;;;745    
;;;746    
;;;747                        if( ret == MT2000_ACK_OK )	//停止成功
0010c2  b166              CBZ      r6,|L1.4318|
;;;748                        {
;;;749                            System.stop = 0x00;
0010c4  2000              MOVS     r0,#0
0010c6  49cf              LDR      r1,|L1.5124|
0010c8  7548              STRB     r0,[r1,#0x15]
;;;750    
;;;751                            System.achieve_add_sub = 0x00;
0010ca  7448              STRB     r0,[r1,#0x11]
;;;752                            System.modify_power = 0x00;
0010cc  7488              STRB     r0,[r1,#0x12]
;;;753                            System.cancel_add_sub = 0x00;
0010ce  74c8              STRB     r0,[r1,#0x13]
;;;754                            System_Status_Clean();
0010d0  f7fffffe          BL       System_Status_Clean
;;;755    
;;;756                            System.sweep = 0x00;
0010d4  2000              MOVS     r0,#0
0010d6  49cb              LDR      r1,|L1.5124|
0010d8  7388              STRB     r0,[r1,#0xe]
;;;757                            System.already_swept = 0x00;
0010da  70c8              STRB     r0,[r1,#3]
                  |L1.4316|
0010dc  e27a              B        |L1.5588|
                  |L1.4318|
;;;758                        }
;;;759                        else
;;;760                        {
;;;761                            Alarm.no_respond_locate = 17;
0010de  2011              MOVS     r0,#0x11
0010e0  49dd              LDR      r1,|L1.5208|
0010e2  7188              STRB     r0,[r1,#6]
0010e4  e276              B        |L1.5588|
                  |L1.4326|
;;;762                            //App_printf("Task_MT2000 Sweep stop 17 no respond.\r\n");
;;;763                        }
;;;764                    }
;;;765                    else	if( (System.cancel_sweeping == 0x01) || (System.stop == 0x01)  )		//如果上面的Band_scan是由于取消扫频退出的
0010e6  48c7              LDR      r0,|L1.5124|
0010e8  7bc0              LDRB     r0,[r0,#0xf]  ; System
0010ea  2801              CMP      r0,#1
0010ec  d003              BEQ      |L1.4342|
0010ee  48c5              LDR      r0,|L1.5124|
0010f0  7d40              LDRB     r0,[r0,#0x15]  ; System
0010f2  2801              CMP      r0,#1
0010f4  d157              BNE      |L1.4518|
                  |L1.4342|
;;;766                    {       //扫频标志位	1:正在扫频，2:扫频完成
;;;767                        Trans_printf(" 如果上面的Band_scan是由于取消扫频退出的、急停退出的 \n");
0010f6  a0de              ADR      r0,|L1.5232|
0010f8  f7fffffe          BL       Trans_printf
;;;768    									if( System.sweep == 0x01 )			//上面的扫频由于强制停止中止了，需要将发射机先停止以保障安全
0010fc  48c1              LDR      r0,|L1.5124|
0010fe  7b80              LDRB     r0,[r0,#0xe]  ; System
001100  2801              CMP      r0,#1
001102  d130              BNE      |L1.4454|
;;;769                        {
;;;770    											
;;;771    				            Gt_RF_Close();		
001104  f7fffffe          BL       Gt_RF_Close
;;;772    											vTaskDelay(3000);
001108  f64030b8          MOV      r0,#0xbb8
00110c  f7fffffe          BL       vTaskDelay
;;;773    											Gt2000_Close();
001110  f7fffffe          BL       Gt2000_Close
;;;774    											vTaskDelay(1500);
001114  f24050dc          MOV      r0,#0x5dc
001118  f7fffffe          BL       vTaskDelay
;;;775    											ret=MT2000_ACK_OK;
00111c  2601              MOVS     r6,#1
;;;776    
;;;777                            if( ret == MT2000_ACK_OK )	//停止成功 ，，默认成功
00111e  b1de              CBZ      r6,|L1.4440|
;;;778                            {
;;;779                                System.sweep = 0;
001120  2000              MOVS     r0,#0
001122  49b8              LDR      r1,|L1.5124|
001124  7388              STRB     r0,[r1,#0xe]
;;;780                                System.stop = 0;
001126  7548              STRB     r0,[r1,#0x15]
;;;781                                System.achieve_add_sub = 0;
001128  7448              STRB     r0,[r1,#0x11]
;;;782                                System.modify_power = 0;
00112a  7488              STRB     r0,[r1,#0x12]
;;;783                                System.cancel_add_sub = 0;
00112c  74c8              STRB     r0,[r1,#0x13]
;;;784                                System_Status_Clean();
00112e  f7fffffe          BL       System_Status_Clean
;;;785    
;;;786                                if( get_history_alarm() == 0x01 )
001132  f7fffffe          BL       get_history_alarm
001136  2801              CMP      r0,#1
001138  d103              BNE      |L1.4418|
;;;787                                {
;;;788                                    System.status = SYSTEM_ALARM;
00113a  2011              MOVS     r0,#0x11
00113c  49b1              LDR      r1,|L1.5124|
00113e  72c8              STRB     r0,[r1,#0xb]
001140  e002              B        |L1.4424|
                  |L1.4418|
;;;789                                }
;;;790                                else
;;;791                                {
;;;792                                    System.status = SYSTEM_STANDBY;
001142  2002              MOVS     r0,#2
001144  49af              LDR      r1,|L1.5124|
001146  72c8              STRB     r0,[r1,#0xb]
                  |L1.4424|
;;;793                                }
;;;794    
;;;795                                System.already_swept = 0;
001148  2000              MOVS     r0,#0
00114a  49ae              LDR      r1,|L1.5124|
00114c  70c8              STRB     r0,[r1,#3]
;;;796                                System.cancel_sweeping = 0;
00114e  73c8              STRB     r0,[r1,#0xf]
;;;797                                Trans_stopBack.Trans_state[0]=0xFE;		//停止成功
001150  20fe              MOVS     r0,#0xfe
001152  49d5              LDR      r1,|L1.5288|
001154  7048              STRB     r0,[r1,#1]
001156  e022              B        |L1.4510|
                  |L1.4440|
;;;798                            }
;;;799                            else     //不成功，返回停止失败，且处于报警状态
;;;800                            {
;;;801                                Trans_stopBack.Trans_state[0]=0x02;//停止失败
001158  2002              MOVS     r0,#2
00115a  49d3              LDR      r1,|L1.5288|
00115c  7048              STRB     r0,[r1,#1]
;;;802    //							System.cancel_sweeping = 1;
;;;803    
;;;804                                Alarm.no_respond_locate = 19;
00115e  2013              MOVS     r0,#0x13
001160  49bd              LDR      r1,|L1.5208|
001162  7188              STRB     r0,[r1,#6]
001164  e01b              B        |L1.4510|
                  |L1.4454|
;;;805                                //App_printf("Task_MT2000 Sweep stop 19 no respond.\r\n");
;;;806                            }
;;;807                        }
;;;808                        else     //取消扫频的时候，正好已经完成扫频，清除标志
;;;809                        {
;;;810                            System.achieve_add_sub = 0;
001166  2000              MOVS     r0,#0
001168  49a6              LDR      r1,|L1.5124|
00116a  7448              STRB     r0,[r1,#0x11]
;;;811                            System.modify_power = 0;
00116c  7488              STRB     r0,[r1,#0x12]
;;;812                            System.cancel_add_sub = 0;
00116e  74c8              STRB     r0,[r1,#0x13]
;;;813                            System_Status_Clean();
001170  f7fffffe          BL       System_Status_Clean
;;;814    
;;;815                            if( get_history_alarm() == 0x01 )
001174  f7fffffe          BL       get_history_alarm
001178  2801              CMP      r0,#1
00117a  d103              BNE      |L1.4484|
;;;816                            {
;;;817                                System.status = SYSTEM_ALARM;
00117c  2011              MOVS     r0,#0x11
00117e  49a1              LDR      r1,|L1.5124|
001180  72c8              STRB     r0,[r1,#0xb]
001182  e002              B        |L1.4490|
                  |L1.4484|
;;;818                            }
;;;819                            else
;;;820                            {
;;;821                                System.status = SYSTEM_STANDBY;
001184  2002              MOVS     r0,#2
001186  499f              LDR      r1,|L1.5124|
001188  72c8              STRB     r0,[r1,#0xb]
                  |L1.4490|
;;;822                            }
;;;823    
;;;824                            System.sweep = 0x02;
00118a  2002              MOVS     r0,#2
00118c  499d              LDR      r1,|L1.5124|
00118e  7388              STRB     r0,[r1,#0xe]
;;;825                            System.already_swept = 1;
001190  2001              MOVS     r0,#1
001192  70c8              STRB     r0,[r1,#3]
;;;826                            System.cancel_sweeping = 0;				//取消扫频标志清零
001194  2000              MOVS     r0,#0
001196  73c8              STRB     r0,[r1,#0xf]
;;;827                            Trans_stopBack.Trans_state[0]=0xFE;		//停止成功
001198  20fe              MOVS     r0,#0xfe
00119a  49c3              LDR      r1,|L1.5288|
00119c  7048              STRB     r0,[r1,#1]
                  |L1.4510|
;;;828                        }
;;;829    
;;;830                        System.sweep = 0x00;
00119e  2000              MOVS     r0,#0
0011a0  4998              LDR      r1,|L1.5124|
0011a2  7388              STRB     r0,[r1,#0xe]
                  |L1.4516|
0011a4  e216              B        |L1.5588|
                  |L1.4518|
;;;831                    }
;;;832                    else	if( System.Voltage < 40.0 )   //关机状态
0011a6  4997              LDR      r1,|L1.5124|
0011a8  6f48              LDR      r0,[r1,#0x74]  ; System
0011aa  f7fffffe          BL       __aeabi_f2d
0011ae  4607              MOV      r7,r0
0011b0  4688              MOV      r8,r1
0011b2  2200              MOVS     r2,#0
0011b4  4b94              LDR      r3,|L1.5128|
0011b6  f7fffffe          BL       __aeabi_cdcmple
0011ba  d28f              BCS      |L1.4316|
;;;833                    {
;;;834                        System.achieve_add_sub = 0;
0011bc  2000              MOVS     r0,#0
0011be  4991              LDR      r1,|L1.5124|
0011c0  7448              STRB     r0,[r1,#0x11]
;;;835                        System.modify_power = 0;
0011c2  7488              STRB     r0,[r1,#0x12]
;;;836                        System.cancel_add_sub = 0;
0011c4  74c8              STRB     r0,[r1,#0x13]
;;;837                        System_Status_Clean();
0011c6  f7fffffe          BL       System_Status_Clean
;;;838    
;;;839                        System.status = SYSTEM_SHUTDOWN;
0011ca  2004              MOVS     r0,#4
0011cc  498d              LDR      r1,|L1.5124|
0011ce  72c8              STRB     r0,[r1,#0xb]
;;;840                        System.open = 0x00;
0011d0  2000              MOVS     r0,#0
0011d2  7308              STRB     r0,[r1,#0xc]
;;;841                        System.sweep = 0x00;
0011d4  7388              STRB     r0,[r1,#0xe]
;;;842                        System.already_swept = 0;
0011d6  70c8              STRB     r0,[r1,#3]
;;;843    									Trans_printf(" 扫频处于关机状态 \n");
0011d8  a0b4              ADR      r0,|L1.5292|
0011da  f7fffffe          BL       Trans_printf
0011de  e1f9              B        |L1.5588|
                  |L1.4576|
;;;844                    }
;;;845                }
;;;846                else 	if((ulValue & BIT_6) != 0)	//保留
0011e0  9839              LDR      r0,[sp,#0xe4]
0011e2  f0000040          AND      r0,r0,#0x40
0011e6  2800              CMP      r0,#0
0011e8  d1dc              BNE      |L1.4516|
;;;847                {
;;;848    
;;;849                }
;;;850                else 	if((ulValue & BIT_7) != 0)	//保留
0011ea  9839              LDR      r0,[sp,#0xe4]
0011ec  f0000080          AND      r0,r0,#0x80
0011f0  2800              CMP      r0,#0
0011f2  d1d7              BNE      |L1.4516|
;;;851                {
;;;852    
;;;853                }
;;;854                else 	if((ulValue & BIT_8) != 0)	//开机
0011f4  9839              LDR      r0,[sp,#0xe4]
0011f6  f4007080          AND      r0,r0,#0x100
0011fa  b128              CBZ      r0,|L1.4616|
;;;855                {
;;;856                    GT2000_Open();
0011fc  f7fffffe          BL       GT2000_Open
;;;857    							  Trans_printf(" Task_MT2000中已触发开机事件 \n");
001200  a0af              ADR      r0,|L1.5312|
001202  f7fffffe          BL       Trans_printf
001206  e1e5              B        |L1.5588|
                  |L1.4616|
;;;858                }
;;;859                else 	if((ulValue & BIT_9) != 0)	//关机
001208  9839              LDR      r0,[sp,#0xe4]
00120a  f4007000          AND      r0,r0,#0x200
00120e  b380              CBZ      r0,|L1.4722|
;;;860                {
;;;861    								System.Power_Adjustment=1;
001210  2001              MOVS     r0,#1
001212  497c              LDR      r1,|L1.5124|
001214  f88100a8          STRB     r0,[r1,#0xa8]
;;;862    							
;;;863                    GT2000_Close();
001218  f7fffffe          BL       GT2000_Close
;;;864    								Power_offBack.results[0]= 0xFE;	//关机成功
00121c  20fe              MOVS     r0,#0xfe
00121e  49b0              LDR      r1,|L1.5344|
001220  7048              STRB     r0,[r1,#1]
;;;865    								Power_onBack.results[0]	= 0xFD;	//开机失败						
001222  20fd              MOVS     r0,#0xfd
001224  49af              LDR      r1,|L1.5348|
001226  7048              STRB     r0,[r1,#1]
;;;866    
;;;867    								System.close = 0;		//关机成功
001228  2000              MOVS     r0,#0
00122a  4976              LDR      r1,|L1.5124|
00122c  7348              STRB     r0,[r1,#0xd]
;;;868    								System_Status_Clean();
00122e  f7fffffe          BL       System_Status_Clean
;;;869    								System.Voltage = 0.0;
001232  2000              MOVS     r0,#0
001234  4973              LDR      r1,|L1.5124|
001236  6748              STR      r0,[r1,#0x74]  ; System
;;;870    								System.Electricity = 0.0;
001238  6788              STR      r0,[r1,#0x78]  ; System
;;;871    								System.achieve_add_sub = 0;
00123a  7448              STRB     r0,[r1,#0x11]
;;;872    								System.modify_power = 0;
00123c  7488              STRB     r0,[r1,#0x12]
;;;873    								System.cancel_add_sub = 0;
00123e  74c8              STRB     r0,[r1,#0x13]
;;;874    								System.sweep = 0;
001240  7388              STRB     r0,[r1,#0xe]
;;;875    								System.open = 0;
001242  7308              STRB     r0,[r1,#0xc]
;;;876    
;;;877    								if( get_history_alarm() == 0x01 )
001244  f7fffffe          BL       get_history_alarm
001248  2801              CMP      r0,#1
00124a  d103              BNE      |L1.4692|
;;;878    								{
;;;879    										System.status = SYSTEM_ALARM;
00124c  2011              MOVS     r0,#0x11
00124e  496d              LDR      r1,|L1.5124|
001250  72c8              STRB     r0,[r1,#0xb]
001252  e002              B        |L1.4698|
                  |L1.4692|
;;;880    								}
;;;881    								else
;;;882    								{
;;;883    										System.status = SYSTEM_SHUTDOWN;
001254  2004              MOVS     r0,#4
001256  496b              LDR      r1,|L1.5124|
001258  72c8              STRB     r0,[r1,#0xb]
                  |L1.4698|
;;;884    								}
;;;885                                     
;;;886    
;;;887                    //如果关机之后马上开机，因为需要等待关机完成，会返回开机失败，所以 if(Power_onBack.results[0]==0xFD) 表示正在关机，清零则表示关机完成
;;;888                    Power_onBack.results[0] = 0x00;			//关机完成，可以开机了(不管关机有没有成功)
00125a  2000              MOVS     r0,#0
00125c  49a1              LDR      r1,|L1.5348|
00125e  7048              STRB     r0,[r1,#1]
;;;889    					
;;;890    								vTaskDelay(2000);
001260  f44f60fa          MOV      r0,#0x7d0
001264  f7fffffe          BL       vTaskDelay
;;;891    								System.Power_Adjustment=0;
001268  2000              MOVS     r0,#0
00126a  4966              LDR      r1,|L1.5124|
00126c  f88100a8          STRB     r0,[r1,#0xa8]
001270  e1b0              B        |L1.5588|
                  |L1.4722|
001272  e7ff              B        |L1.4724|
                  |L1.4724|
;;;892    
;;;893                }
;;;894    						
;;;895                else 	if((ulValue & BIT_10) != 0)	//查询
001274  9839              LDR      r0,[sp,#0xe4]
001276  f4006080          AND      r0,r0,#0x400
00127a  2800              CMP      r0,#0
00127c  d092              BEQ      |L1.4516|
;;;896                {						
;;;897    								float power_change=0;
00127e  f04f0a00          MOV      r10,#0
;;;898    								for(repeat_send_counter=0; repeat_send_counter<NO_RESPOND_MAX; repeat_send_counter++)
001282  46d1              MOV      r9,r10
001284  e00e              B        |L1.4772|
                  |L1.4742|
;;;899    								{
;;;900    										Gt_Inquire_All();		//发射机状态查询
001286  f7fffffe          BL       Gt_Inquire_All
;;;901    										ret=GT2000_Wait_Ack(MT2000_CMD_INQUIRE);
00128a  20ce              MOVS     r0,#0xce
00128c  f7fffffe          BL       GT2000_Wait_Ack
001290  4606              MOV      r6,r0
;;;902    										if( (ret == MT2000_ACK_OK) || (ret == MT2000_ACK_ALARM))
001292  2e01              CMP      r6,#1
001294  d001              BEQ      |L1.4762|
001296  1cb0              ADDS     r0,r6,#2
001298  b900              CBNZ     r0,|L1.4764|
                  |L1.4762|
;;;903    												break;
00129a  e006              B        |L1.4778|
                  |L1.4764|
00129c  f1090001          ADD      r0,r9,#1              ;898
0012a0  f00009ff          AND      r9,r0,#0xff           ;898
                  |L1.4772|
0012a4  f1b90f03          CMP      r9,#3                 ;898
0012a8  dbed              BLT      |L1.4742|
                  |L1.4778|
0012aa  bf00              NOP      
;;;904    								}
;;;905                    
;;;906                    if( ret == MT2000_ACK_ALARM )	//激励器报警
0012ac  1cb0              ADDS     r0,r6,#2
0012ae  b928              CBNZ     r0,|L1.4796|
;;;907                    {
;;;908                        GT2000_Alarm_Stop();
0012b0  f7fffffe          BL       GT2000_Alarm_Stop
;;;909    									Trans_printf(" 触发激励器报警！急停！ ");
0012b4  a08c              ADR      r0,|L1.5352|
0012b6  f7fffffe          BL       Trans_printf
0012ba  e183              B        |L1.5572|
                  |L1.4796|
;;;910                    }
;;;911                    else	if( ret == MT2000_ACK_OK )
0012bc  2e01              CMP      r6,#1
0012be  d16f              BNE      |L1.5024|
;;;912                    {
;;;913    										if(Old_Forward_Power!=0)															//增加功率骤变监测
0012c0  2100              MOVS     r1,#0
0012c2  4890              LDR      r0,|L1.5380|
0012c4  6800              LDR      r0,[r0,#0]  ; Old_Forward_Power
0012c6  f7fffffe          BL       __aeabi_cfcmpeq
0012ca  d05e              BEQ      |L1.5002|
;;;914    										{
;;;915    											if(System.status==SYSTEM_EMISSING&&System.Power_Adjustment!=1&&System.stop==0&&System.close==0)
0012cc  484d              LDR      r0,|L1.5124|
0012ce  7ac0              LDRB     r0,[r0,#0xb]  ; System
0012d0  2801              CMP      r0,#1
0012d2  d15a              BNE      |L1.5002|
0012d4  484b              LDR      r0,|L1.5124|
0012d6  f89000a8          LDRB     r0,[r0,#0xa8]  ; System
0012da  2801              CMP      r0,#1
0012dc  d055              BEQ      |L1.5002|
0012de  4849              LDR      r0,|L1.5124|
0012e0  7d40              LDRB     r0,[r0,#0x15]  ; System
0012e2  bb98              CBNZ     r0,|L1.4940|
0012e4  4847              LDR      r0,|L1.5124|
0012e6  7b40              LDRB     r0,[r0,#0xd]  ; System
0012e8  bb80              CBNZ     r0,|L1.4940|
;;;916    											{	
;;;917    												power_change=fabs(Old_Forward_Power-System.Forward_Power);
0012ea  4846              LDR      r0,|L1.5124|
0012ec  6ec1              LDR      r1,[r0,#0x6c]  ; System
0012ee  4885              LDR      r0,|L1.5380|
0012f0  6800              LDR      r0,[r0,#0]  ; Old_Forward_Power
0012f2  f7fffffe          BL       __aeabi_fsub
0012f6  4683              MOV      r11,r0
0012f8  f7fffffe          BL       __aeabi_f2d
0012fc  f0214800          BIC      r8,r1,#0x80000000
001300  4607              MOV      r7,r0
001302  4641              MOV      r1,r8
001304  f7fffffe          BL       __aeabi_d2f
001308  4682              MOV      r10,r0
;;;918    												if(System.mode==1)		//如果是单频			//待测试
00130a  483e              LDR      r0,|L1.5124|
00130c  7dc0              LDRB     r0,[r0,#0x17]  ; System
00130e  2801              CMP      r0,#1
001310  d121              BNE      |L1.4950|
;;;919    												{
;;;920    													if(power_change>=POWER_CHANGE_MAX)
001312  497d              LDR      r1,|L1.5384|
001314  4650              MOV      r0,r10
001316  f7fffffe          BL       __aeabi_cfrcmple
00131a  d818              BHI      |L1.4942|
;;;921    													{
;;;922    														Power_cataclysm_count++;
00131c  487b              LDR      r0,|L1.5388|
00131e  7800              LDRB     r0,[r0,#0]  ; Power_cataclysm_count
001320  1c40              ADDS     r0,r0,#1
001322  497a              LDR      r1,|L1.5388|
001324  7008              STRB     r0,[r1,#0]
;;;923    														if(Power_cataclysm_count>=3)
001326  4608              MOV      r0,r1
001328  7800              LDRB     r0,[r0,#0]  ; Power_cataclysm_count
00132a  2803              CMP      r0,#3
00132c  db2d              BLT      |L1.5002|
;;;924    														{
;;;925    															Alarm.power_cataclysm=1;
00132e  2001              MOVS     r0,#1
001330  4949              LDR      r1,|L1.5208|
001332  7548              STRB     r0,[r1,#0x15]
;;;926    															Alarm.alarm_history = 1;
001334  7008              STRB     r0,[r1,#0]
;;;927    															GT2000_Alarm_Stop();
001336  f7fffffe          BL       GT2000_Alarm_Stop
;;;928    															System.status=SYSTEM_ALARM;	
00133a  2011              MOVS     r0,#0x11
00133c  4931              LDR      r1,|L1.5124|
00133e  72c8              STRB     r0,[r1,#0xb]
;;;929    															Power_cataclysm_count=0;		
001340  2000              MOVS     r0,#0
001342  4972              LDR      r1,|L1.5388|
001344  7008              STRB     r0,[r1,#0]
;;;930    															Trans_printf(" 单频时功率骤变大于350！警告！ ");
001346  a072              ADR      r0,|L1.5392|
001348  f7fffffe          BL       Trans_printf
                  |L1.4940|
00134c  e01d              B        |L1.5002|
                  |L1.4942|
;;;931    														}															
;;;932    													}
;;;933    													else
;;;934    													{
;;;935    														Power_cataclysm_count=0;
00134e  2000              MOVS     r0,#0
001350  496e              LDR      r1,|L1.5388|
001352  7008              STRB     r0,[r1,#0]
001354  e019              B        |L1.5002|
                  |L1.4950|
;;;936    													}
;;;937    												}
;;;938    												else if(System.mode==2||System.mode==3)		//多频时//待测试
001356  482b              LDR      r0,|L1.5124|
001358  7dc0              LDRB     r0,[r0,#0x17]  ; System
00135a  2802              CMP      r0,#2
00135c  d003              BEQ      |L1.4966|
00135e  4829              LDR      r0,|L1.5124|
001360  7dc0              LDRB     r0,[r0,#0x17]  ; System
001362  2803              CMP      r0,#3
001364  d111              BNE      |L1.5002|
                  |L1.4966|
;;;939    												{
;;;940    													if(System.Forward_Power<=10)
001366  4927              LDR      r1,|L1.5124|
001368  6ec8              LDR      r0,[r1,#0x6c]  ; System
00136a  4971              LDR      r1,|L1.5424|
00136c  f7fffffe          BL       __aeabi_cfcmple
001370  d80b              BHI      |L1.5002|
;;;941    													{
;;;942    														Alarm.power_cataclysm=1;
001372  2001              MOVS     r0,#1
001374  4938              LDR      r1,|L1.5208|
001376  7548              STRB     r0,[r1,#0x15]
;;;943    														Alarm.alarm_history = 1;
001378  7008              STRB     r0,[r1,#0]
;;;944    														GT2000_Alarm_Stop();
00137a  f7fffffe          BL       GT2000_Alarm_Stop
;;;945    														System.status=SYSTEM_ALARM;
00137e  2011              MOVS     r0,#0x11
001380  4920              LDR      r1,|L1.5124|
001382  72c8              STRB     r0,[r1,#0xb]
;;;946    														Trans_printf(" 多频时功率骤变大于350！警告！ ");
001384  a06b              ADR      r0,|L1.5428|
001386  f7fffffe          BL       Trans_printf
                  |L1.5002|
;;;947    													}
;;;948    												}
;;;949    											}
;;;950    										}
;;;951    										
;;;952    										Old_Forward_Power=System.Forward_Power;
00138a  481e              LDR      r0,|L1.5124|
00138c  6ec0              LDR      r0,[r0,#0x6c]  ; System
00138e  495d              LDR      r1,|L1.5380|
001390  6008              STR      r0,[r1,#0]  ; Old_Forward_Power
;;;953    									
;;;954                        if( System.already_init == 0x00 )
001392  481c              LDR      r0,|L1.5124|
001394  7880              LDRB     r0,[r0,#2]  ; System
001396  b920              CBNZ     r0,|L1.5026|
;;;955                        {
;;;956                            System.status = SYSTEM_UNINITIALIZE;
001398  2010              MOVS     r0,#0x10
00139a  491a              LDR      r1,|L1.5124|
00139c  72c8              STRB     r0,[r1,#0xb]
00139e  e111              B        |L1.5572|
                  |L1.5024|
0013a0  e104              B        |L1.5548|
                  |L1.5026|
;;;957                        }
;;;958                        else	if( System.Voltage > 40.0 )
0013a2  4918              LDR      r1,|L1.5124|
0013a4  6f48              LDR      r0,[r1,#0x74]  ; System
0013a6  f7fffffe          BL       __aeabi_f2d
0013aa  4607              MOV      r7,r0
0013ac  4688              MOV      r8,r1
0013ae  2200              MOVS     r2,#0
0013b0  4b15              LDR      r3,|L1.5128|
0013b2  f7fffffe          BL       __aeabi_cdrcmple
0013b6  d221              BCS      |L1.5116|
;;;959                        {
;;;960                            System.open = 0x02;
0013b8  2002              MOVS     r0,#2
0013ba  4912              LDR      r1,|L1.5124|
0013bc  7308              STRB     r0,[r1,#0xc]
;;;961    
;;;962                            if( get_history_alarm() == 0x01 )
0013be  f7fffffe          BL       get_history_alarm
0013c2  2801              CMP      r0,#1
0013c4  d103              BNE      |L1.5070|
;;;963                            {
;;;964                                System.status = SYSTEM_ALARM;
0013c6  2011              MOVS     r0,#0x11
0013c8  490e              LDR      r1,|L1.5124|
0013ca  72c8              STRB     r0,[r1,#0xb]
0013cc  e0fa              B        |L1.5572|
                  |L1.5070|
;;;965                            }
;;;966                            else	if( (System.emission == 0x01) && (System.Forward_Power>100.0) )
0013ce  480d              LDR      r0,|L1.5124|
0013d0  7d80              LDRB     r0,[r0,#0x16]  ; System
0013d2  2801              CMP      r0,#1
0013d4  d113              BNE      |L1.5118|
0013d6  490b              LDR      r1,|L1.5124|
0013d8  6ec8              LDR      r0,[r1,#0x6c]  ; System
0013da  f7fffffe          BL       __aeabi_f2d
0013de  4607              MOV      r7,r0
0013e0  4688              MOV      r8,r1
0013e2  2200              MOVS     r2,#0
0013e4  4b5b              LDR      r3,|L1.5460|
0013e6  f7fffffe          BL       __aeabi_cdrcmple
0013ea  d208              BCS      |L1.5118|
;;;967                            {
;;;968                                if( System.sweep == 0x01 )				//正在扫频(扫频时大报警，会清除正在扫频标志位)
0013ec  4805              LDR      r0,|L1.5124|
0013ee  7b80              LDRB     r0,[r0,#0xe]  ; System
0013f0  2801              CMP      r0,#1
0013f2  d105              BNE      |L1.5120|
;;;969                                    System.status = SYSTEM_SCAN;
0013f4  2005              MOVS     r0,#5
0013f6  4903              LDR      r1,|L1.5124|
0013f8  72c8              STRB     r0,[r1,#0xb]
0013fa  e0e3              B        |L1.5572|
                  |L1.5116|
0013fc  e0bf              B        |L1.5502|
                  |L1.5118|
0013fe  e0af              B        |L1.5472|
                  |L1.5120|
001400  e0aa              B        |L1.5464|
001402  0000              DCW      0x0000
                  |L1.5124|
                          DCD      System
                  |L1.5128|
                          DCD      0x40440000
                  |L1.5132|
00140c  20537973          DCB      " System.Voltage < 40.0",163,172,185,216,187,250,193,203
001410  74656d2e
001414  566f6c74
001418  61676520
00141c  3c203430
001420  2e30a3ac
001424  b9d8bbfa
001428  c1cb    
00142a  200a00            DCB      " \n",0
00142d  00                DCB      0
00142e  00                DCB      0
00142f  00                DCB      0
                  |L1.5168|
001430  20d2d1be          DCB      " ",210,209,190,173,201,168,198,181,205,234,193,203,163,172
001434  adc9a8c6
001438  b5cdeac1
00143c  cba3ac  
00143f  cfc2b4ce          DCB      207,194,180,206,201,168,198,181,202,199,214,216,208,194,201
001443  c9a8c6b5
001447  cac7d6d8
00144b  d0c2c9  
00144e  a8c6b520          DCB      168,198,181," \n",0
001452  0a00    
                  |L1.5204|
                          DCD      re_scan_flag
                  |L1.5208|
                          DCD      Alarm
                  |L1.5212|
00145c  20c9a8c6          DCB      " ",201,168,198,181,177,168,190,175,205,203,179,246," \n"
001460  b5b1a8be
001464  afcdcbb3
001468  f6200a  
00146b  00                DCB      0
                  |L1.5228|
                          DCD      Scan_FrqBack
                  |L1.5232|
001470  20c8e7b9          DCB      " ",200,231,185,251,201,207,195,230,181,196,"Band_scan",202
001474  fbc9cfc3
001478  e6b5c442
00147c  616e645f
001480  7363616e
001484  ca      
001485  c7d3c9d3          DCB      199,211,201,211,218,200,161,207,251,201,168,198,181,205,203
001489  dac8a1cf
00148d  fbc9a8c6
001491  b5cdcb  
001494  b3f6b5c4          DCB      179,246,181,196,161,162,188,177,205,163,205,203,179,246,181
001498  a1a2bcb1
00149c  cda3cdcb
0014a0  b3f6b5  
0014a3  c4200a00          DCB      196," \n",0
0014a7  00                DCB      0
                  |L1.5288|
                          DCD      Trans_stopBack
                  |L1.5292|
0014ac  20c9a8c6          DCB      " ",201,168,198,181,180,166,211,218,185,216,187,250,215,180
0014b0  b5b4a6d3
0014b4  dab9d8bb
0014b8  fad7b4  
0014bb  ccac200a          DCB      204,172," \n",0
0014bf  00      
                  |L1.5312|
0014c0  20546173          DCB      " Task_MT2000",214,208,210,209,180,165,183,162,191,170,187
0014c4  6b5f4d54
0014c8  32303030
0014cc  d6d0d2d1
0014d0  b4a5b7a2
0014d4  bfaabb  
0014d7  facac2bc          DCB      250,202,194,188,254," \n",0
0014db  fe200a00
0014df  00                DCB      0
                  |L1.5344|
                          DCD      Power_offBack
                  |L1.5348|
                          DCD      Power_onBack
                  |L1.5352|
0014e8  20b4a5b7          DCB      " ",180,165,183,162,188,164,192,248,198,247,177,168,190,175
0014ec  a2bca4c0
0014f0  f8c6f7b1
0014f4  a8beaf  
0014f7  a3a1bcb1          DCB      163,161,188,177,205,163,163,161," ",0
0014fb  cda3a3a1
0014ff  2000    
001501  00                DCB      0
001502  00                DCB      0
001503  00                DCB      0
                  |L1.5380|
                          DCD      Old_Forward_Power
                  |L1.5384|
                          DCD      0x43af0000
                  |L1.5388|
                          DCD      Power_cataclysm_count
                  |L1.5392|
001510  20b5a5c6          DCB      " ",181,165,198,181,202,177,185,166,194,202,214,232,177,228
001514  b5cab1b9
001518  a6c2cad6
00151c  e8b1e4  
00151f  b4f3d3da          DCB      180,243,211,218,"350",163,161,190,175,184,230,163,161," "
001523  333530a3
001527  a1beafb8
00152b  e6a3a120
00152f  00                DCB      0
                  |L1.5424|
                          DCD      0x41200000
                  |L1.5428|
001534  20b6e0c6          DCB      " ",182,224,198,181,202,177,185,166,194,202,214,232,177,228
001538  b5cab1b9
00153c  a6c2cad6
001540  e8b1e4  
001543  b4f3d3da          DCB      180,243,211,218,"350",163,161,190,175,184,230,163,161," "
001547  333530a3
00154b  a1beafb8
00154f  e6a3a120
001553  00                DCB      0
                  |L1.5460|
                          DCD      0x40590000
                  |L1.5464|
;;;970                                else
;;;971                                    System.status = SYSTEM_EMISSING;	//如果不是扫频，发射功率还不为0，只能是发射状态
001558  2001              MOVS     r0,#1
00155a  4921              LDR      r1,|L1.5600|
00155c  72c8              STRB     r0,[r1,#0xb]
00155e  e031              B        |L1.5572|
                  |L1.5472|
;;;972                            }
;;;973                            else	if( System.status == SYSTEM_EMISSING )
001560  481f              LDR      r0,|L1.5600|
001562  7ac0              LDRB     r0,[r0,#0xb]  ; System
001564  2801              CMP      r0,#1
001566  d02d              BEQ      |L1.5572|
;;;974                            {
;;;975    
;;;976                            }
;;;977                            else
;;;978                            {
;;;979    													if(System.Power_Adjustment!=1)
001568  481d              LDR      r0,|L1.5600|
00156a  f89000a8          LDRB     r0,[r0,#0xa8]  ; System
00156e  2801              CMP      r0,#1
001570  d028              BEQ      |L1.5572|
;;;980    													{
;;;981    														System.emission = 0x00;
001572  2000              MOVS     r0,#0
001574  491a              LDR      r1,|L1.5600|
001576  7588              STRB     r0,[r1,#0x16]
;;;982                                System.status = SYSTEM_STANDBY;			//查询时，开机了，不一定是待机，有可能是发射/增减功率/扫频等。
001578  2002              MOVS     r0,#2
00157a  72c8              STRB     r0,[r1,#0xb]
00157c  e022              B        |L1.5572|
                  |L1.5502|
;;;983    													}
;;;984                            }
;;;985                        }
;;;986                        else
;;;987                        {
;;;988                            if( (System.status == SYSTEM_OPENING) || (System.open == 0x01) )
00157e  4818              LDR      r0,|L1.5600|
001580  7ac0              LDRB     r0,[r0,#0xb]  ; System
001582  2806              CMP      r0,#6
001584  d01e              BEQ      |L1.5572|
001586  4816              LDR      r0,|L1.5600|
001588  7b00              LDRB     r0,[r0,#0xc]  ; System
00158a  2801              CMP      r0,#1
00158c  d01a              BEQ      |L1.5572|
;;;989                            {
;;;990    
;;;991                            }
;;;992                            else
;;;993                            {
;;;994                                System.open = 0x00;
00158e  2000              MOVS     r0,#0
001590  4913              LDR      r1,|L1.5600|
001592  7308              STRB     r0,[r1,#0xc]
;;;995    
;;;996                                if( get_history_alarm() == 0x01 )
001594  f7fffffe          BL       get_history_alarm
001598  2801              CMP      r0,#1
00159a  d103              BNE      |L1.5540|
;;;997                                {
;;;998                                    System.status = SYSTEM_ALARM;
00159c  2011              MOVS     r0,#0x11
00159e  4910              LDR      r1,|L1.5600|
0015a0  72c8              STRB     r0,[r1,#0xb]
0015a2  e00f              B        |L1.5572|
                  |L1.5540|
;;;999                                }
;;;1000                               else
;;;1001                               {
;;;1002                                   System.status = SYSTEM_SHUTDOWN;
0015a4  2004              MOVS     r0,#4
0015a6  490e              LDR      r1,|L1.5600|
0015a8  72c8              STRB     r0,[r1,#0xb]
0015aa  e00b              B        |L1.5572|
                  |L1.5548|
;;;1003                               }
;;;1004                           }
;;;1005                       }
;;;1006                   }
;;;1007   								else if(ret==MT2000_NO_ACK)		//无应答报警-------2021/4/9
0015ac  1c70              ADDS     r0,r6,#1
0015ae  b948              CBNZ     r0,|L1.5572|
;;;1008   								{
;;;1009   									if(System.status!=SYSTEM_UNINITIALIZE)		//未初始化时，不处理
0015b0  480b              LDR      r0,|L1.5600|
0015b2  7ac0              LDRB     r0,[r0,#0xb]  ; System
0015b4  2810              CMP      r0,#0x10
0015b6  d005              BEQ      |L1.5572|
;;;1010   									{
;;;1011   										System.status=SYSTEM_ALARM;	
0015b8  2011              MOVS     r0,#0x11
0015ba  4909              LDR      r1,|L1.5600|
0015bc  72c8              STRB     r0,[r1,#0xb]
;;;1012   										Trans_printf(" Task_MT2000查询事件无响应！报警！ ");
0015be  a009              ADR      r0,|L1.5604|
0015c0  f7fffffe          BL       Trans_printf
                  |L1.5572|
;;;1013   									}										
;;;1014   								}
;;;1015   
;;;1016                   if( System.emission == 0x01 )
0015c4  4806              LDR      r0,|L1.5600|
0015c6  7d80              LDRB     r0,[r0,#0x16]  ; System
0015c8  2801              CMP      r0,#1
0015ca  d102              BNE      |L1.5586|
;;;1017                   {
;;;1018                       System.open = 0x02;
0015cc  2002              MOVS     r0,#2
0015ce  4904              LDR      r1,|L1.5600|
0015d0  7308              STRB     r0,[r1,#0xc]
                  |L1.5586|
;;;1019                   }
;;;1020               }
0015d2  bf00              NOP      
                  |L1.5588|
;;;1021               else								//没有对应事件
;;;1022               {
;;;1023                   //App_printf("没有对应的事件!!!\r\n");
;;;1024               }
;;;1025           }
;;;1026           else									//等待超时
;;;1027           {
;;;1028               //App_printf("Task_MT2000 TIME OUT!!!\r\n");
;;;1029           }
;;;1030   
;;;1031           vTaskDelay(100);
0015d4  2064              MOVS     r0,#0x64
0015d6  f7fffffe          BL       vTaskDelay
                  |L1.5594|
0015da  f7febd1c          B        |L1.22|
;;;1032       }
;;;1033   }
                          ENDP

0015de  0000              DCW      0x0000
                  |L1.5600|
                          DCD      System
                  |L1.5604|
0015e4  20546173          DCB      " Task_MT2000",178,233,209,175,202,194,188,254,206,222,207
0015e8  6b5f4d54
0015ec  32303030
0015f0  b2e9d1af
0015f4  cac2bcfe
0015f8  cedecf  
0015fb  ecd3a6a3          DCB      236,211,166,163,161,177,168,190,175,163,161," ",0
0015ff  a1b1a8be
001603  afa3a120
001607  00      

                          AREA ||.data||, DATA, ALIGN=2

                  re_scan_flag
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  Scan_Begin
                          DCD      0x00000000
                  Scan_End
                          DCD      0x00000000
                  Old_Forward_Power
00000c  00000000          DCFS     0x00000000 ; 0
                  Power_cataclysm_count
000010  00000000          DCB      0x00,0x00,0x00,0x00
                  xHandleTask_MT2000
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\Task\\Task_MT2000.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_Task_MT2000_c_18be2314____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_Task_MT2000_c_18be2314____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_Task_MT2000_c_18be2314____REVSH|
#line 128
|__asm___13_Task_MT2000_c_18be2314____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
