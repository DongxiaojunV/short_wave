; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\short_wave\obj\task_th.o --asm_dir=.\short_wave\List\ --list_dir=.\short_wave\List\ --depend=.\short_wave\obj\task_th.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\adc -I..\..\User\rtc -I..\..\User\internal_flash -I..\..\User\iwdg -I..\..\Task -I..\..\User\can -I..\..\User\firmware_upgrade -I..\..\User\STMFLASH -I..\..\User\IAP -I.\RTE\_Short_Wave -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\short_wave\obj\task_th.crf ..\..\Task\Task_TH.c]
                          THUMB

                          AREA ||i.TH_Analyze||, CODE, READONLY, ALIGN=2

                  TH_Analyze PROC
;;;71     /* 温湿度解析处理函数 */
;;;72     int TH_Analyze(uint8_t *buff, int len)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;73     {
000004  4604              MOV      r4,r0
000006  468a              MOV      r10,r1
;;;74         uint16_t Temperature=0;
000008  f04f0b00          MOV      r11,#0
;;;75         uint16_t Humidity=0;
00000c  2000              MOVS     r0,#0
00000e  9000              STR      r0,[sp,#0]
;;;76         uint8_t i = 0;
000010  4681              MOV      r9,r0
;;;77     
;;;78         if(len<=8)
000012  f1ba0f08          CMP      r10,#8
000016  dc01              BGT      |L1.28|
                  |L1.24|
;;;79         {
;;;80             return 0;
;;;81         }
;;;82         else
;;;83         {
;;;84             if( buff[i]==0x01 && buff[i+1]==0x03 && buff[i+2]==0x04 )	//数据有效	修改地址
;;;85             {
;;;86     			#if	NEW_TH_EN
;;;87     					
;;;88     					  #if New_Th
;;;89     							//湿度
;;;90     							Humidity = (buff[i+5]<<8) + buff[i+6];					//湿度
;;;91     							Temperature_Humidity.Humidity = Humidity/10.0;
;;;92     
;;;93     							if( Temperature_Humidity.Humidity < 0.0 )				//限幅
;;;94     							{
;;;95     									Temperature_Humidity.Humidity = 0;
;;;96     							}
;;;97     							else	if( Temperature_Humidity.Humidity > 100.0 )
;;;98     							{
;;;99     									Temperature_Humidity.Humidity = 100;
;;;100    							}
;;;101    				
;;;102    							//温度
;;;103    							Temperature= (buff[i+3]<<8) + buff[i+4];				//温度
;;;104    							Temperature_Humidity.Temperature = Temperature/10.0;
;;;105    
;;;106    							if( Temperature_Humidity.Temperature < (-40.0) )		//这里不精确，所以用float和int比较
;;;107    							{
;;;108    									Temperature_Humidity.Temperature = -40;
;;;109    							}
;;;110    							else	if( Temperature_Humidity.Temperature > 100.0)
;;;111    							{
;;;112    									Temperature_Humidity.Temperature = 100;
;;;113    							}
;;;114    						#else
;;;115    				//湿度
;;;116    							Humidity = (buff[i+3]<<8) + buff[i+4];					//湿度
;;;117    							Temperature_Humidity.Humidity = Humidity/10.0;
;;;118    
;;;119    							if( Temperature_Humidity.Humidity < 0.0 )				//限幅
;;;120    							{
;;;121    									Temperature_Humidity.Humidity = 0;
;;;122    							}
;;;123    							else	if( Temperature_Humidity.Humidity > 100.0 )
;;;124    							{
;;;125    									Temperature_Humidity.Humidity = 100;
;;;126    							}
;;;127    				
;;;128    							//温度
;;;129    							Temperature= (buff[i+5]<<8) + buff[i+6];				//温度
;;;130    							Temperature_Humidity.Temperature = Temperature/10.0;
;;;131    
;;;132    							if( Temperature_Humidity.Temperature < (-40.0) )		//这里不精确，所以用float和int比较
;;;133    							{
;;;134    									Temperature_Humidity.Temperature = -40;
;;;135    							}
;;;136    							else	if( Temperature_Humidity.Temperature > 100.0)
;;;137    							{
;;;138    									Temperature_Humidity.Temperature = 100;
;;;139    							}
;;;140    			#endif
;;;141    			#else
;;;142    			//温度
;;;143                Temperature = (buff[i+3]<<8) + buff[i+4];				//温度
;;;144                Temperature_Humidity.Temperature = Temperature/10.0 - 40;
;;;145    
;;;146                if( Temperature_Humidity.Temperature < (-40.0) )		//这里不精确，所以用float和int比较
;;;147                {
;;;148                    Temperature_Humidity.Temperature = -40;
;;;149                }
;;;150                else	if( Temperature_Humidity.Temperature > 100.0)
;;;151                {
;;;152                    Temperature_Humidity.Temperature = 100;
;;;153                }
;;;154    
;;;155                //湿度
;;;156                Humidity=(buff[i+5]<<8) + buff[i+6];					//湿度
;;;157                Temperature_Humidity.Humidity = Humidity/10.0;
;;;158    
;;;159                if( Temperature_Humidity.Humidity < 0.0 )				//限幅
;;;160                {
;;;161                    Temperature_Humidity.Humidity = 0;
;;;162                }
;;;163                else if( Temperature_Humidity.Humidity > 100.0)
;;;164                {
;;;165                    Temperature_Humidity.Humidity = 100;
;;;166                }
;;;167    			#endif
;;;168    
;;;169                return 1;
;;;170    
;;;171            }
;;;172        }
;;;173        return 0;
;;;174    }
000018  e8bd8ff8          POP      {r3-r11,pc}
                  |L1.28|
00001c  f8140009          LDRB     r0,[r4,r9]            ;84
000020  2801              CMP      r0,#1                 ;84
000022  d16b              BNE      |L1.252|
000024  f1090001          ADD      r0,r9,#1              ;84
000028  5c20              LDRB     r0,[r4,r0]            ;84
00002a  2803              CMP      r0,#3                 ;84
00002c  d166              BNE      |L1.252|
00002e  f1090002          ADD      r0,r9,#2              ;84
000032  5c20              LDRB     r0,[r4,r0]            ;84
000034  2804              CMP      r0,#4                 ;84
000036  d161              BNE      |L1.252|
000038  f1090006          ADD      r0,r9,#6              ;90
00003c  5c21              LDRB     r1,[r4,r0]            ;90
00003e  1e40              SUBS     r0,r0,#1              ;90
000040  5c20              LDRB     r0,[r4,r0]            ;90
000042  eb012000          ADD      r0,r1,r0,LSL #8       ;90
000046  b280              UXTH     r0,r0                 ;90
000048  9000              STR      r0,[sp,#0]            ;90
00004a  9800              LDR      r0,[sp,#0]            ;91
00004c  f7fffffe          BL       __aeabi_ui2d
000050  4607              MOV      r7,r0                 ;91
000052  2200              MOVS     r2,#0                 ;91
000054  4b2a              LDR      r3,|L1.256|
000056  f7fffffe          BL       __aeabi_ddiv
00005a  4605              MOV      r5,r0                 ;91
00005c  f7fffffe          BL       __aeabi_d2f
000060  4928              LDR      r1,|L1.260|
000062  6048              STR      r0,[r1,#4]            ;91  ; Temperature_Humidity
000064  6848              LDR      r0,[r1,#4]            ;93  ; Temperature_Humidity
000066  f7fffffe          BL       __aeabi_f2d
00006a  4605              MOV      r5,r0                 ;93
00006c  2200              MOVS     r2,#0                 ;93
00006e  4613              MOV      r3,r2                 ;93
000070  f7fffffe          BL       __aeabi_cdcmple
000074  d203              BCS      |L1.126|
000076  2000              MOVS     r0,#0                 ;95
000078  4922              LDR      r1,|L1.260|
00007a  6048              STR      r0,[r1,#4]            ;95  ; Temperature_Humidity
00007c  e00c              B        |L1.152|
                  |L1.126|
00007e  4921              LDR      r1,|L1.260|
000080  6848              LDR      r0,[r1,#4]            ;97  ; Temperature_Humidity
000082  f7fffffe          BL       __aeabi_f2d
000086  4605              MOV      r5,r0                 ;97
000088  2200              MOVS     r2,#0                 ;97
00008a  4b1f              LDR      r3,|L1.264|
00008c  f7fffffe          BL       __aeabi_cdrcmple
000090  d202              BCS      |L1.152|
000092  481e              LDR      r0,|L1.268|
000094  491b              LDR      r1,|L1.260|
000096  6048              STR      r0,[r1,#4]            ;99  ; Temperature_Humidity
                  |L1.152|
000098  f1090004          ADD      r0,r9,#4              ;103
00009c  5c21              LDRB     r1,[r4,r0]            ;103
00009e  1e40              SUBS     r0,r0,#1              ;103
0000a0  5c20              LDRB     r0,[r4,r0]            ;103
0000a2  eb012000          ADD      r0,r1,r0,LSL #8       ;103
0000a6  fa1ffb80          UXTH     r11,r0                ;103
0000aa  4658              MOV      r0,r11                ;104
0000ac  f7fffffe          BL       __aeabi_ui2d
0000b0  4605              MOV      r5,r0                 ;104
0000b2  2200              MOVS     r2,#0                 ;104
0000b4  4b12              LDR      r3,|L1.256|
0000b6  f7fffffe          BL       __aeabi_ddiv
0000ba  4607              MOV      r7,r0                 ;104
0000bc  f7fffffe          BL       __aeabi_d2f
0000c0  4910              LDR      r1,|L1.260|
0000c2  6008              STR      r0,[r1,#0]            ;104  ; Temperature_Humidity
0000c4  6808              LDR      r0,[r1,#0]            ;106  ; Temperature_Humidity
0000c6  f7fffffe          BL       __aeabi_f2d
0000ca  4605              MOV      r5,r0                 ;106
0000cc  2200              MOVS     r2,#0                 ;106
0000ce  4b10              LDR      r3,|L1.272|
0000d0  f7fffffe          BL       __aeabi_cdcmple
0000d4  d203              BCS      |L1.222|
0000d6  480f              LDR      r0,|L1.276|
0000d8  490a              LDR      r1,|L1.260|
0000da  6008              STR      r0,[r1,#0]            ;108  ; Temperature_Humidity
0000dc  e00c              B        |L1.248|
                  |L1.222|
0000de  4909              LDR      r1,|L1.260|
0000e0  6808              LDR      r0,[r1,#0]            ;110  ; Temperature_Humidity
0000e2  f7fffffe          BL       __aeabi_f2d
0000e6  4605              MOV      r5,r0                 ;110
0000e8  2200              MOVS     r2,#0                 ;110
0000ea  4b07              LDR      r3,|L1.264|
0000ec  f7fffffe          BL       __aeabi_cdrcmple
0000f0  d202              BCS      |L1.248|
0000f2  4806              LDR      r0,|L1.268|
0000f4  4903              LDR      r1,|L1.260|
0000f6  6008              STR      r0,[r1,#0]            ;112  ; Temperature_Humidity
                  |L1.248|
0000f8  2001              MOVS     r0,#1                 ;169
0000fa  e78d              B        |L1.24|
                  |L1.252|
0000fc  2000              MOVS     r0,#0                 ;173
0000fe  e78b              B        |L1.24|
;;;175    
                          ENDP

                  |L1.256|
                          DCD      0x40240000
                  |L1.260|
                          DCD      Temperature_Humidity
                  |L1.264|
                          DCD      0x40590000
                  |L1.268|
                          DCD      0x42c80000
                  |L1.272|
                          DCD      0xc0440000
                  |L1.276|
                          DCD      0xc2200000

                          AREA ||i.TH_Cheak||, CODE, READONLY, ALIGN=2

                  TH_Cheak PROC
;;;176    /* 温湿度报警检测函数 */
;;;177    uint8_t TH_Cheak(void)
000000  b570              PUSH     {r4-r6,lr}
;;;178    {
;;;179        uint8_t ret = 0x00;
000002  2400              MOVS     r4,#0
;;;180        static uint8_t TH_alarm_counter = 0x00;
;;;181    
;;;182        TH_alarm_counter++;
000004  484d              LDR      r0,|L2.316|
000006  7800              LDRB     r0,[r0,#0]  ; TH_alarm_counter
000008  1c40              ADDS     r0,r0,#1
00000a  494c              LDR      r1,|L2.316|
00000c  7008              STRB     r0,[r1,#0]
;;;183        if( TH_alarm_counter >= 50 )
00000e  4608              MOV      r0,r1
000010  7800              LDRB     r0,[r0,#0]  ; TH_alarm_counter
000012  2832              CMP      r0,#0x32
000014  db01              BLT      |L2.26|
;;;184        {
;;;185            TH_alarm_counter = 0x00;
000016  2000              MOVS     r0,#0
000018  7008              STRB     r0,[r1,#0]
                  |L2.26|
;;;186            //App_printf("Temperature=%f C ,Humidity=%f%% \r\n",Temperature_Humidity.Temperature,Temperature_Humidity.Humidity);
;;;187        }
;;;188    
;;;189        if( System.already_init == 1 )   //是否初始化
00001a  4849              LDR      r0,|L2.320|
00001c  7880              LDRB     r0,[r0,#2]  ; System
00001e  2801              CMP      r0,#1
000020  d17e              BNE      |L2.288|
;;;190        {
;;;191            if( (Temperature_Humidity.Humidity>Alarm_threshold.Upp_humidity_limit[0]) || 
000022  4a48              LDR      r2,|L2.324|
000024  68d1              LDR      r1,[r2,#0xc]  ; Alarm_threshold
000026  4a48              LDR      r2,|L2.328|
000028  6850              LDR      r0,[r2,#4]  ; Temperature_Humidity
00002a  f7fffffe          BL       __aeabi_cfrcmple
00002e  d306              BCC      |L2.62|
;;;192    			(Temperature_Humidity.Humidity<Alarm_threshold.Low_humidity_limit[0]) )
000030  4a44              LDR      r2,|L2.324|
000032  6891              LDR      r1,[r2,#8]  ; Alarm_threshold
000034  4a44              LDR      r2,|L2.328|
000036  6850              LDR      r0,[r2,#4]  ; Temperature_Humidity
000038  f7fffffe          BL       __aeabi_cfcmple
00003c  d236              BCS      |L2.172|
                  |L2.62|
;;;193            {
;;;194                ret = 0x01;
00003e  2401              MOVS     r4,#1
;;;195    
;;;196                if( Alarm.humidity_alarm == 0 )   //在PC端没有清除报警时，只保存第一次的报警值
000040  4842              LDR      r0,|L2.332|
000042  7a40              LDRB     r0,[r0,#9]  ; Alarm
000044  2800              CMP      r0,#0
000046  d131              BNE      |L2.172|
;;;197                {
;;;198                    if( System.time_update_flag == 0x01 )
000048  483d              LDR      r0,|L2.320|
00004a  7a80              LDRB     r0,[r0,#0xa]  ; System
00004c  2801              CMP      r0,#1
00004e  d124              BNE      |L2.154|
;;;199                    {
;;;200                        Alarm.humidity_alarm_time_flag = 0x01;
000050  493e              LDR      r1,|L2.332|
000052  7288              STRB     r0,[r1,#0xa]
;;;201                        Time_Printf( (RTC_GetCounter()+g_stamp_distance), &set_time );
000054  f7fffffe          BL       RTC_GetCounter
000058  493d              LDR      r1,|L2.336|
00005a  6809              LDR      r1,[r1,#0]  ; g_stamp_distance
00005c  1845              ADDS     r5,r0,r1
00005e  493d              LDR      r1,|L2.340|
000060  4628              MOV      r0,r5
000062  f7fffffe          BL       Time_Printf
;;;202                        Alarm_historyBack.humidity_time[0]=set_time.tm_year-2000;
000066  483b              LDR      r0,|L2.340|
000068  7d00              LDRB     r0,[r0,#0x14]  ; set_time
00006a  f5a060fa          SUB      r0,r0,#0x7d0
00006e  493a              LDR      r1,|L2.344|
000070  75c8              STRB     r0,[r1,#0x17]
;;;203                        Alarm_historyBack.humidity_time[1]=set_time.tm_mon;
000072  4838              LDR      r0,|L2.340|
000074  7c01              LDRB     r1,[r0,#0x10]  ; set_time
000076  4838              LDR      r0,|L2.344|
000078  7601              STRB     r1,[r0,#0x18]
;;;204                        Alarm_historyBack.humidity_time[2]=set_time.tm_mday;
00007a  4836              LDR      r0,|L2.340|
00007c  7b01              LDRB     r1,[r0,#0xc]  ; set_time
00007e  4836              LDR      r0,|L2.344|
000080  7641              STRB     r1,[r0,#0x19]
;;;205                        Alarm_historyBack.humidity_time[3]=set_time.tm_hour;
000082  4834              LDR      r0,|L2.340|
000084  7a01              LDRB     r1,[r0,#8]  ; set_time
000086  4834              LDR      r0,|L2.344|
000088  7681              STRB     r1,[r0,#0x1a]
;;;206                        Alarm_historyBack.humidity_time[4]=set_time.tm_min;
00008a  4832              LDR      r0,|L2.340|
00008c  7901              LDRB     r1,[r0,#4]  ; set_time
00008e  4832              LDR      r0,|L2.344|
000090  76c1              STRB     r1,[r0,#0x1b]
;;;207                        Alarm_historyBack.humidity_time[5]=set_time.tm_sec;
000092  4830              LDR      r0,|L2.340|
000094  7801              LDRB     r1,[r0,#0]  ; set_time
000096  4830              LDR      r0,|L2.344|
000098  7701              STRB     r1,[r0,#0x1c]
                  |L2.154|
;;;208                    }
;;;209    
;;;210                    Alarm.alarm_history = 1;
00009a  2001              MOVS     r0,#1
00009c  492b              LDR      r1,|L2.332|
00009e  7008              STRB     r0,[r1,#0]
;;;211                    Alarm.humidity_alarm = 1;
0000a0  7248              STRB     r0,[r1,#9]
;;;212                    Alarm_historyBack.humidity_history[0]=Temperature_Humidity.Humidity;	//报警值
0000a2  4829              LDR      r0,|L2.328|
0000a4  6840              LDR      r0,[r0,#4]  ; Temperature_Humidity
0000a6  492c              LDR      r1,|L2.344|
0000a8  f8c10013          STR      r0,[r1,#0x13]  ; Alarm_historyBack
                  |L2.172|
;;;213    
;;;214                    //App_printf("Humidity alarm alarm alarm!\r\n");
;;;215                }
;;;216            }
;;;217    
;;;218            if(Temperature_Humidity.Temperature>Alarm_threshold.Upp_temp_limit[0] || Temperature_Humidity.Temperature<Alarm_threshold.Low_temp_limit[0])
0000ac  4a25              LDR      r2,|L2.324|
0000ae  6851              LDR      r1,[r2,#4]  ; Alarm_threshold
0000b0  4a25              LDR      r2,|L2.328|
0000b2  6810              LDR      r0,[r2,#0]  ; Temperature_Humidity
0000b4  f7fffffe          BL       __aeabi_cfrcmple
0000b8  d306              BCC      |L2.200|
0000ba  4a22              LDR      r2,|L2.324|
0000bc  6811              LDR      r1,[r2,#0]  ; Alarm_threshold
0000be  4a22              LDR      r2,|L2.328|
0000c0  6810              LDR      r0,[r2,#0]  ; Temperature_Humidity
0000c2  f7fffffe          BL       __aeabi_cfcmple
0000c6  d237              BCS      |L2.312|
                  |L2.200|
;;;219            {
;;;220                ret = 0x01;
0000c8  2401              MOVS     r4,#1
;;;221    
;;;222                if( Alarm.temperature_alarm == 0 )   //在PC端没有清除报警时，只保存第一次的报警值
0000ca  4820              LDR      r0,|L2.332|
0000cc  79c0              LDRB     r0,[r0,#7]  ; Alarm
0000ce  bb38              CBNZ     r0,|L2.288|
;;;223                {
;;;224                    if( System.time_update_flag == 0x01 )
0000d0  481b              LDR      r0,|L2.320|
0000d2  7a80              LDRB     r0,[r0,#0xa]  ; System
0000d4  2801              CMP      r0,#1
0000d6  d126              BNE      |L2.294|
;;;225                    {
;;;226                        Alarm.temperature_alarm_time_flag = 0x01;
0000d8  491c              LDR      r1,|L2.332|
0000da  7208              STRB     r0,[r1,#8]
;;;227                        Time_Printf( (RTC_GetCounter()+g_stamp_distance), &set_time );
0000dc  f7fffffe          BL       RTC_GetCounter
0000e0  491b              LDR      r1,|L2.336|
0000e2  6809              LDR      r1,[r1,#0]  ; g_stamp_distance
0000e4  1845              ADDS     r5,r0,r1
0000e6  491b              LDR      r1,|L2.340|
0000e8  4628              MOV      r0,r5
0000ea  f7fffffe          BL       Time_Printf
;;;228                        Alarm_historyBack.temp_time[0]=set_time.tm_year-2000;
0000ee  4819              LDR      r0,|L2.340|
0000f0  7d00              LDRB     r0,[r0,#0x14]  ; set_time
0000f2  f5a060fa          SUB      r0,r0,#0x7d0
0000f6  4918              LDR      r1,|L2.344|
0000f8  7348              STRB     r0,[r1,#0xd]
;;;229                        Alarm_historyBack.temp_time[1]=set_time.tm_mon;
0000fa  4816              LDR      r0,|L2.340|
0000fc  7c01              LDRB     r1,[r0,#0x10]  ; set_time
0000fe  4816              LDR      r0,|L2.344|
000100  7381              STRB     r1,[r0,#0xe]
;;;230                        Alarm_historyBack.temp_time[2]=set_time.tm_mday;
000102  4814              LDR      r0,|L2.340|
000104  7b01              LDRB     r1,[r0,#0xc]  ; set_time
000106  4814              LDR      r0,|L2.344|
000108  73c1              STRB     r1,[r0,#0xf]
;;;231                        Alarm_historyBack.temp_time[3]=set_time.tm_hour;
00010a  4812              LDR      r0,|L2.340|
00010c  7a01              LDRB     r1,[r0,#8]  ; set_time
00010e  4812              LDR      r0,|L2.344|
000110  7401              STRB     r1,[r0,#0x10]
;;;232                        Alarm_historyBack.temp_time[4]=set_time.tm_min;
000112  4810              LDR      r0,|L2.340|
000114  7901              LDRB     r1,[r0,#4]  ; set_time
000116  4810              LDR      r0,|L2.344|
000118  7441              STRB     r1,[r0,#0x11]
;;;233                        Alarm_historyBack.temp_time[5]=set_time.tm_sec;
00011a  480e              LDR      r0,|L2.340|
00011c  7801              LDRB     r1,[r0,#0]  ; set_time
00011e  e000              B        |L2.290|
                  |L2.288|
000120  e00a              B        |L2.312|
                  |L2.290|
000122  480d              LDR      r0,|L2.344|
000124  7481              STRB     r1,[r0,#0x12]
                  |L2.294|
;;;234                    }
;;;235    
;;;236                    Alarm.alarm_history = 1;
000126  2001              MOVS     r0,#1
000128  4908              LDR      r1,|L2.332|
00012a  7008              STRB     r0,[r1,#0]
;;;237                    Alarm.temperature_alarm = 1;
00012c  71c8              STRB     r0,[r1,#7]
;;;238                    Alarm_historyBack.temp_history[0]=Temperature_Humidity.Temperature;	//报警值
00012e  4806              LDR      r0,|L2.328|
000130  6800              LDR      r0,[r0,#0]  ; Temperature_Humidity
000132  4909              LDR      r1,|L2.344|
000134  f8c10009          STR      r0,[r1,#9]  ; Alarm_historyBack
                  |L2.312|
;;;239    
;;;240                    //App_printf("Temperature alarm alarm alarm!\r\n");
;;;241                }
;;;242            }
;;;243        }
;;;244    
;;;245        return ret;
000138  4620              MOV      r0,r4
;;;246    }
00013a  bd70              POP      {r4-r6,pc}
                          ENDP

                  |L2.316|
                          DCD      TH_alarm_counter
                  |L2.320|
                          DCD      System
                  |L2.324|
                          DCD      Alarm_threshold
                  |L2.328|
                          DCD      Temperature_Humidity
                  |L2.332|
                          DCD      Alarm
                  |L2.336|
                          DCD      g_stamp_distance
                  |L2.340|
                          DCD      set_time
                  |L2.344|
                          DCD      Alarm_historyBack

                          AREA ||i.Task_TH||, CODE, READONLY, ALIGN=2

                  Task_TH PROC
;;;16     */
;;;17     void Task_TH(void *pvParameters)
000000  b08a              SUB      sp,sp,#0x28
;;;18     {
;;;19         uint8_t fail_count = 0;
000002  2400              MOVS     r4,#0
;;;20         uint8_t read;
;;;21         uint8_t buf[30];
;;;22         int count =0;
000004  2500              MOVS     r5,#0
;;;23     
;;;24         while(1)
000006  e037              B        |L3.120|
                  |L3.8|
;;;25         {
;;;26             while(comGetChar(COM2,&read))
000008  e008              B        |L3.28|
                  |L3.10|
;;;27             {
;;;28                 buf[count++]=read;
00000a  f89d2024          LDRB     r2,[sp,#0x24]
00000e  4628              MOV      r0,r5
000010  1c6d              ADDS     r5,r5,#1
000012  a901              ADD      r1,sp,#4
000014  540a              STRB     r2,[r1,r0]
;;;29                 vTaskDelay(1);
000016  2001              MOVS     r0,#1
000018  f7fffffe          BL       vTaskDelay
                  |L3.28|
00001c  a909              ADD      r1,sp,#0x24           ;26
00001e  2001              MOVS     r0,#1                 ;26
000020  f7fffffe          BL       comGetChar
000024  2800              CMP      r0,#0                 ;26
000026  d1f0              BNE      |L3.10|
;;;30             }
;;;31     
;;;32             if(count>2)
000028  2d02              CMP      r5,#2
00002a  dd14              BLE      |L3.86|
;;;33             {
;;;34                 if(TH_Analyze(buf,count))
00002c  4629              MOV      r1,r5
00002e  a801              ADD      r0,sp,#4
000030  f7fffffe          BL       TH_Analyze
000034  b108              CBZ      r0,|L3.58|
;;;35                 {
;;;36                     fail_count = 0;
000036  2400              MOVS     r4,#0
000038  e00b              B        |L3.82|
                  |L3.58|
;;;37                 }
;;;38                 else
;;;39                 {
;;;40                     fail_count++;
00003a  1c60              ADDS     r0,r4,#1
00003c  b2c4              UXTB     r4,r0
;;;41                     if( fail_count >= 100 )		//10s都收不到数据，温湿度掉线，数值清零
00003e  2c64              CMP      r4,#0x64
000040  db07              BLT      |L3.82|
;;;42                     {
;;;43                         fail_count = 0;
000042  2400              MOVS     r4,#0
;;;44     
;;;45                         comClearRxFifo(COM2);
000044  2001              MOVS     r0,#1
000046  f7fffffe          BL       comClearRxFifo
;;;46                         Temperature_Humidity.Humidity = 0.0;
00004a  2000              MOVS     r0,#0
00004c  490b              LDR      r1,|L3.124|
00004e  6048              STR      r0,[r1,#4]  ; Temperature_Humidity
;;;47                         Temperature_Humidity.Temperature = 0.0;
000050  6008              STR      r0,[r1,#0]  ; Temperature_Humidity
                  |L3.82|
;;;48                     }
;;;49                 }
;;;50     
;;;51                 count=0;
000052  2500              MOVS     r5,#0
000054  e00b              B        |L3.110|
                  |L3.86|
;;;52             }
;;;53             else
;;;54             {
;;;55                 fail_count++;
000056  1c60              ADDS     r0,r4,#1
000058  b2c4              UXTB     r4,r0
;;;56                 if( fail_count >= 100 )		//10s都收不到数据，温湿度掉线，数值清零
00005a  2c64              CMP      r4,#0x64
00005c  db07              BLT      |L3.110|
;;;57                 {
;;;58                     fail_count = 0;
00005e  2400              MOVS     r4,#0
;;;59     
;;;60                     comClearRxFifo(COM2);
000060  2001              MOVS     r0,#1
000062  f7fffffe          BL       comClearRxFifo
;;;61                     Temperature_Humidity.Humidity = 0.0;
000066  2000              MOVS     r0,#0
000068  4904              LDR      r1,|L3.124|
00006a  6048              STR      r0,[r1,#4]  ; Temperature_Humidity
;;;62                     Temperature_Humidity.Temperature = 0.0;
00006c  6008              STR      r0,[r1,#0]  ; Temperature_Humidity
                  |L3.110|
;;;63                 }
;;;64             }
;;;65     
;;;66             TH_Cheak();
00006e  f7fffffe          BL       TH_Cheak
;;;67             vTaskDelay(100);
000072  2064              MOVS     r0,#0x64
000074  f7fffffe          BL       vTaskDelay
                  |L3.120|
000078  e7c6              B        |L3.8|
;;;68         }
;;;69     }
;;;70     
                          ENDP

00007a  0000              DCW      0x0000
                  |L3.124|
                          DCD      Temperature_Humidity

                          AREA ||.data||, DATA, ALIGN=2

                  xHandleTask_TH
                          DCD      0x00000000
                  Temperature_Humidity
                          %        8
                  TH_alarm_counter
00000c  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\Task\\Task_TH.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_Task_TH_c_Task_TH____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_Task_TH_c_Task_TH____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_Task_TH_c_Task_TH____REVSH|
#line 128
|__asm___9_Task_TH_c_Task_TH____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
