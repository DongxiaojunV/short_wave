; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\short_wave\obj\task_upper_computer.o --asm_dir=.\short_wave\List\ --list_dir=.\short_wave\List\ --depend=.\short_wave\obj\task_upper_computer.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\User\adc -I..\..\User\rtc -I..\..\User\internal_flash -I..\..\User\iwdg -I..\..\Task -I..\..\User\can -I..\..\User\firmware_upgrade -I..\..\User\STMFLASH -I..\..\User\IAP -I.\RTE\_Short_Wave -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=525 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\short_wave\obj\task_upper_computer.crf ..\..\Task\Task_Upper_Computer.c]
                          THUMB

                          AREA ||i.Convert_byte_order_16||, CODE, READONLY, ALIGN=1

                  Convert_byte_order_16 PROC
;;;1338   /*转换16bit的字节序 高位与低位互换*/
;;;1339   uint16_t Convert_byte_order_16(uint16_t tni2)
000000  0a01              LSRS     r1,r0,#8
;;;1340   {
;;;1341   	tni2=(((tni2>>8)&0xff) | ((tni2&0xff)<<8));
000002  b2c2              UXTB     r2,r0
000004  ea412002          ORR      r0,r1,r2,LSL #8
;;;1342   	return tni2;
;;;1343   }
000008  4770              BX       lr
                          ENDP


                          AREA ||i.Task_Upper_Computer||, CODE, READONLY, ALIGN=2

                  Task_Upper_Computer PROC
;;;19     /* 查询指令0201，直接发送并返回，其他的都是通知Task_MT2000发送，等待PC发0201查询结果 */
;;;20     void Task_Upper_Computer(void *pvParameters)
000000  b08a              SUB      sp,sp,#0x28
;;;21     {
;;;22         uint8_t	  j = 0;				//失联，搜索运行图时使用
000002  2000              MOVS     r0,#0
000004  9009              STR      r0,[sp,#0x24]
;;;23         uint8_t		k = 0;					//普通for循环	(停止和关机等待)
000006  9008              STR      r0,[sp,#0x20]
;;;24     
;;;25         int			count =0;
000008  9007              STR      r0,[sp,#0x1c]
;;;26         int			ret=0;
00000a  9006              STR      r0,[sp,#0x18]
;;;27     
;;;28         static		uint8_t task_upper_inquire_counter = 0;
;;;29     
;;;30         Alarm.no_respond_locate = 0;
00000c  49fe              LDR      r1,|L2.1032|
00000e  7188              STRB     r0,[r1,#6]
;;;31         Alarm.no_respond_count = 0;
000010  7148              STRB     r0,[r1,#5]
;;;32     
;;;33     	
;;;34         //未初始化，不开机检测
;;;35         if( System.already_init == 0x00 )
000012  48fe              LDR      r0,|L2.1036|
000014  7880              LDRB     r0,[r0,#2]  ; System
000016  b918              CBNZ     r0,|L2.32|
;;;36         {
;;;37             System.status = SYSTEM_UNINITIALIZE;
000018  2010              MOVS     r0,#0x10
00001a  49fc              LDR      r1,|L2.1036|
00001c  72c8              STRB     r0,[r1,#0xb]
00001e  e031              B        |L2.132|
                  |L2.32|
;;;38         }
;;;39         else
;;;40         {		
;;;41     			Gt_Inquire_All();
000020  f7fffffe          BL       Gt_Inquire_All
;;;42     			ret=GT2000_Wait_Ack(MT2000_CMD_INQUIRE);
000024  20ce              MOVS     r0,#0xce
000026  f7fffffe          BL       GT2000_Wait_Ack
00002a  9006              STR      r0,[sp,#0x18]
;;;43     
;;;44             if( ret == MT2000_ACK_OK )
00002c  9806              LDR      r0,[sp,#0x18]
00002e  2801              CMP      r0,#1
000030  d118              BNE      |L2.100|
;;;45             {
;;;46                 if( System.Voltage > 40.0 )
000032  48f6              LDR      r0,|L2.1036|
000034  6f40              LDR      r0,[r0,#0x74]  ; System
000036  9003              STR      r0,[sp,#0xc]
000038  f7fffffe          BL       __aeabi_f2d
00003c  2200              MOVS     r2,#0
00003e  4bf4              LDR      r3,|L2.1040|
000040  e9cd0104          STRD     r0,r1,[sp,#0x10]
000044  f7fffffe          BL       __aeabi_cdrcmple
000048  d216              BCS      |L2.120|
;;;47                 {
;;;48                     System.open = 0x02;
00004a  2002              MOVS     r0,#2
00004c  49ef              LDR      r1,|L2.1036|
00004e  7308              STRB     r0,[r1,#0xc]
;;;49     
;;;50                     if( System.emission == 0x01 )
000050  4608              MOV      r0,r1
000052  7d80              LDRB     r0,[r0,#0x16]  ; System
000054  2801              CMP      r0,#1
000056  d101              BNE      |L2.92|
;;;51                     {
;;;52                         System.status = SYSTEM_EMISSING;
000058  72c8              STRB     r0,[r1,#0xb]
00005a  e00d              B        |L2.120|
                  |L2.92|
;;;53                     }
;;;54                     else
;;;55                     {
;;;56                         System.status = SYSTEM_STANDBY;
00005c  2002              MOVS     r0,#2
00005e  49eb              LDR      r1,|L2.1036|
000060  72c8              STRB     r0,[r1,#0xb]
000062  e009              B        |L2.120|
                  |L2.100|
;;;57                     }			
;;;58                 }
;;;59             }
;;;60             else
;;;61             {
;;;62                 if( get_history_alarm() == 0x01 )
000064  f7fffffe          BL       get_history_alarm
000068  2801              CMP      r0,#1
00006a  d102              BNE      |L2.114|
;;;63                 {
;;;64                     System.status = SYSTEM_ALARM;
00006c  2011              MOVS     r0,#0x11
00006e  49e7              LDR      r1,|L2.1036|
000070  72c8              STRB     r0,[r1,#0xb]
                  |L2.114|
;;;65                 }
;;;66     
;;;67                 Alarm.no_respond_locate = 15;
000072  200f              MOVS     r0,#0xf
000074  49e4              LDR      r1,|L2.1032|
000076  7188              STRB     r0,[r1,#6]
                  |L2.120|
;;;68             }
;;;69     
;;;70             if( System.already_init == 0 )
000078  48e4              LDR      r0,|L2.1036|
00007a  7880              LDRB     r0,[r0,#2]  ; System
00007c  b910              CBNZ     r0,|L2.132|
;;;71             {
;;;72                 System.status = SYSTEM_UNINITIALIZE;
00007e  2010              MOVS     r0,#0x10
000080  49e2              LDR      r1,|L2.1036|
000082  72c8              STRB     r0,[r1,#0xb]
                  |L2.132|
;;;73             }
;;;74         }
;;;75     
;;;76         while(1)
000084  f001bf43          B.W      |L2.7950|
                  |L2.136|
;;;77         {
;;;78             update_status_without_inquire();		//只更新状态，不查询
000088  f7fffffe          BL       update_status_without_inquire
;;;79             count = W5500_rx_buf_len;
00008c  48e1              LDR      r0,|L2.1044|
00008e  8800              LDRH     r0,[r0,#0]  ; W5500_rx_buf_len
000090  9007              STR      r0,[sp,#0x1c]
;;;80             W5500_rx_buf_len = 0;
000092  2000              MOVS     r0,#0
000094  49df              LDR      r1,|L2.1044|
000096  8008              STRH     r0,[r1,#0]
;;;81     
;;;82             if(count>2)
000098  9807              LDR      r0,[sp,#0x1c]
00009a  2802              CMP      r0,#2
00009c  f3418704          BLE.W    |L2.7848|
;;;83             {
;;;84                 RxBuf_FromPC.len = count;//整体数据长度
0000a0  49dd              LDR      r1,|L2.1048|
0000a2  9807              LDR      r0,[sp,#0x1c]
0000a4  f8810100          STRB     r0,[r1,#0x100]
;;;85                 ret=CAN_data_analyze(g_fuc_cod, &RxBuf_FromPC);
0000a8  48dc              LDR      r0,|L2.1052|
0000aa  f7fffffe          BL       CAN_data_analyze
0000ae  9006              STR      r0,[sp,#0x18]
;;;86                 count = 0;
0000b0  2000              MOVS     r0,#0
0000b2  9007              STR      r0,[sp,#0x1c]
;;;87     
;;;88                 if(ret==1)
0000b4  9806              LDR      r0,[sp,#0x18]
0000b6  2801              CMP      r0,#1
0000b8  f041869d          BNE.W    |L2.7670|
;;;89                 {
;;;90                     Monitor.no_respond_count=0;	//正常通信则清零
0000bc  2000              MOVS     r0,#0
0000be  49d8              LDR      r1,|L2.1056|
0000c0  f88100c9          STRB     r0,[r1,#0xc9]
;;;91                     Monitor.hard_control=0;
0000c4  f88100ca          STRB     r0,[r1,#0xca]
;;;92                     Monitor.need_emit = 0;
0000c8  f88100cd          STRB     r0,[r1,#0xcd]
;;;93                     Monitor.need_open = 0;
0000cc  f88100cb          STRB     r0,[r1,#0xcb]
;;;94                     Monitor.need_close = 0;
0000d0  f88100cc          STRB     r0,[r1,#0xcc]
;;;95     
;;;96                     Run_Diagram_data.mode = 0;	//初始化
0000d4  49d3              LDR      r1,|L2.1060|
0000d6  7008              STRB     r0,[r1,#0]
;;;97                     Run_Diagram_data.power[0] = 0;
0000d8  7348              STRB     r0,[r1,#0xd]
;;;98                     Run_Diagram_data.power[1] = 0;
0000da  2100              MOVS     r1,#0
0000dc  48d1              LDR      r0,|L2.1060|
0000de  7381              STRB     r1,[r0,#0xe]
;;;99                     Run_Diagram_data.power[2] = 0;
0000e0  73c1              STRB     r1,[r0,#0xf]
;;;100                    memset(Run_Diagram_data.Freq, 0, sizeof(Run_Diagram_data.Freq));
0000e2  1c40              ADDS     r0,r0,#1
0000e4  6001              STR      r1,[r0,#0]  ; Run_Diagram_data
0000e6  6041              STR      r1,[r0,#4]  ; Run_Diagram_data
0000e8  6081              STR      r1,[r0,#8]  ; Run_Diagram_data
;;;101    
;;;102                    if(Monitor.hard_control==1)
0000ea  48cd              LDR      r0,|L2.1056|
0000ec  f89000ca          LDRB     r0,[r0,#0xca]  ; Monitor
0000f0  2801              CMP      r0,#1
0000f2  d12b              BNE      |L2.332|
;;;103                    {
;;;104                        Monitor.usage_diagram_count=0;
0000f4  2000              MOVS     r0,#0
0000f6  49ca              LDR      r1,|L2.1056|
0000f8  f88100c8          STRB     r0,[r1,#0xc8]
;;;105                        System.mode = 0;		//先清零，再查询赋值
0000fc  49c3              LDR      r1,|L2.1036|
0000fe  75c8              STRB     r0,[r1,#0x17]
;;;106    
;;;107                        for(int i=0; i<flash3_Save; i++)
000100  9005              STR      r0,[sp,#0x14]
000102  e01e              B        |L2.322|
                  |L2.260|
;;;108                        {
;;;109                            for(j=0; j<10; j++)
000104  2000              MOVS     r0,#0
000106  9009              STR      r0,[sp,#0x24]
000108  e015              B        |L2.310|
                  |L2.266|
;;;110                            {
;;;111                                Monitor.start[i][j] = 0;
00010a  2100              MOVS     r1,#0
00010c  9805              LDR      r0,[sp,#0x14]
00010e  eb000080          ADD      r0,r0,r0,LSL #2
000112  4ac3              LDR      r2,|L2.1056|
000114  eb020240          ADD      r2,r2,r0,LSL #1
000118  9809              LDR      r0,[sp,#0x24]
00011a  5411              STRB     r1,[r2,r0]
;;;112                                Monitor.end[i][j] = 0;
00011c  9805              LDR      r0,[sp,#0x14]
00011e  eb000280          ADD      r2,r0,r0,LSL #2
000122  48bf              LDR      r0,|L2.1056|
000124  3064              ADDS     r0,r0,#0x64
000126  eb000242          ADD      r2,r0,r2,LSL #1
00012a  9809              LDR      r0,[sp,#0x24]
00012c  5411              STRB     r1,[r2,r0]
00012e  9809              LDR      r0,[sp,#0x24]         ;109
000130  1c40              ADDS     r0,r0,#1              ;109
000132  b2c0              UXTB     r0,r0                 ;109
000134  9009              STR      r0,[sp,#0x24]         ;109
                  |L2.310|
000136  9809              LDR      r0,[sp,#0x24]         ;109
000138  280a              CMP      r0,#0xa               ;109
00013a  dbe6              BLT      |L2.266|
00013c  9805              LDR      r0,[sp,#0x14]         ;107
00013e  1c40              ADDS     r0,r0,#1              ;107
000140  9005              STR      r0,[sp,#0x14]         ;107
                  |L2.322|
000142  49b9              LDR      r1,|L2.1064|
000144  7809              LDRB     r1,[r1,#0]            ;107  ; flash3_Save
000146  9805              LDR      r0,[sp,#0x14]         ;107
000148  4288              CMP      r0,r1                 ;107
00014a  dbdb              BLT      |L2.260|
                  |L2.332|
;;;113                            }
;;;114                        }
;;;115                    }
;;;116    
;;;117                    func_code_printf();
00014c  f7fffffe          BL       func_code_printf
;;;118    
;;;119                    /* 根据功能码，执行相应操作 */
;;;120                    if(g_fuc_cod[0]==0x01&&g_fuc_cod[1]==0x01)				//初始化
000150  48b2              LDR      r0,|L2.1052|
000152  7800              LDRB     r0,[r0,#0]  ; g_fuc_cod
000154  2801              CMP      r0,#1
000156  d163              BNE      |L2.544|
000158  48b0              LDR      r0,|L2.1052|
00015a  7840              LDRB     r0,[r0,#1]  ; g_fuc_cod
00015c  2801              CMP      r0,#1
00015e  d15f              BNE      |L2.544|
;;;121                    {
;;;122    										System.Init_Mark=1;
000160  49aa              LDR      r1,|L2.1036|
000162  f88100a6          STRB     r0,[r1,#0xa6]
;;;123                        System.CAN_ID[0] = Alarm_threshold.Transmitte_id[0];	//存在flash
000166  48b1              LDR      r0,|L2.1068|
000168  f8900026          LDRB     r0,[r0,#0x26]  ; Alarm_threshold
00016c  7008              STRB     r0,[r1,#0]
;;;124    
;;;125                        Alarm_backPC.Transmitte_id[0]=System.CAN_ID[0];
00016e  4608              MOV      r0,r1
000170  7800              LDRB     r0,[r0,#0]  ; System
000172  49af              LDR      r1,|L2.1072|
000174  7008              STRB     r0,[r1,#0]
;;;126                        g_fuc_codToPC[0]=0x01;
000176  2001              MOVS     r0,#1
000178  49ae              LDR      r1,|L2.1076|
00017a  7008              STRB     r0,[r1,#0]
;;;127                        g_fuc_codToPC[1]=0x02;
00017c  2002              MOVS     r0,#2
00017e  7048              STRB     r0,[r1,#1]
;;;128    
;;;129                        Time_Printf( (RTC_GetCounter()+g_stamp_distance), &set_time );
000180  f7fffffe          BL       RTC_GetCounter
000184  49ac              LDR      r1,|L2.1080|
000186  6809              LDR      r1,[r1,#0]  ; g_stamp_distance
000188  4408              ADD      r0,r0,r1
00018a  49ac              LDR      r1,|L2.1084|
00018c  9005              STR      r0,[sp,#0x14]
00018e  f7fffffe          BL       Time_Printf
;;;130    
;;;131                        if(InternalFlash_SaveData_1(0x01)==0)		/* 写入flash */
000192  2001              MOVS     r0,#1
000194  f7fffffe          BL       InternalFlash_SaveData_1
000198  b958              CBNZ     r0,|L2.434|
;;;132                        {
;;;133                            System.already_init = 0;
00019a  2000              MOVS     r0,#0
00019c  499b              LDR      r1,|L2.1036|
00019e  7088              STRB     r0,[r1,#2]
;;;134                            flash_1_once_flag = 0;
0001a0  49a7              LDR      r1,|L2.1088|
0001a2  6008              STR      r0,[r1,#0]  ; flash_1_once_flag
;;;135    
;;;136                            Alarm_backPC.Alarm_paramet[0] = 0xFC;		//初始化失败
0001a4  20fc              MOVS     r0,#0xfc
0001a6  49a2              LDR      r1,|L2.1072|
0001a8  7048              STRB     r0,[r1,#1]
;;;137                            Alarm_backPC.Alarm_paramet[1] = 0x00;
0001aa  2100              MOVS     r1,#0
0001ac  48a0              LDR      r0,|L2.1072|
0001ae  7081              STRB     r1,[r0,#2]
0001b0  e031              B        |L2.534|
                  |L2.434|
;;;138                        }
;;;139                        else
;;;140                        {
;;;141                            System.already_init = 1;
0001b2  2001              MOVS     r0,#1
0001b4  4995              LDR      r1,|L2.1036|
0001b6  7088              STRB     r0,[r1,#2]
;;;142                            flash_1_once_flag = 1;
0001b8  49a1              LDR      r1,|L2.1088|
0001ba  6008              STR      r0,[r1,#0]  ; flash_1_once_flag
;;;143    
;;;144                            Alarm_backPC.Alarm_paramet[0] = 0xFE;	//成功初始化并保存在flash
0001bc  20fe              MOVS     r0,#0xfe
0001be  499c              LDR      r1,|L2.1072|
0001c0  7048              STRB     r0,[r1,#1]
;;;145                            Alarm_backPC.Alarm_paramet[1] = 0x00;
0001c2  2100              MOVS     r1,#0
0001c4  489a              LDR      r0,|L2.1072|
0001c6  7081              STRB     r1,[r0,#2]
;;;146                            Flash_to_AcceptAPP();
0001c8  f7fffffe          BL       Flash_to_AcceptAPP
;;;147    
;;;148                            if( System.Voltage > 40.0 )
0001cc  488f              LDR      r0,|L2.1036|
0001ce  6f40              LDR      r0,[r0,#0x74]  ; System
0001d0  9003              STR      r0,[sp,#0xc]
0001d2  f7fffffe          BL       __aeabi_f2d
0001d6  2200              MOVS     r2,#0
0001d8  4b8d              LDR      r3,|L2.1040|
0001da  e9cd0104          STRD     r0,r1,[sp,#0x10]
0001de  f7fffffe          BL       __aeabi_cdrcmple
0001e2  d203              BCS      |L2.492|
;;;149                            {
;;;150                                System.open = 0x02;
0001e4  2002              MOVS     r0,#2
0001e6  4989              LDR      r1,|L2.1036|
0001e8  7308              STRB     r0,[r1,#0xc]
0001ea  e002              B        |L2.498|
                  |L2.492|
;;;151                            }
;;;152                            else
;;;153                            {
;;;154                                System.open = 0x00;
0001ec  2000              MOVS     r0,#0
0001ee  4987              LDR      r1,|L2.1036|
0001f0  7308              STRB     r0,[r1,#0xc]
                  |L2.498|
;;;155                            }
;;;156    						
;;;157    												if( get_history_alarm() == 0x01 )
0001f2  f7fffffe          BL       get_history_alarm
0001f6  2801              CMP      r0,#1
0001f8  d103              BNE      |L2.514|
;;;158    												{
;;;159    													System.status = SYSTEM_ALARM;
0001fa  2011              MOVS     r0,#0x11
0001fc  4983              LDR      r1,|L2.1036|
0001fe  72c8              STRB     r0,[r1,#0xb]
000200  e009              B        |L2.534|
                  |L2.514|
;;;160    												}
;;;161    												else	if( System.open == 0x02 )
000202  4882              LDR      r0,|L2.1036|
000204  7b00              LDRB     r0,[r0,#0xc]  ; System
000206  2802              CMP      r0,#2
000208  d102              BNE      |L2.528|
;;;162    												{
;;;163    													System.status = SYSTEM_STANDBY;		//查询时，开机了，不一定是待机，有可能是发射/增减功率/扫频等。
00020a  4980              LDR      r1,|L2.1036|
00020c  72c8              STRB     r0,[r1,#0xb]
00020e  e002              B        |L2.534|
                  |L2.528|
;;;164    												}
;;;165    												else
;;;166    												{
;;;167    													System.status = SYSTEM_SHUTDOWN;
000210  2004              MOVS     r0,#4
000212  497e              LDR      r1,|L2.1036|
000214  72c8              STRB     r0,[r1,#0xb]
                  |L2.534|
;;;168    												}
;;;169                        }
;;;170    										
;;;171                        Send_PC(g_fuc_codToPC);
000216  4887              LDR      r0,|L2.1076|
000218  f7fffffe          BL       Send_PC
00021c  f001be46          B.W      |L2.7852|
                  |L2.544|
;;;172                    }
;;;173                    else if(g_fuc_cod[0]==0x02&&g_fuc_cod[1]==0x01)			//查询
000220  487e              LDR      r0,|L2.1052|
000222  7800              LDRB     r0,[r0,#0]  ; g_fuc_cod
000224  2802              CMP      r0,#2
                  |L2.550|
000226  d17c              BNE      |L2.802|
000228  487c              LDR      r0,|L2.1052|
00022a  7840              LDRB     r0,[r0,#1]  ; g_fuc_cod
00022c  2801              CMP      r0,#1
00022e  d1fa              BNE      |L2.550|
;;;174                    {
;;;175                        g_fuc_codToPC[0]=0x02;
000230  2002              MOVS     r0,#2
000232  4980              LDR      r1,|L2.1076|
000234  7008              STRB     r0,[r1,#0]
;;;176                        g_fuc_codToPC[1]=0x02;			
000236  7048              STRB     r0,[r1,#1]
;;;177    				 	          g_stamp_distance = g_inquire_stamp - RTC_GetCounter();	//获取本地时间与服务器时间的差值
000238  f7fffffe          BL       RTC_GetCounter
00023c  4981              LDR      r1,|L2.1092|
00023e  6809              LDR      r1,[r1,#0]  ; g_inquire_stamp
000240  1a08              SUBS     r0,r1,r0
000242  497d              LDR      r1,|L2.1080|
000244  6008              STR      r0,[r1,#0]  ; g_stamp_distance
;;;178    
;;;179                        System.time_update_flag = 0x01;//更新了时间标志位
000246  2001              MOVS     r0,#1
000248  4970              LDR      r1,|L2.1036|
00024a  7288              STRB     r0,[r1,#0xa]
;;;180    
;;;181                        //Work_paraBack清零
;;;182                        Work_paraBack.Transmitte_id[0]=System.CAN_ID[0];	//CAN_ID
00024c  4608              MOV      r0,r1
00024e  7800              LDRB     r0,[r0,#0]  ; System
000250  497d              LDR      r1,|L2.1096|
000252  7008              STRB     r0,[r1,#0]
;;;183                        Work_paraBack.Mode[0]=0;
000254  2000              MOVS     r0,#0
000256  7088              STRB     r0,[r1,#2]
;;;184                        memset(Work_paraBack.Freq,0,12);
000258  1d88              ADDS     r0,r1,#6
00025a  2100              MOVS     r1,#0
00025c  6001              STR      r1,[r0,#0]  ; Work_paraBack
00025e  6041              STR      r1,[r0,#4]  ; Work_paraBack
000260  6081              STR      r1,[r0,#8]  ; Work_paraBack
;;;185                        Work_paraBack.Power_45_voltage[0]=0;
000262  2000              MOVS     r0,#0
000264  4978              LDR      r1,|L2.1096|
000266  f8c10021          STR      r0,[r1,#0x21]  ; Work_paraBack
;;;186                        Work_paraBack.Power_45_intensity[0]=0;
00026a  f8c1001d          STR      r0,[r1,#0x1d]  ; Work_paraBack
;;;187                        memset(Work_paraBack.Freq,0,12);			//频率先清零，后赋值
00026e  1d88              ADDS     r0,r1,#6
000270  2100              MOVS     r1,#0
000272  6001              STR      r1,[r0,#0]  ; Work_paraBack
000274  6041              STR      r1,[r0,#4]  ; Work_paraBack
000276  6081              STR      r1,[r0,#8]  ; Work_paraBack
;;;188                        Work_paraBack.Forward_power[0] = 0.0;		//功率先清零，后赋值
000278  2000              MOVS     r0,#0
00027a  4973              LDR      r1,|L2.1096|
00027c  f8c10015          STR      r0,[r1,#0x15]  ; Work_paraBack
;;;189                        Work_paraBack.Reverse_power[0] = 0.0;
000280  f8c10019          STR      r0,[r1,#0x19]  ; Work_paraBack
;;;190                        Work_paraBack.emission[0]=0x00;
000284  f881002d          STRB     r0,[r1,#0x2d]
;;;191    									
;;;192    										memset(Work_paraBack.Alarm_Reservation,0,2);
000288  4608              MOV      r0,r1
00028a  2100              MOVS     r1,#0
00028c  8601              STRH     r1,[r0,#0x30]
;;;193    										memset(Work_paraBack.System_Version,0,20);
00028e  2114              MOVS     r1,#0x14
000290  3032              ADDS     r0,r0,#0x32
000292  f7fffffe          BL       __aeabi_memclr
;;;194    										Work_paraBack.Divider[0]=0xFF;
000296  20ff              MOVS     r0,#0xff
000298  496b              LDR      r1,|L2.1096|
00029a  f8810046          STRB     r0,[r1,#0x46]
;;;195    									  Work_paraBack.Control_Model[0]=0;
00029e  2000              MOVS     r0,#0
0002a0  f8810047          STRB     r0,[r1,#0x47]
;;;196    									  Work_paraBack.Frequency_band_value[0]=0;
0002a4  f8810048          STRB     r0,[r1,#0x48]
;;;197    										Work_paraBack.Attenuation[0]=0;
0002a8  f8810049          STRB     r0,[r1,#0x49]
;;;198    										memset(Work_paraBack.Reservation,0,2);																
0002ac  4608              MOV      r0,r1
0002ae  2100              MOVS     r1,#0
0002b0  f8a0104a          STRH     r1,[r0,#0x4a]
;;;199    										memset(Work_paraBack.Bj_Electricity_1,0,4);
0002b4  64c1              STR      r1,[r0,#0x4c]  ; Work_paraBack
;;;200    										memset(Work_paraBack.Bj_Electricity_2,0,4);
0002b6  f8c01056          STR      r1,[r0,#0x56]  ; Work_paraBack
;;;201    										memset(Work_paraBack.Bj_Electricity_3,0,4);
0002ba  6601              STR      r1,[r0,#0x60]  ; Work_paraBack
;;;202    										memset(Work_paraBack.Bj_Electricity_4,0,4);
0002bc  f8c0106a          STR      r1,[r0,#0x6a]  ; Work_paraBack
;;;203    										Work_paraBack.Amplifier_Temperature_1[0]=0;
0002c0  2000              MOVS     r0,#0
0002c2  4961              LDR      r1,|L2.1096|
0002c4  f8a10054          STRH     r0,[r1,#0x54]
;;;204    										Work_paraBack.Amplifier_Temperature_2[0]=0;
0002c8  f8a1005e          STRH     r0,[r1,#0x5e]
;;;205    										Work_paraBack.Amplifier_Temperature_3[0]=0;
0002cc  f8a10068          STRH     r0,[r1,#0x68]
;;;206    										Work_paraBack.Amplifier_Temperature_4[0]=0;
0002d0  f8a10072          STRH     r0,[r1,#0x72]
;;;207    										Work_paraBack.System_Version[16]=System.Model[0];		//程序默认值，不改变
0002d4  484d              LDR      r0,|L2.1036|
0002d6  7841              LDRB     r1,[r0,#1]  ; System
0002d8  485b              LDR      r0,|L2.1096|
0002da  f8801042          STRB     r1,[r0,#0x42]
;;;208    									
;;;209                        Work_paraBack.Channel[0] = PC_Cmd.channel[0];	//发射的信道		(旧机器有3信道，新机器只有1个信道，兼容，直接原样返回)
0002de  485b              LDR      r0,|L2.1100|
0002e0  7940              LDRB     r0,[r0,#5]  ; PC_Cmd
0002e2  4959              LDR      r1,|L2.1096|
0002e4  70c8              STRB     r0,[r1,#3]
;;;210                        Work_paraBack.Channel[1] = PC_Cmd.channel[1];
0002e6  4859              LDR      r0,|L2.1100|
0002e8  7981              LDRB     r1,[r0,#6]
0002ea  4857              LDR      r0,|L2.1096|
0002ec  7101              STRB     r1,[r0,#4]
;;;211                        Work_paraBack.Channel[2] = PC_Cmd.channel[2];
0002ee  4857              LDR      r0,|L2.1100|
0002f0  79c1              LDRB     r1,[r0,#7]
0002f2  4855              LDR      r0,|L2.1096|
0002f4  7141              STRB     r1,[r0,#5]
;;;212    
;;;213                        Work_paraBack.Power_grade[0] = PC_Cmd.power[0];	//发射的功率等级	(旧机器有3功率等级，新机器只有1个功率等级，兼容，直接原样返回)
0002f6  4855              LDR      r0,|L2.1100|
0002f8  7880              LDRB     r0,[r0,#2]  ; PC_Cmd
0002fa  4953              LDR      r1,|L2.1096|
0002fc  7488              STRB     r0,[r1,#0x12]
;;;214                        Work_paraBack.Power_grade[1] = PC_Cmd.power[1];
0002fe  4853              LDR      r0,|L2.1100|
000300  78c1              LDRB     r1,[r0,#3]
000302  4851              LDR      r0,|L2.1096|
000304  74c1              STRB     r1,[r0,#0x13]
;;;215                        Work_paraBack.Power_grade[2] = PC_Cmd.power[2];
000306  4851              LDR      r0,|L2.1100|
000308  7901              LDRB     r1,[r0,#4]
00030a  484f              LDR      r0,|L2.1096|
00030c  7501              STRB     r1,[r0,#0x14]
;;;216    										
;;;217    										Work_paraBack.Control_Model[0]=System.Control_Model;   //0自动/1手动
00030e  483f              LDR      r0,|L2.1036|
000310  f890004c          LDRB     r0,[r0,#0x4c]  ; System
000314  494c              LDR      r1,|L2.1096|
000316  f8810047          STRB     r0,[r1,#0x47]
;;;218    										Work_paraBack.Frequency_band_value[0]=System.Frequency_band_value;   //频段值
00031a  483c              LDR      r0,|L2.1036|
00031c  f890005a          LDRB     r0,[r0,#0x5a]  ; System
000320  e000              B        |L2.804|
                  |L2.802|
000322  e3fd              B        |L2.2848|
                  |L2.804|
000324  f8810048          STRB     r0,[r1,#0x48]
;;;219    										Work_paraBack.Attenuation[0]=System.Attenuation;  //衰减值
000328  4838              LDR      r0,|L2.1036|
00032a  f8900059          LDRB     r0,[r0,#0x59]  ; System
00032e  f8810049          STRB     r0,[r1,#0x49]
;;;220    										
;;;221    										for(uint8_t n=0;n<4;n++)
000332  2000              MOVS     r0,#0
000334  9005              STR      r0,[sp,#0x14]
000336  e03f              B        |L2.952|
                  |L2.824|
;;;222    										{
;;;223    											Work_paraBack.Bj_Electricity_1[n]=Convert_byte_order_16(System.Bj_Electricity_1[n]);  
000338  4834              LDR      r0,|L2.1036|
00033a  3080              ADDS     r0,r0,#0x80
00033c  9905              LDR      r1,[sp,#0x14]
00033e  eb000041          ADD      r0,r0,r1,LSL #1
000342  8800              LDRH     r0,[r0,#0]
000344  9004              STR      r0,[sp,#0x10]
000346  f7fffffe          BL       Convert_byte_order_16
00034a  493f              LDR      r1,|L2.1096|
00034c  314c              ADDS     r1,r1,#0x4c
00034e  9a05              LDR      r2,[sp,#0x14]
000350  eb010142          ADD      r1,r1,r2,LSL #1
000354  8008              STRH     r0,[r1,#0]
;;;224    											Work_paraBack.Bj_Electricity_2[n]=Convert_byte_order_16(System.Bj_Electricity_2[n]);
000356  482d              LDR      r0,|L2.1036|
000358  3088              ADDS     r0,r0,#0x88
00035a  9905              LDR      r1,[sp,#0x14]
00035c  eb000041          ADD      r0,r0,r1,LSL #1
000360  8800              LDRH     r0,[r0,#0]
000362  9004              STR      r0,[sp,#0x10]
000364  f7fffffe          BL       Convert_byte_order_16
000368  4937              LDR      r1,|L2.1096|
00036a  3156              ADDS     r1,r1,#0x56
00036c  9a05              LDR      r2,[sp,#0x14]
00036e  eb010142          ADD      r1,r1,r2,LSL #1
000372  8008              STRH     r0,[r1,#0]
;;;225    											Work_paraBack.Bj_Electricity_3[n]=Convert_byte_order_16(System.Bj_Electricity_3[n]);
000374  4825              LDR      r0,|L2.1036|
000376  3090              ADDS     r0,r0,#0x90
000378  9905              LDR      r1,[sp,#0x14]
00037a  eb000041          ADD      r0,r0,r1,LSL #1
00037e  8800              LDRH     r0,[r0,#0]
000380  9004              STR      r0,[sp,#0x10]
000382  f7fffffe          BL       Convert_byte_order_16
000386  4930              LDR      r1,|L2.1096|
000388  3160              ADDS     r1,r1,#0x60
00038a  9a05              LDR      r2,[sp,#0x14]
00038c  eb010142          ADD      r1,r1,r2,LSL #1
000390  8008              STRH     r0,[r1,#0]
;;;226    											Work_paraBack.Bj_Electricity_4[n]=Convert_byte_order_16(System.Bj_Electricity_4[n]);
000392  481e              LDR      r0,|L2.1036|
000394  3098              ADDS     r0,r0,#0x98
000396  9905              LDR      r1,[sp,#0x14]
000398  eb000041          ADD      r0,r0,r1,LSL #1
00039c  8800              LDRH     r0,[r0,#0]
00039e  9004              STR      r0,[sp,#0x10]
0003a0  f7fffffe          BL       Convert_byte_order_16
0003a4  4928              LDR      r1,|L2.1096|
0003a6  316a              ADDS     r1,r1,#0x6a
0003a8  9a05              LDR      r2,[sp,#0x14]
0003aa  eb010142          ADD      r1,r1,r2,LSL #1
0003ae  8008              STRH     r0,[r1,#0]
0003b0  9805              LDR      r0,[sp,#0x14]         ;221
0003b2  1c40              ADDS     r0,r0,#1              ;221
0003b4  b2c0              UXTB     r0,r0                 ;221
0003b6  9005              STR      r0,[sp,#0x14]         ;221
                  |L2.952|
0003b8  9805              LDR      r0,[sp,#0x14]         ;221
0003ba  2804              CMP      r0,#4                 ;221
0003bc  dbbc              BLT      |L2.824|
;;;227    										}
;;;228    										Work_paraBack.Amplifier_Temperature_1[0]=Convert_byte_order_16(System.Amplifier_Temperature[0]);
0003be  4813              LDR      r0,|L2.1036|
0003c0  f8b00050          LDRH     r0,[r0,#0x50]  ; System
0003c4  9005              STR      r0,[sp,#0x14]
0003c6  f7fffffe          BL       Convert_byte_order_16
0003ca  491f              LDR      r1,|L2.1096|
0003cc  f8a10054          STRH     r0,[r1,#0x54]
;;;229    										Work_paraBack.Amplifier_Temperature_2[0]=Convert_byte_order_16(System.Amplifier_Temperature[1]);
0003d0  480e              LDR      r0,|L2.1036|
0003d2  f8b00052          LDRH     r0,[r0,#0x52]
0003d6  9005              STR      r0,[sp,#0x14]
0003d8  f7fffffe          BL       Convert_byte_order_16
0003dc  491a              LDR      r1,|L2.1096|
0003de  f8a1005e          STRH     r0,[r1,#0x5e]
;;;230    										Work_paraBack.Amplifier_Temperature_3[0]=Convert_byte_order_16(System.Amplifier_Temperature[2]);
0003e2  480a              LDR      r0,|L2.1036|
0003e4  f8b00054          LDRH     r0,[r0,#0x54]
0003e8  9005              STR      r0,[sp,#0x14]
0003ea  f7fffffe          BL       Convert_byte_order_16
0003ee  4916              LDR      r1,|L2.1096|
0003f0  f8a10068          STRH     r0,[r1,#0x68]
;;;231    										Work_paraBack.Amplifier_Temperature_4[0]=Convert_byte_order_16(System.Amplifier_Temperature[3]);
0003f4  4805              LDR      r0,|L2.1036|
0003f6  f8b00056          LDRH     r0,[r0,#0x56]
0003fa  9005              STR      r0,[sp,#0x14]
0003fc  f7fffffe          BL       Convert_byte_order_16
000400  4911              LDR      r1,|L2.1096|
000402  f8a10072          STRH     r0,[r1,#0x72]
;;;232    										
;;;233                        set_alarm_bit();  //置位报警标志位 
000406  e023              B        |L2.1104|
                  |L2.1032|
                          DCD      Alarm
                  |L2.1036|
                          DCD      System
                  |L2.1040|
                          DCD      0x40440000
                  |L2.1044|
                          DCD      W5500_rx_buf_len
                  |L2.1048|
                          DCD      RxBuf_FromPC
                  |L2.1052|
                          DCD      g_fuc_cod
                  |L2.1056|
                          DCD      Monitor
                  |L2.1060|
                          DCD      Run_Diagram_data
                  |L2.1064|
                          DCD      flash3_Save
                  |L2.1068|
                          DCD      Alarm_threshold
                  |L2.1072|
                          DCD      Alarm_backPC
                  |L2.1076|
                          DCD      g_fuc_codToPC
                  |L2.1080|
                          DCD      g_stamp_distance
                  |L2.1084|
                          DCD      set_time
                  |L2.1088|
                          DCD      flash_1_once_flag
                  |L2.1092|
                          DCD      g_inquire_stamp
                  |L2.1096|
                          DCD      Work_paraBack
                  |L2.1100|
                          DCD      PC_Cmd
                  |L2.1104|
000450  f7fffffe          BL       set_alarm_bit
;;;234                        Work_paraBack.current_alarm_state[0] = Alarm_historyBack.alarm_history[0];
000454  48f8              LDR      r0,|L2.2104|
000456  7840              LDRB     r0,[r0,#1]  ; Alarm_historyBack
000458  49f8              LDR      r1,|L2.2108|
00045a  f881002e          STRB     r0,[r1,#0x2e]
;;;235                        Work_paraBack.current_alarm_state[1] = Alarm_historyBack.alarm_history[1];
00045e  48f6              LDR      r0,|L2.2104|
000460  7881              LDRB     r1,[r0,#2]
000462  48f6              LDR      r0,|L2.2108|
000464  f880102f          STRB     r1,[r0,#0x2f]
;;;236    
;;;237                        Work_paraBack.temp[0]=Temperature_Humidity.Temperature;		//温度
000468  48f5              LDR      r0,|L2.2112|
00046a  6800              LDR      r0,[r0,#0]  ; Temperature_Humidity
00046c  49f3              LDR      r1,|L2.2108|
00046e  f8c10025          STR      r0,[r1,#0x25]  ; Work_paraBack
;;;238                        Work_paraBack.humidity[0]=Temperature_Humidity.Humidity;	//湿度
000472  48f3              LDR      r0,|L2.2112|
000474  6840              LDR      r0,[r0,#4]  ; Temperature_Humidity
000476  f8c10029          STR      r0,[r1,#0x29]  ; Work_paraBack
;;;239    
;;;240    
;;;241                        if(System.status == SYSTEM_UNINITIALIZE )			//未初始化状态
00047a  48f2              LDR      r0,|L2.2116|
00047c  7ac0              LDRB     r0,[r0,#0xb]  ; System
00047e  2810              CMP      r0,#0x10
000480  d177              BNE      |L2.1394|
;;;242                        {
;;;243                            Work_paraBack.Trans_current_state[0] = SYSTEM_UNINITIALIZE;
000482  7048              STRB     r0,[r1,#1]
;;;244                            Work_paraBack.Power_45_voltage[0]	 = System.Voltage;
000484  48ef              LDR      r0,|L2.2116|
000486  6f40              LDR      r0,[r0,#0x74]  ; System
000488  f8c10021          STR      r0,[r1,#0x21]  ; Work_paraBack
;;;245                            Work_paraBack.Power_45_intensity[0]	 = 0;
00048c  2000              MOVS     r0,#0
00048e  f8c1001d          STR      r0,[r1,#0x1d]  ; Work_paraBack
;;;246    												Work_paraBack.Amplifier_Temperature_1[0]=Convert_byte_order_16(System.Amplifier_Temperature[0]);
000492  48ec              LDR      r0,|L2.2116|
000494  f8b00050          LDRH     r0,[r0,#0x50]  ; System
000498  9005              STR      r0,[sp,#0x14]
00049a  f7fffffe          BL       Convert_byte_order_16
00049e  49e7              LDR      r1,|L2.2108|
0004a0  f8a10054          STRH     r0,[r1,#0x54]
;;;247    												Work_paraBack.Amplifier_Temperature_2[0]=Convert_byte_order_16(System.Amplifier_Temperature[1]);
0004a4  48e7              LDR      r0,|L2.2116|
0004a6  f8b00052          LDRH     r0,[r0,#0x52]
0004aa  9005              STR      r0,[sp,#0x14]
0004ac  f7fffffe          BL       Convert_byte_order_16
0004b0  49e2              LDR      r1,|L2.2108|
0004b2  f8a1005e          STRH     r0,[r1,#0x5e]
;;;248    												Work_paraBack.Amplifier_Temperature_3[0]=Convert_byte_order_16(System.Amplifier_Temperature[2]);
0004b6  48e3              LDR      r0,|L2.2116|
0004b8  f8b00054          LDRH     r0,[r0,#0x54]
0004bc  9005              STR      r0,[sp,#0x14]
0004be  f7fffffe          BL       Convert_byte_order_16
0004c2  49de              LDR      r1,|L2.2108|
0004c4  f8a10068          STRH     r0,[r1,#0x68]
;;;249    												Work_paraBack.Amplifier_Temperature_4[0]=Convert_byte_order_16(System.Amplifier_Temperature[3]);
0004c8  48de              LDR      r0,|L2.2116|
0004ca  f8b00056          LDRH     r0,[r0,#0x56]
0004ce  9005              STR      r0,[sp,#0x14]
0004d0  f7fffffe          BL       Convert_byte_order_16
0004d4  49d9              LDR      r1,|L2.2108|
0004d6  f8a10072          STRH     r0,[r1,#0x72]
;;;250    			
;;;251    										    for(uint8_t n=0;n<4;n++)
0004da  2000              MOVS     r0,#0
0004dc  9005              STR      r0,[sp,#0x14]
0004de  e03f              B        |L2.1376|
                  |L2.1248|
;;;252    												{
;;;253    													Work_paraBack.Bj_Electricity_1[n]=Convert_byte_order_16(System.Bj_Electricity_1[n]);
0004e0  48d8              LDR      r0,|L2.2116|
0004e2  3080              ADDS     r0,r0,#0x80
0004e4  9905              LDR      r1,[sp,#0x14]
0004e6  eb000041          ADD      r0,r0,r1,LSL #1
0004ea  8800              LDRH     r0,[r0,#0]
0004ec  9004              STR      r0,[sp,#0x10]
0004ee  f7fffffe          BL       Convert_byte_order_16
0004f2  49d2              LDR      r1,|L2.2108|
0004f4  314c              ADDS     r1,r1,#0x4c
0004f6  9a05              LDR      r2,[sp,#0x14]
0004f8  eb010142          ADD      r1,r1,r2,LSL #1
0004fc  8008              STRH     r0,[r1,#0]
;;;254    													Work_paraBack.Bj_Electricity_2[n]=Convert_byte_order_16(System.Bj_Electricity_2[n]);
0004fe  48d1              LDR      r0,|L2.2116|
000500  3088              ADDS     r0,r0,#0x88
000502  9905              LDR      r1,[sp,#0x14]
000504  eb000041          ADD      r0,r0,r1,LSL #1
000508  8800              LDRH     r0,[r0,#0]
00050a  9004              STR      r0,[sp,#0x10]
00050c  f7fffffe          BL       Convert_byte_order_16
000510  49ca              LDR      r1,|L2.2108|
000512  3156              ADDS     r1,r1,#0x56
000514  9a05              LDR      r2,[sp,#0x14]
000516  eb010142          ADD      r1,r1,r2,LSL #1
00051a  8008              STRH     r0,[r1,#0]
;;;255    													Work_paraBack.Bj_Electricity_3[n]=Convert_byte_order_16(System.Bj_Electricity_3[n]);
00051c  48c9              LDR      r0,|L2.2116|
00051e  3090              ADDS     r0,r0,#0x90
000520  9905              LDR      r1,[sp,#0x14]
000522  eb000041          ADD      r0,r0,r1,LSL #1
000526  8800              LDRH     r0,[r0,#0]
000528  9004              STR      r0,[sp,#0x10]
00052a  f7fffffe          BL       Convert_byte_order_16
00052e  49c3              LDR      r1,|L2.2108|
000530  3160              ADDS     r1,r1,#0x60
000532  9a05              LDR      r2,[sp,#0x14]
000534  eb010142          ADD      r1,r1,r2,LSL #1
000538  8008              STRH     r0,[r1,#0]
;;;256    													Work_paraBack.Bj_Electricity_4[n]=Convert_byte_order_16(System.Bj_Electricity_4[n]);
00053a  48c2              LDR      r0,|L2.2116|
00053c  3098              ADDS     r0,r0,#0x98
00053e  9905              LDR      r1,[sp,#0x14]
000540  eb000041          ADD      r0,r0,r1,LSL #1
000544  8800              LDRH     r0,[r0,#0]
000546  9004              STR      r0,[sp,#0x10]
000548  f7fffffe          BL       Convert_byte_order_16
00054c  49bb              LDR      r1,|L2.2108|
00054e  316a              ADDS     r1,r1,#0x6a
000550  9a05              LDR      r2,[sp,#0x14]
000552  eb010142          ADD      r1,r1,r2,LSL #1
000556  8008              STRH     r0,[r1,#0]
000558  9805              LDR      r0,[sp,#0x14]         ;251
00055a  1c40              ADDS     r0,r0,#1              ;251
00055c  b2c0              UXTB     r0,r0                 ;251
00055e  9005              STR      r0,[sp,#0x14]         ;251
                  |L2.1376|
000560  9805              LDR      r0,[sp,#0x14]         ;251
000562  2804              CMP      r0,#4                 ;251
000564  dbbc              BLT      |L2.1248|
;;;257    												}
;;;258    												Trans_printf(" 发射机处于未初始化状态 \n");
000566  e000              B        |L2.1386|
000568  e003              B        |L2.1394|
                  |L2.1386|
00056a  a0b7              ADR      r0,|L2.2120|
00056c  f7fffffe          BL       Trans_printf
000570  e38e              B        |L2.3216|
                  |L2.1394|
;;;259                        }
;;;260                        else	if( (Alarm.emission==0x01) || (Alarm.no_respond==0x01) || (Alarm.no_power==0x01) ||(Alarm.power_cataclysm==1) )	//激励器自身报警，无应答报警、无功率报警
000572  48bc              LDR      r0,|L2.2148|
000574  7840              LDRB     r0,[r0,#1]  ; Alarm
000576  2801              CMP      r0,#1
000578  d00b              BEQ      |L2.1426|
00057a  48ba              LDR      r0,|L2.2148|
00057c  78c0              LDRB     r0,[r0,#3]  ; Alarm
00057e  2801              CMP      r0,#1
000580  d007              BEQ      |L2.1426|
000582  48b8              LDR      r0,|L2.2148|
000584  7cc0              LDRB     r0,[r0,#0x13]  ; Alarm
000586  2801              CMP      r0,#1
000588  d003              BEQ      |L2.1426|
00058a  48b6              LDR      r0,|L2.2148|
00058c  7d40              LDRB     r0,[r0,#0x15]  ; Alarm
00058e  2801              CMP      r0,#1
000590  d17e              BNE      |L2.1680|
                  |L2.1426|
;;;261                        {
;;;262                            //激励器自身报警，无应答报警，无功率报警，功率骤变属于严重报警，查询时马上返回，其他报警则先返回操作失败，回到待机/发射/报警状态，等待查询时再报警
;;;263    
;;;264                            Work_paraBack.Trans_current_state[0]=SYSTEM_ALARM;			//当前是报警状态
000592  2011              MOVS     r0,#0x11
000594  49a9              LDR      r1,|L2.2108|
000596  7048              STRB     r0,[r1,#1]
;;;265                            Work_paraBack.Mode[0] = System.INQUIRE_Mode;					//模式
000598  48aa              LDR      r0,|L2.2116|
00059a  7e00              LDRB     r0,[r0,#0x18]  ; System
00059c  7088              STRB     r0,[r1,#2]
;;;266    
;;;267    //                        freq_str_to_hex(System.freq1,	Work_paraBack.Freq);		//频率
;;;268    //											  freq_str_to_hex(System.freq2,	Work_paraBack.Freq+4);
;;;269    //                        freq_str_to_hex(System.freq3,	Work_paraBack.Freq+8);
;;;270    											  StrToHex(Work_paraBack.Freq, System.freq1, 4); //remarks : 将字符串转化为16进制数
00059e  2204              MOVS     r2,#4
0005a0  49a8              LDR      r1,|L2.2116|
0005a2  311e              ADDS     r1,r1,#0x1e
0005a4  48a5              LDR      r0,|L2.2108|
0005a6  1d80              ADDS     r0,r0,#6
0005a8  f7fffffe          BL       StrToHex
;;;271                            StrToHex(Work_paraBack.Freq+4, System.freq2, 4); //remarks : 将字符串转化为16进制数
0005ac  2204              MOVS     r2,#4
0005ae  49a5              LDR      r1,|L2.2116|
0005b0  3128              ADDS     r1,r1,#0x28
0005b2  48a2              LDR      r0,|L2.2108|
0005b4  300a              ADDS     r0,r0,#0xa
0005b6  f7fffffe          BL       StrToHex
;;;272    											  StrToHex(Work_paraBack.Freq+8, System.freq3, 4); //remarks : 将字符串转化为16进制数
0005ba  2204              MOVS     r2,#4
0005bc  49a1              LDR      r1,|L2.2116|
0005be  3132              ADDS     r1,r1,#0x32
0005c0  489e              LDR      r0,|L2.2108|
0005c2  300e              ADDS     r0,r0,#0xe
0005c4  f7fffffe          BL       StrToHex
;;;273    
;;;274                            Work_paraBack.Forward_power[0] = (float)System.Forward_Power;
0005c8  489e              LDR      r0,|L2.2116|
0005ca  6ec0              LDR      r0,[r0,#0x6c]  ; System
0005cc  499b              LDR      r1,|L2.2108|
0005ce  f8c10015          STR      r0,[r1,#0x15]  ; Work_paraBack
;;;275                            Work_paraBack.Reverse_power[0] = (float)System.Reverse_Power;
0005d2  489c              LDR      r0,|L2.2116|
0005d4  6f00              LDR      r0,[r0,#0x70]  ; System
0005d6  f8c10019          STR      r0,[r1,#0x19]  ; Work_paraBack
;;;276    
;;;277                            Work_paraBack.Power_45_voltage[0]	= System.Voltage;
0005da  489a              LDR      r0,|L2.2116|
0005dc  6f40              LDR      r0,[r0,#0x74]  ; System
0005de  f8c10021          STR      r0,[r1,#0x21]  ; Work_paraBack
;;;278                            Work_paraBack.Power_45_intensity[0]	= 0;
0005e2  2000              MOVS     r0,#0
0005e4  f8c1001d          STR      r0,[r1,#0x1d]  ; Work_paraBack
;;;279    												for(uint8_t n=0;n<4;n++)
0005e8  9005              STR      r0,[sp,#0x14]
0005ea  e03f              B        |L2.1644|
                  |L2.1516|
;;;280    												{
;;;281    													Work_paraBack.Bj_Electricity_1[n]=Convert_byte_order_16(System.Bj_Electricity_1[n]);
0005ec  4895              LDR      r0,|L2.2116|
0005ee  3080              ADDS     r0,r0,#0x80
0005f0  9905              LDR      r1,[sp,#0x14]
0005f2  eb000041          ADD      r0,r0,r1,LSL #1
0005f6  8800              LDRH     r0,[r0,#0]
0005f8  9004              STR      r0,[sp,#0x10]
0005fa  f7fffffe          BL       Convert_byte_order_16
0005fe  498f              LDR      r1,|L2.2108|
000600  314c              ADDS     r1,r1,#0x4c
000602  9a05              LDR      r2,[sp,#0x14]
000604  eb010142          ADD      r1,r1,r2,LSL #1
000608  8008              STRH     r0,[r1,#0]
;;;282    													Work_paraBack.Bj_Electricity_2[n]=Convert_byte_order_16(System.Bj_Electricity_2[n]);
00060a  488e              LDR      r0,|L2.2116|
00060c  3088              ADDS     r0,r0,#0x88
00060e  9905              LDR      r1,[sp,#0x14]
000610  eb000041          ADD      r0,r0,r1,LSL #1
000614  8800              LDRH     r0,[r0,#0]
000616  9004              STR      r0,[sp,#0x10]
000618  f7fffffe          BL       Convert_byte_order_16
00061c  4987              LDR      r1,|L2.2108|
00061e  3156              ADDS     r1,r1,#0x56
000620  9a05              LDR      r2,[sp,#0x14]
000622  eb010142          ADD      r1,r1,r2,LSL #1
000626  8008              STRH     r0,[r1,#0]
;;;283    													Work_paraBack.Bj_Electricity_3[n]=Convert_byte_order_16(System.Bj_Electricity_3[n]);
000628  4886              LDR      r0,|L2.2116|
00062a  3090              ADDS     r0,r0,#0x90
00062c  9905              LDR      r1,[sp,#0x14]
00062e  eb000041          ADD      r0,r0,r1,LSL #1
000632  8800              LDRH     r0,[r0,#0]
000634  9004              STR      r0,[sp,#0x10]
000636  f7fffffe          BL       Convert_byte_order_16
00063a  4980              LDR      r1,|L2.2108|
00063c  3160              ADDS     r1,r1,#0x60
00063e  9a05              LDR      r2,[sp,#0x14]
000640  eb010142          ADD      r1,r1,r2,LSL #1
000644  8008              STRH     r0,[r1,#0]
;;;284    													Work_paraBack.Bj_Electricity_4[n]=Convert_byte_order_16(System.Bj_Electricity_4[n]);
000646  487f              LDR      r0,|L2.2116|
000648  3098              ADDS     r0,r0,#0x98
00064a  9905              LDR      r1,[sp,#0x14]
00064c  eb000041          ADD      r0,r0,r1,LSL #1
000650  8800              LDRH     r0,[r0,#0]
000652  9004              STR      r0,[sp,#0x10]
000654  f7fffffe          BL       Convert_byte_order_16
000658  4978              LDR      r1,|L2.2108|
00065a  316a              ADDS     r1,r1,#0x6a
00065c  9a05              LDR      r2,[sp,#0x14]
00065e  eb010142          ADD      r1,r1,r2,LSL #1
000662  8008              STRH     r0,[r1,#0]
000664  9805              LDR      r0,[sp,#0x14]         ;279
000666  1c40              ADDS     r0,r0,#1              ;279
000668  b2c0              UXTB     r0,r0                 ;279
00066a  9005              STR      r0,[sp,#0x14]         ;279
                  |L2.1644|
00066c  9805              LDR      r0,[sp,#0x14]         ;279
00066e  2804              CMP      r0,#4                 ;279
000670  dbbc              BLT      |L2.1516|
;;;285    												}
;;;286                            Work_paraBack.emission[0] = (System.emission&0x01)|(System.Open_Close&0x02<<1);		//待测试
000672  4874              LDR      r0,|L2.2116|
000674  7d80              LDRB     r0,[r0,#0x16]  ; System
000676  f0000001          AND      r0,r0,#1
00067a  4972              LDR      r1,|L2.2116|
00067c  f89110a7          LDRB     r1,[r1,#0xa7]  ; System
000680  f0010104          AND      r1,r1,#4
000684  4308              ORRS     r0,r0,r1
000686  496d              LDR      r1,|L2.2108|
000688  f881002d          STRB     r0,[r1,#0x2d]
;;;287    
;;;288                            if( System.emission == 0x01 )
00068c  486d              LDR      r0,|L2.2116|
00068e  e000              B        |L2.1682|
                  |L2.1680|
000690  e00f              B        |L2.1714|
                  |L2.1682|
000692  7d80              LDRB     r0,[r0,#0x16]  ; System
000694  2801              CMP      r0,#1
000696  d108              BNE      |L2.1706|
;;;289                            {
;;;290                                System.stop = 1;
000698  496a              LDR      r1,|L2.2116|
00069a  7548              STRB     r0,[r1,#0x15]
;;;291                                xTaskNotify(xHandleTask_MT2000,				//停止发射
00069c  2300              MOVS     r3,#0
00069e  2201              MOVS     r2,#1
0006a0  4611              MOV      r1,r2
0006a2  4871              LDR      r0,|L2.2152|
0006a4  6800              LDR      r0,[r0,#0]  ; xHandleTask_MT2000
0006a6  f7fffffe          BL       xTaskGenericNotify
                  |L2.1706|
;;;292                                            BIT_0,
;;;293                                            eSetBits);
;;;294                            }
;;;295    												Trans_printf(" 发射机处于紧急报警状态！停止发射  \n");
0006aa  a070              ADR      r0,|L2.2156|
0006ac  f7fffffe          BL       Trans_printf
0006b0  e2ee              B        |L2.3216|
                  |L2.1714|
;;;296                        }
;;;297                        else	if( System.status == SYSTEM_OPENING )		//正在开机
0006b2  4864              LDR      r0,|L2.2116|
0006b4  7ac0              LDRB     r0,[r0,#0xb]  ; System
0006b6  2806              CMP      r0,#6
0006b8  d105              BNE      |L2.1734|
;;;298                        {
;;;299                            Work_paraBack.Trans_current_state[0]=SYSTEM_OPENING;
0006ba  4960              LDR      r1,|L2.2108|
0006bc  7048              STRB     r0,[r1,#1]
;;;300    											  Trans_printf(" 发射机处于正在开机  \n");
0006be  a075              ADR      r0,|L2.2196|
0006c0  f7fffffe          BL       Trans_printf
0006c4  e2e4              B        |L2.3216|
                  |L2.1734|
;;;301                        }
;;;302                        else	if( System.status == SYSTEM_SCAN )			//扫频
0006c6  485f              LDR      r0,|L2.2116|
0006c8  7ac0              LDRB     r0,[r0,#0xb]  ; System
0006ca  2805              CMP      r0,#5
0006cc  d17d              BNE      |L2.1994|
;;;303                        {
;;;304    												if( (Alarm.swr_alarm==0x01) || (Alarm.over_Electric==0x01) )		//扫频时，查询不返回驻波比报警和过流报警(再次清零)
0006ce  4865              LDR      r0,|L2.2148|
0006d0  7c40              LDRB     r0,[r0,#0x11]  ; Alarm
0006d2  2801              CMP      r0,#1
0006d4  d003              BEQ      |L2.1758|
0006d6  4863              LDR      r0,|L2.2148|
0006d8  7ac0              LDRB     r0,[r0,#0xb]  ; Alarm
0006da  2801              CMP      r0,#1
0006dc  d103              BNE      |L2.1766|
                  |L2.1758|
;;;305    												{
;;;306    													Alarm.swr_alarm = 0x00;
0006de  2000              MOVS     r0,#0
0006e0  4960              LDR      r1,|L2.2148|
0006e2  7448              STRB     r0,[r1,#0x11]
;;;307    													Alarm.over_Electric = 0x00;
0006e4  72c8              STRB     r0,[r1,#0xb]
                  |L2.1766|
;;;308    												}
;;;309    						
;;;310                            Work_paraBack.Trans_current_state[0]=SYSTEM_SCAN;
0006e6  2005              MOVS     r0,#5
0006e8  4954              LDR      r1,|L2.2108|
0006ea  7048              STRB     r0,[r1,#1]
;;;311                            Work_paraBack.Mode[0]=0x01;
0006ec  2001              MOVS     r0,#1
0006ee  7088              STRB     r0,[r1,#2]
;;;312                            Work_paraBack.emission[0]=(System.emission&0x01)|(System.Open_Close&0x02<<1);
0006f0  4854              LDR      r0,|L2.2116|
0006f2  7d80              LDRB     r0,[r0,#0x16]  ; System
0006f4  f0000001          AND      r0,r0,#1
0006f8  4952              LDR      r1,|L2.2116|
0006fa  f89110a7          LDRB     r1,[r1,#0xa7]  ; System
0006fe  f0010104          AND      r1,r1,#4
000702  4308              ORRS     r0,r0,r1
000704  494d              LDR      r1,|L2.2108|
000706  f881002d          STRB     r0,[r1,#0x2d]
;;;313    												
;;;314    												
;;;315    											GT2000_Tx_freq_Hex_to_PChex(GT2000_Tx.Gt2000_freq1, Work_paraBack.Freq);  //查询到的十六进制数据转化为上位机的十六进制
00070a  1d89              ADDS     r1,r1,#6
00070c  4867              LDR      r0,|L2.2220|
00070e  f7fffffe          BL       GT2000_Tx_freq_Hex_to_PChex
;;;316    												
;;;317                            Trans_printf(" Task_upper查询扫频状态任务中 GT2000_Tx.Gt2000_freq1= %02X %02X %02X %02X \n",\
000712  4866              LDR      r0,|L2.2220|
000714  3824              SUBS     r0,r0,#0x24
000716  f8900027          LDRB     r0,[r0,#0x27]
00071a  9000              STR      r0,[sp,#0]
00071c  4863              LDR      r0,|L2.2220|
00071e  3824              SUBS     r0,r0,#0x24
000720  f8900026          LDRB     r0,[r0,#0x26]
000724  9005              STR      r0,[sp,#0x14]
000726  4861              LDR      r0,|L2.2220|
000728  3824              SUBS     r0,r0,#0x24
00072a  f8900025          LDRB     r0,[r0,#0x25]
00072e  9004              STR      r0,[sp,#0x10]
000730  485e              LDR      r0,|L2.2220|
000732  3824              SUBS     r0,r0,#0x24
000734  f8900024          LDRB     r0,[r0,#0x24]  ; GT2000_Tx
000738  9003              STR      r0,[sp,#0xc]
00073a  4601              MOV      r1,r0
00073c  485c              LDR      r0,|L2.2224|
00073e  e9dd2304          LDRD     r2,r3,[sp,#0x10]
000742  f7fffffe          BL       Trans_printf
;;;318    												GT2000_Tx.Gt2000_freq1[0],GT2000_Tx.Gt2000_freq1[1],GT2000_Tx.Gt2000_freq1[2],GT2000_Tx.Gt2000_freq1[3]);
;;;319    												Trans_printf(" Task_upper查询扫频状态任务中 Work_paraBack.Freq[1-4]= %02X %02X %02X %02X \n",\
000746  483d              LDR      r0,|L2.2108|
000748  7a40              LDRB     r0,[r0,#9]
00074a  9000              STR      r0,[sp,#0]
00074c  483b              LDR      r0,|L2.2108|
00074e  7a00              LDRB     r0,[r0,#8]
000750  9005              STR      r0,[sp,#0x14]
000752  483a              LDR      r0,|L2.2108|
000754  79c0              LDRB     r0,[r0,#7]
000756  9004              STR      r0,[sp,#0x10]
000758  4838              LDR      r0,|L2.2108|
00075a  7980              LDRB     r0,[r0,#6]  ; Work_paraBack
00075c  9003              STR      r0,[sp,#0xc]
00075e  4601              MOV      r1,r0
000760  4854              LDR      r0,|L2.2228|
000762  e9dd2304          LDRD     r2,r3,[sp,#0x10]
000766  f7fffffe          BL       Trans_printf
;;;320    												Work_paraBack.Freq[0],Work_paraBack.Freq[1],Work_paraBack.Freq[2],Work_paraBack.Freq[3]);
;;;321    												
;;;322                            Work_paraBack.Power_grade[0] = 180;		//扫频默认功率等级-8幅度
00076a  20b4              MOVS     r0,#0xb4
00076c  4933              LDR      r1,|L2.2108|
00076e  7488              STRB     r0,[r1,#0x12]
;;;323                            Work_paraBack.Forward_power[0] = (float)System.Forward_Power;
000770  4834              LDR      r0,|L2.2116|
000772  6ec0              LDR      r0,[r0,#0x6c]  ; System
000774  f8c10015          STR      r0,[r1,#0x15]  ; Work_paraBack
;;;324                            Work_paraBack.Reverse_power[0] = (float)System.Reverse_Power;
000778  4832              LDR      r0,|L2.2116|
00077a  6f00              LDR      r0,[r0,#0x70]  ; System
00077c  f8c10019          STR      r0,[r1,#0x19]  ; Work_paraBack
;;;325                            Work_paraBack.Power_45_voltage[0]	= System.Voltage;
000780  4830              LDR      r0,|L2.2116|
000782  6f40              LDR      r0,[r0,#0x74]  ; System
000784  f8c10021          STR      r0,[r1,#0x21]  ; Work_paraBack
;;;326                            Work_paraBack.Power_45_intensity[0]	= 0;
000788  2000              MOVS     r0,#0
00078a  f8c1001d          STR      r0,[r1,#0x1d]  ; Work_paraBack
;;;327    											  for(uint8_t n=0;n<4;n++)
00078e  9005              STR      r0,[sp,#0x14]
000790  e041              B        |L2.2070|
                  |L2.1938|
;;;328    												{
;;;329    													Work_paraBack.Bj_Electricity_1[n]=Convert_byte_order_16(System.Bj_Electricity_1[n]);
000792  482c              LDR      r0,|L2.2116|
000794  3080              ADDS     r0,r0,#0x80
000796  9905              LDR      r1,[sp,#0x14]
000798  eb000041          ADD      r0,r0,r1,LSL #1
00079c  8800              LDRH     r0,[r0,#0]
00079e  9004              STR      r0,[sp,#0x10]
0007a0  f7fffffe          BL       Convert_byte_order_16
0007a4  4925              LDR      r1,|L2.2108|
0007a6  314c              ADDS     r1,r1,#0x4c
0007a8  9a05              LDR      r2,[sp,#0x14]
0007aa  eb010142          ADD      r1,r1,r2,LSL #1
0007ae  8008              STRH     r0,[r1,#0]
;;;330    													Work_paraBack.Bj_Electricity_2[n]=Convert_byte_order_16(System.Bj_Electricity_2[n]);
0007b0  4824              LDR      r0,|L2.2116|
0007b2  3088              ADDS     r0,r0,#0x88
0007b4  9905              LDR      r1,[sp,#0x14]
0007b6  eb000041          ADD      r0,r0,r1,LSL #1
0007ba  8800              LDRH     r0,[r0,#0]
0007bc  9004              STR      r0,[sp,#0x10]
0007be  f7fffffe          BL       Convert_byte_order_16
0007c2  491e              LDR      r1,|L2.2108|
0007c4  3156              ADDS     r1,r1,#0x56
0007c6  9a05              LDR      r2,[sp,#0x14]
0007c8  e000              B        |L2.1996|
                  |L2.1994|
0007ca  e02b              B        |L2.2084|
                  |L2.1996|
0007cc  eb010142          ADD      r1,r1,r2,LSL #1
0007d0  8008              STRH     r0,[r1,#0]
;;;331    													Work_paraBack.Bj_Electricity_3[n]=Convert_byte_order_16(System.Bj_Electricity_3[n]);
0007d2  481c              LDR      r0,|L2.2116|
0007d4  3090              ADDS     r0,r0,#0x90
0007d6  9905              LDR      r1,[sp,#0x14]
0007d8  eb000041          ADD      r0,r0,r1,LSL #1
0007dc  8800              LDRH     r0,[r0,#0]
0007de  9004              STR      r0,[sp,#0x10]
0007e0  f7fffffe          BL       Convert_byte_order_16
0007e4  4915              LDR      r1,|L2.2108|
0007e6  3160              ADDS     r1,r1,#0x60
0007e8  9a05              LDR      r2,[sp,#0x14]
0007ea  eb010142          ADD      r1,r1,r2,LSL #1
0007ee  8008              STRH     r0,[r1,#0]
;;;332    													Work_paraBack.Bj_Electricity_4[n]=Convert_byte_order_16(System.Bj_Electricity_4[n]);
0007f0  4814              LDR      r0,|L2.2116|
0007f2  3098              ADDS     r0,r0,#0x98
0007f4  9905              LDR      r1,[sp,#0x14]
0007f6  eb000041          ADD      r0,r0,r1,LSL #1
0007fa  8800              LDRH     r0,[r0,#0]
0007fc  9004              STR      r0,[sp,#0x10]
0007fe  f7fffffe          BL       Convert_byte_order_16
000802  490e              LDR      r1,|L2.2108|
000804  316a              ADDS     r1,r1,#0x6a
000806  9a05              LDR      r2,[sp,#0x14]
000808  eb010142          ADD      r1,r1,r2,LSL #1
00080c  8008              STRH     r0,[r1,#0]
00080e  9805              LDR      r0,[sp,#0x14]         ;327
000810  1c40              ADDS     r0,r0,#1              ;327
000812  b2c0              UXTB     r0,r0                 ;327
000814  9005              STR      r0,[sp,#0x14]         ;327
                  |L2.2070|
000816  9805              LDR      r0,[sp,#0x14]         ;327
000818  2804              CMP      r0,#4                 ;327
00081a  dbba              BLT      |L2.1938|
;;;333    												}
;;;334    												Trans_printf(" 发射机处于扫频状态  \n");
00081c  a026              ADR      r0,|L2.2232|
00081e  f7fffffe          BL       Trans_printf
000822  e235              B        |L2.3216|
                  |L2.2084|
;;;335                        }
;;;336                        else	if( System.status == SYSTEM_SHUTDOWN )		//关机
000824  4807              LDR      r0,|L2.2116|
000826  7ac0              LDRB     r0,[r0,#0xb]  ; System
000828  2804              CMP      r0,#4
00082a  d15d              BNE      |L2.2280|
;;;337                        {
;;;338                            Work_paraBack.Trans_current_state[0]=SYSTEM_SHUTDOWN;
00082c  4903              LDR      r1,|L2.2108|
00082e  7048              STRB     r0,[r1,#1]
;;;339    											  Trans_printf(" 发射机处于关机状态  \n");
000830  a027              ADR      r0,|L2.2256|
000832  f7fffffe          BL       Trans_printf
000836  e22b              B        |L2.3216|
                  |L2.2104|
                          DCD      Alarm_historyBack
                  |L2.2108|
                          DCD      Work_paraBack
                  |L2.2112|
                          DCD      Temperature_Humidity
                  |L2.2116|
                          DCD      System
                  |L2.2120|
000848  20b7a2c9          DCB      " ",183,162,201,228,187,250,180,166,211,218,206,180,179,245
00084c  e4bbfab4
000850  a6d3dace
000854  b4b3f5  
000857  cabcbbaf          DCB      202,188,187,175,215,180,204,172," \n",0
00085b  d7b4ccac
00085f  200a00  
000862  00                DCB      0
000863  00                DCB      0
                  |L2.2148|
                          DCD      Alarm
                  |L2.2152|
                          DCD      xHandleTask_MT2000
                  |L2.2156|
00086c  20b7a2c9          DCB      " ",183,162,201,228,187,250,180,166,211,218,189,244,188,177
000870  e4bbfab4
000874  a6d3dabd
000878  f4bcb1  
00087b  b1a8beaf          DCB      177,168,190,175,215,180,204,172,163,161,205,163,214,185,183
00087f  d7b4ccac
000883  a3a1cda3
000887  d6b9b7  
00088a  a2c9e420          DCB      162,201,228,"  \n",0
00088e  200a00  
000891  00                DCB      0
000892  00                DCB      0
000893  00                DCB      0
                  |L2.2196|
000894  20b7a2c9          DCB      " ",183,162,201,228,187,250,180,166,211,218,213,253,212,218
000898  e4bbfab4
00089c  a6d3dad5
0008a0  fdd4da  
0008a3  bfaabbfa          DCB      191,170,187,250,"  \n",0
0008a7  20200a00
0008ab  00                DCB      0
                  |L2.2220|
                          DCD      GT2000_Tx+0x24
                  |L2.2224|
                          DCD      ||.conststring||
                  |L2.2228|
                          DCD      ||.conststring||+0x4c
                  |L2.2232|
0008b8  20b7a2c9          DCB      " ",183,162,201,228,187,250,180,166,211,218,201,168,198,181
0008bc  e4bbfab4
0008c0  a6d3dac9
0008c4  a8c6b5  
0008c7  d7b4ccac          DCB      215,180,204,172,"  \n",0
0008cb  20200a00
0008cf  00                DCB      0
                  |L2.2256|
0008d0  20b7a2c9          DCB      " ",183,162,201,228,187,250,180,166,211,218,185,216,187,250
0008d4  e4bbfab4
0008d8  a6d3dab9
0008dc  d8bbfa  
0008df  d7b4ccac          DCB      215,180,204,172,"  \n",0
0008e3  20200a00
0008e7  00                DCB      0
                  |L2.2280|
;;;340                        }
;;;341       
;;;342                        else	if( System.status == SYSTEM_STANDBY )		//待机状态
0008e8  48fe              LDR      r0,|L2.3300|
0008ea  7ac0              LDRB     r0,[r0,#0xb]  ; System
0008ec  2802              CMP      r0,#2
0008ee  d153              BNE      |L2.2456|
;;;343                        {
;;;344                            Work_paraBack.Trans_current_state[0] = System.status;
0008f0  48fc              LDR      r0,|L2.3300|
0008f2  7ac0              LDRB     r0,[r0,#0xb]  ; System
0008f4  49fc              LDR      r1,|L2.3304|
0008f6  7048              STRB     r0,[r1,#1]
;;;345                            Work_paraBack.Power_45_voltage[0]	 = System.Voltage;
0008f8  48fa              LDR      r0,|L2.3300|
0008fa  6f40              LDR      r0,[r0,#0x74]  ; System
0008fc  f8c10021          STR      r0,[r1,#0x21]  ; Work_paraBack
;;;346                            Work_paraBack.Power_45_intensity[0]  = 0.0;
000900  2000              MOVS     r0,#0
000902  f8c1001d          STR      r0,[r1,#0x1d]  ; Work_paraBack
;;;347    											  for(uint8_t n=0;n<4;n++)
000906  9005              STR      r0,[sp,#0x14]
000908  e03f              B        |L2.2442|
                  |L2.2314|
;;;348    												{
;;;349    													Work_paraBack.Bj_Electricity_1[n]=Convert_byte_order_16(System.Bj_Electricity_1[n]);
00090a  48f6              LDR      r0,|L2.3300|
00090c  3080              ADDS     r0,r0,#0x80
00090e  9905              LDR      r1,[sp,#0x14]
000910  eb000041          ADD      r0,r0,r1,LSL #1
000914  8800              LDRH     r0,[r0,#0]
000916  9004              STR      r0,[sp,#0x10]
000918  f7fffffe          BL       Convert_byte_order_16
00091c  49f2              LDR      r1,|L2.3304|
00091e  314c              ADDS     r1,r1,#0x4c
000920  9a05              LDR      r2,[sp,#0x14]
000922  eb010142          ADD      r1,r1,r2,LSL #1
000926  8008              STRH     r0,[r1,#0]
;;;350    													Work_paraBack.Bj_Electricity_2[n]=Convert_byte_order_16(System.Bj_Electricity_2[n]);
000928  48ee              LDR      r0,|L2.3300|
00092a  3088              ADDS     r0,r0,#0x88
00092c  9905              LDR      r1,[sp,#0x14]
00092e  eb000041          ADD      r0,r0,r1,LSL #1
000932  8800              LDRH     r0,[r0,#0]
000934  9004              STR      r0,[sp,#0x10]
000936  f7fffffe          BL       Convert_byte_order_16
00093a  49eb              LDR      r1,|L2.3304|
00093c  3156              ADDS     r1,r1,#0x56
00093e  9a05              LDR      r2,[sp,#0x14]
000940  eb010142          ADD      r1,r1,r2,LSL #1
000944  8008              STRH     r0,[r1,#0]
;;;351    													Work_paraBack.Bj_Electricity_3[n]=Convert_byte_order_16(System.Bj_Electricity_3[n]);
000946  48e7              LDR      r0,|L2.3300|
000948  3090              ADDS     r0,r0,#0x90
00094a  9905              LDR      r1,[sp,#0x14]
00094c  eb000041          ADD      r0,r0,r1,LSL #1
000950  8800              LDRH     r0,[r0,#0]
000952  9004              STR      r0,[sp,#0x10]
000954  f7fffffe          BL       Convert_byte_order_16
000958  49e3              LDR      r1,|L2.3304|
00095a  3160              ADDS     r1,r1,#0x60
00095c  9a05              LDR      r2,[sp,#0x14]
00095e  eb010142          ADD      r1,r1,r2,LSL #1
000962  8008              STRH     r0,[r1,#0]
;;;352    													Work_paraBack.Bj_Electricity_4[n]=Convert_byte_order_16(System.Bj_Electricity_4[n]);
000964  48df              LDR      r0,|L2.3300|
000966  3098              ADDS     r0,r0,#0x98
000968  9905              LDR      r1,[sp,#0x14]
00096a  eb000041          ADD      r0,r0,r1,LSL #1
00096e  8800              LDRH     r0,[r0,#0]
000970  9004              STR      r0,[sp,#0x10]
000972  f7fffffe          BL       Convert_byte_order_16
000976  49dc              LDR      r1,|L2.3304|
000978  316a              ADDS     r1,r1,#0x6a
00097a  9a05              LDR      r2,[sp,#0x14]
00097c  eb010142          ADD      r1,r1,r2,LSL #1
000980  8008              STRH     r0,[r1,#0]
000982  9805              LDR      r0,[sp,#0x14]         ;347
000984  1c40              ADDS     r0,r0,#1              ;347
000986  b2c0              UXTB     r0,r0                 ;347
000988  9005              STR      r0,[sp,#0x14]         ;347
                  |L2.2442|
00098a  9805              LDR      r0,[sp,#0x14]         ;347
00098c  2804              CMP      r0,#4                 ;347
00098e  dbbc              BLT      |L2.2314|
;;;353    												}
;;;354    												Trans_printf(" 发射机处于待机状态  \n");
000990  a0d6              ADR      r0,|L2.3308|
000992  f7fffffe          BL       Trans_printf
000996  e17b              B        |L2.3216|
                  |L2.2456|
;;;355                        }
;;;356    										
;;;357                        else	if( System.status == SYSTEM_EMISSING )		//发射状态
000998  48d2              LDR      r0,|L2.3300|
00099a  7ac0              LDRB     r0,[r0,#0xb]  ; System
00099c  2801              CMP      r0,#1
00099e  d17d              BNE      |L2.2716|
;;;358                        {
;;;359                            Work_paraBack.Trans_current_state[0]=SYSTEM_EMISSING;
0009a0  49d1              LDR      r1,|L2.3304|
0009a2  7048              STRB     r0,[r1,#1]
;;;360                            Work_paraBack.Mode[0] = System.INQUIRE_Mode;					//模式
0009a4  48cf              LDR      r0,|L2.3300|
0009a6  7e00              LDRB     r0,[r0,#0x18]  ; System
0009a8  7088              STRB     r0,[r1,#2]
;;;361    
;;;362    											freq_GT2000Hex_to_PChex(System.freq1, Work_paraBack.Freq);  //查询到的十六进制数据转化为上位机的十六进制
0009aa  1d89              ADDS     r1,r1,#6
0009ac  48cd              LDR      r0,|L2.3300|
0009ae  301e              ADDS     r0,r0,#0x1e
0009b0  f7fffffe          BL       freq_GT2000Hex_to_PChex
;;;363    											freq_GT2000Hex_to_PChex(System.freq2, Work_paraBack.Freq+4);
0009b4  49cc              LDR      r1,|L2.3304|
0009b6  310a              ADDS     r1,r1,#0xa
0009b8  48ca              LDR      r0,|L2.3300|
0009ba  3028              ADDS     r0,r0,#0x28
0009bc  f7fffffe          BL       freq_GT2000Hex_to_PChex
;;;364    											freq_GT2000Hex_to_PChex(System.freq3, Work_paraBack.Freq+8);
0009c0  49c9              LDR      r1,|L2.3304|
0009c2  310e              ADDS     r1,r1,#0xe
0009c4  48c7              LDR      r0,|L2.3300|
0009c6  3032              ADDS     r0,r0,#0x32
0009c8  f7fffffe          BL       freq_GT2000Hex_to_PChex
;;;365    //											memcpy(Work_paraBack.Freq, System.freq1, 4);   //赋值查询到的频率给上位机，System.freq1在System_Status_Update中更新。
;;;366    //											  memcpy(Work_paraBack.Freq+4, System.freq2, 4);
;;;367    //											  memcpy(Work_paraBack.Freq+8, System.freq3, 4);
;;;368    									    Trans_printf(" 查询到发射状态Work_paraBack.Mode[0]=  %d \nWork_paraBack.Freq=  ",Work_paraBack.Mode[0]);
0009cc  48c6              LDR      r0,|L2.3304|
0009ce  7880              LDRB     r0,[r0,#2]  ; Work_paraBack
0009d0  4601              MOV      r1,r0
0009d2  9005              STR      r0,[sp,#0x14]
0009d4  48cb              LDR      r0,|L2.3332|
0009d6  f7fffffe          BL       Trans_printf
;;;369    											for(k=0;k<12;k++)
0009da  2000              MOVS     r0,#0
0009dc  9008              STR      r0,[sp,#0x20]
0009de  e00c              B        |L2.2554|
                  |L2.2528|
;;;370    											{
;;;371    									    Trans_printf("%02x ",Work_paraBack.Freq[k]);
0009e0  48c1              LDR      r0,|L2.3304|
0009e2  1d80              ADDS     r0,r0,#6
0009e4  9908              LDR      r1,[sp,#0x20]
0009e6  5c40              LDRB     r0,[r0,r1]
0009e8  4601              MOV      r1,r0
0009ea  9005              STR      r0,[sp,#0x14]
0009ec  a0c6              ADR      r0,|L2.3336|
0009ee  f7fffffe          BL       Trans_printf
0009f2  9808              LDR      r0,[sp,#0x20]         ;369
0009f4  1c40              ADDS     r0,r0,#1              ;369
0009f6  b2c0              UXTB     r0,r0                 ;369
0009f8  9008              STR      r0,[sp,#0x20]         ;369
                  |L2.2554|
0009fa  9808              LDR      r0,[sp,#0x20]         ;369
0009fc  280c              CMP      r0,#0xc               ;369
0009fe  dbef              BLT      |L2.2528|
;;;372                          }
;;;373    											Trans_printf(" \n  System.freq1= ");
000a00  a0c3              ADR      r0,|L2.3344|
000a02  f7fffffe          BL       Trans_printf
;;;374    											for(k=0;k<4;k++)
000a06  2000              MOVS     r0,#0
000a08  9008              STR      r0,[sp,#0x20]
000a0a  e00c              B        |L2.2598|
                  |L2.2572|
;;;375    											{
;;;376    											Trans_printf("%02x ",System.freq1[k]);
000a0c  48b5              LDR      r0,|L2.3300|
000a0e  301e              ADDS     r0,r0,#0x1e
000a10  9908              LDR      r1,[sp,#0x20]
000a12  5c40              LDRB     r0,[r0,r1]
000a14  4601              MOV      r1,r0
000a16  9005              STR      r0,[sp,#0x14]
000a18  a0bb              ADR      r0,|L2.3336|
000a1a  f7fffffe          BL       Trans_printf
000a1e  9808              LDR      r0,[sp,#0x20]         ;374
000a20  1c40              ADDS     r0,r0,#1              ;374
000a22  b2c0              UXTB     r0,r0                 ;374
000a24  9008              STR      r0,[sp,#0x20]         ;374
                  |L2.2598|
000a26  9808              LDR      r0,[sp,#0x20]         ;374
000a28  2804              CMP      r0,#4                 ;374
000a2a  dbef              BLT      |L2.2572|
;;;377    											}
;;;378    											Trans_printf(" \n");
000a2c  a0b4              ADR      r0,|L2.3328|
000a2e  f7fffffe          BL       Trans_printf
;;;379                            Work_paraBack.Forward_power[0] = (float)System.Forward_Power;
000a32  48ac              LDR      r0,|L2.3300|
000a34  6ec0              LDR      r0,[r0,#0x6c]  ; System
000a36  49ac              LDR      r1,|L2.3304|
000a38  f8c10015          STR      r0,[r1,#0x15]  ; Work_paraBack
;;;380                            Work_paraBack.Reverse_power[0] = (float)System.Reverse_Power;
000a3c  48a9              LDR      r0,|L2.3300|
000a3e  6f00              LDR      r0,[r0,#0x70]  ; System
000a40  f8c10019          STR      r0,[r1,#0x19]  ; Work_paraBack
;;;381    											Trans_printf("%02x ",System.freq1[k]);
000a44  48a7              LDR      r0,|L2.3300|
000a46  301e              ADDS     r0,r0,#0x1e
000a48  9908              LDR      r1,[sp,#0x20]
000a4a  5c40              LDRB     r0,[r0,r1]
000a4c  4601              MOV      r1,r0
000a4e  9005              STR      r0,[sp,#0x14]
000a50  a0ad              ADR      r0,|L2.3336|
000a52  f7fffffe          BL       Trans_printf
;;;382    											
;;;383    
;;;384                            Work_paraBack.Power_45_voltage[0]	= System.Voltage;
000a56  48a3              LDR      r0,|L2.3300|
000a58  6f40              LDR      r0,[r0,#0x74]  ; System
000a5a  49a3              LDR      r1,|L2.3304|
000a5c  f8c10021          STR      r0,[r1,#0x21]  ; Work_paraBack
;;;385                            Work_paraBack.Power_45_intensity[0]	= 0;
000a60  2000              MOVS     r0,#0
000a62  f8c1001d          STR      r0,[r1,#0x1d]  ; Work_paraBack
;;;386    												for(uint8_t n=0;n<4;n++)
000a66  9005              STR      r0,[sp,#0x14]
000a68  e041              B        |L2.2798|
                  |L2.2666|
;;;387    												{
;;;388    													Work_paraBack.Bj_Electricity_1[n]=Convert_byte_order_16(System.Bj_Electricity_1[n]);
000a6a  489e              LDR      r0,|L2.3300|
000a6c  3080              ADDS     r0,r0,#0x80
000a6e  9905              LDR      r1,[sp,#0x14]
000a70  eb000041          ADD      r0,r0,r1,LSL #1
000a74  8800              LDRH     r0,[r0,#0]
000a76  9004              STR      r0,[sp,#0x10]
000a78  f7fffffe          BL       Convert_byte_order_16
000a7c  499a              LDR      r1,|L2.3304|
000a7e  314c              ADDS     r1,r1,#0x4c
000a80  9a05              LDR      r2,[sp,#0x14]
000a82  eb010142          ADD      r1,r1,r2,LSL #1
000a86  8008              STRH     r0,[r1,#0]
;;;389    													Work_paraBack.Bj_Electricity_2[n]=Convert_byte_order_16(System.Bj_Electricity_2[n]);
000a88  4896              LDR      r0,|L2.3300|
000a8a  3088              ADDS     r0,r0,#0x88
000a8c  9905              LDR      r1,[sp,#0x14]
000a8e  eb000041          ADD      r0,r0,r1,LSL #1
000a92  8800              LDRH     r0,[r0,#0]
000a94  9004              STR      r0,[sp,#0x10]
000a96  f7fffffe          BL       Convert_byte_order_16
000a9a  e000              B        |L2.2718|
                  |L2.2716|
000a9c  e058              B        |L2.2896|
                  |L2.2718|
000a9e  4992              LDR      r1,|L2.3304|
000aa0  3156              ADDS     r1,r1,#0x56
000aa2  9a05              LDR      r2,[sp,#0x14]
000aa4  eb010142          ADD      r1,r1,r2,LSL #1
000aa8  8008              STRH     r0,[r1,#0]
;;;390    													Work_paraBack.Bj_Electricity_3[n]=Convert_byte_order_16(System.Bj_Electricity_3[n]);
000aaa  488e              LDR      r0,|L2.3300|
000aac  3090              ADDS     r0,r0,#0x90
000aae  9905              LDR      r1,[sp,#0x14]
000ab0  eb000041          ADD      r0,r0,r1,LSL #1
000ab4  8800              LDRH     r0,[r0,#0]
000ab6  9004              STR      r0,[sp,#0x10]
000ab8  f7fffffe          BL       Convert_byte_order_16
000abc  498a              LDR      r1,|L2.3304|
000abe  3160              ADDS     r1,r1,#0x60
000ac0  9a05              LDR      r2,[sp,#0x14]
000ac2  eb010142          ADD      r1,r1,r2,LSL #1
000ac6  8008              STRH     r0,[r1,#0]
;;;391    													Work_paraBack.Bj_Electricity_4[n]=Convert_byte_order_16(System.Bj_Electricity_4[n]);
000ac8  4886              LDR      r0,|L2.3300|
000aca  3098              ADDS     r0,r0,#0x98
000acc  9905              LDR      r1,[sp,#0x14]
000ace  eb000041          ADD      r0,r0,r1,LSL #1
000ad2  8800              LDRH     r0,[r0,#0]
000ad4  9004              STR      r0,[sp,#0x10]
000ad6  f7fffffe          BL       Convert_byte_order_16
000ada  4983              LDR      r1,|L2.3304|
000adc  316a              ADDS     r1,r1,#0x6a
000ade  9a05              LDR      r2,[sp,#0x14]
000ae0  eb010142          ADD      r1,r1,r2,LSL #1
000ae4  8008              STRH     r0,[r1,#0]
000ae6  9805              LDR      r0,[sp,#0x14]         ;386
000ae8  1c40              ADDS     r0,r0,#1              ;386
000aea  b2c0              UXTB     r0,r0                 ;386
000aec  9005              STR      r0,[sp,#0x14]         ;386
                  |L2.2798|
000aee  9805              LDR      r0,[sp,#0x14]         ;386
000af0  2804              CMP      r0,#4                 ;386
000af2  dbba              BLT      |L2.2666|
;;;392    												}
;;;393    												Trans_printf(" Work_paraBack.Bj_Electricity_1_4== ");
000af4  a08b              ADR      r0,|L2.3364|
000af6  f7fffffe          BL       Trans_printf
;;;394    												for(uint8_t i=0;i<4;i++)
000afa  2000              MOVS     r0,#0
000afc  9005              STR      r0,[sp,#0x14]
000afe  e00e              B        |L2.2846|
                  |L2.2816|
;;;395    												{
;;;396    													Trans_printf(" %x ",Work_paraBack.Bj_Electricity_1[i]);  //打印调试信息
000b00  4879              LDR      r0,|L2.3304|
000b02  304c              ADDS     r0,r0,#0x4c
000b04  9905              LDR      r1,[sp,#0x14]
000b06  eb000041          ADD      r0,r0,r1,LSL #1
000b0a  8800              LDRH     r0,[r0,#0]
000b0c  4601              MOV      r1,r0
000b0e  9004              STR      r0,[sp,#0x10]
000b10  a08e              ADR      r0,|L2.3404|
000b12  f7fffffe          BL       Trans_printf
000b16  9805              LDR      r0,[sp,#0x14]         ;394
000b18  1c40              ADDS     r0,r0,#1              ;394
000b1a  b2c0              UXTB     r0,r0                 ;394
000b1c  9005              STR      r0,[sp,#0x14]         ;394
                  |L2.2846|
000b1e  e000              B        |L2.2850|
                  |L2.2848|
000b20  e0bb              B        |L2.3226|
                  |L2.2850|
000b22  9805              LDR      r0,[sp,#0x14]         ;394
000b24  2804              CMP      r0,#4                 ;394
000b26  dbeb              BLT      |L2.2816|
;;;397    												}
;;;398    												Trans_printf(" \n ");
000b28  a08a              ADR      r0,|L2.3412|
000b2a  f7fffffe          BL       Trans_printf
;;;399                            Work_paraBack.emission[0]=(System.emission&0x01)|(System.Open_Close&0x02<<1);
000b2e  486d              LDR      r0,|L2.3300|
000b30  7d80              LDRB     r0,[r0,#0x16]  ; System
000b32  f0000001          AND      r0,r0,#1
000b36  496b              LDR      r1,|L2.3300|
000b38  f89110a7          LDRB     r1,[r1,#0xa7]  ; System
000b3c  f0010104          AND      r1,r1,#4
000b40  4308              ORRS     r0,r0,r1
000b42  4969              LDR      r1,|L2.3304|
000b44  f881002d          STRB     r0,[r1,#0x2d]
;;;400    												Trans_printf(" 发射机处于发射状态  \n");
000b48  a083              ADR      r0,|L2.3416|
000b4a  f7fffffe          BL       Trans_printf
000b4e  e09f              B        |L2.3216|
                  |L2.2896|
;;;401                        }
;;;402                        else	if( System.status == SYSTEM_ALARM )			//报警状态
000b50  4864              LDR      r0,|L2.3300|
000b52  7ac0              LDRB     r0,[r0,#0xb]  ; System
000b54  2811              CMP      r0,#0x11
000b56  d17c              BNE      |L2.3154|
;;;403                        {
;;;404                            Work_paraBack.Trans_current_state[0]=SYSTEM_ALARM;			//当前是报警状态
000b58  4963              LDR      r1,|L2.3304|
000b5a  7048              STRB     r0,[r1,#1]
;;;405                            Work_paraBack.Mode[0] = System.INQUIRE_Mode;					//模式
000b5c  4861              LDR      r0,|L2.3300|
000b5e  7e00              LDRB     r0,[r0,#0x18]  ; System
000b60  7088              STRB     r0,[r1,#2]
;;;406    
;;;407                            freq_GT2000Hex_to_PChex(System.freq1, Work_paraBack.Freq);  //查询到的十六进制数据转化为上位机的十六进制
000b62  1d89              ADDS     r1,r1,#6
000b64  485f              LDR      r0,|L2.3300|
000b66  301e              ADDS     r0,r0,#0x1e
000b68  f7fffffe          BL       freq_GT2000Hex_to_PChex
;;;408    										  	freq_GT2000Hex_to_PChex(System.freq2, Work_paraBack.Freq+4);
000b6c  495e              LDR      r1,|L2.3304|
000b6e  310a              ADDS     r1,r1,#0xa
000b70  485c              LDR      r0,|L2.3300|
000b72  3028              ADDS     r0,r0,#0x28
000b74  f7fffffe          BL       freq_GT2000Hex_to_PChex
;;;409    										  	freq_GT2000Hex_to_PChex(System.freq3, Work_paraBack.Freq+8); 
000b78  495b              LDR      r1,|L2.3304|
000b7a  310e              ADDS     r1,r1,#0xe
000b7c  4859              LDR      r0,|L2.3300|
000b7e  3032              ADDS     r0,r0,#0x32
000b80  f7fffffe          BL       freq_GT2000Hex_to_PChex
;;;410    //											  memcpy(Work_paraBack.Freq, System.freq1, 4);   //赋值查询到的频率给上位机，System.freq1在System_Status_Update中更新。
;;;411    //											  memcpy(Work_paraBack.Freq+4, System.freq2, 4);
;;;412    //											  memcpy(Work_paraBack.Freq+8, System.freq3, 4);
;;;413    											Trans_printf(" 查询到报警状态状态Work_paraBack.Freq=  ");
000b84  a07a              ADR      r0,|L2.3440|
000b86  f7fffffe          BL       Trans_printf
;;;414    											for(k=0;k<12;k++)
000b8a  2000              MOVS     r0,#0
000b8c  9008              STR      r0,[sp,#0x20]
000b8e  e00c              B        |L2.2986|
                  |L2.2960|
;;;415    											{
;;;416    									    Trans_printf(" %x  \n",Work_paraBack.Freq[k]);
000b90  4855              LDR      r0,|L2.3304|
000b92  1d80              ADDS     r0,r0,#6
000b94  9908              LDR      r1,[sp,#0x20]
000b96  5c40              LDRB     r0,[r0,r1]
000b98  4601              MOV      r1,r0
000b9a  9005              STR      r0,[sp,#0x14]
000b9c  a07f              ADR      r0,|L2.3484|
000b9e  f7fffffe          BL       Trans_printf
000ba2  9808              LDR      r0,[sp,#0x20]         ;414
000ba4  1c40              ADDS     r0,r0,#1              ;414
000ba6  b2c0              UXTB     r0,r0                 ;414
000ba8  9008              STR      r0,[sp,#0x20]         ;414
                  |L2.2986|
000baa  9808              LDR      r0,[sp,#0x20]         ;414
000bac  280c              CMP      r0,#0xc               ;414
000bae  dbef              BLT      |L2.2960|
;;;417                          }
;;;418    											Trans_printf(" System.freq1= %x  ",System.freq1);
000bb0  494c              LDR      r1,|L2.3300|
000bb2  311e              ADDS     r1,r1,#0x1e
000bb4  a07b              ADR      r0,|L2.3492|
000bb6  f7fffffe          BL       Trans_printf
;;;419    											
;;;420                            Work_paraBack.Forward_power[0] = (float)System.Forward_Power;
000bba  484a              LDR      r0,|L2.3300|
000bbc  6ec0              LDR      r0,[r0,#0x6c]  ; System
000bbe  494a              LDR      r1,|L2.3304|
000bc0  f8c10015          STR      r0,[r1,#0x15]  ; Work_paraBack
;;;421                            Work_paraBack.Reverse_power[0] = (float)System.Reverse_Power;
000bc4  4847              LDR      r0,|L2.3300|
000bc6  6f00              LDR      r0,[r0,#0x70]  ; System
000bc8  f8c10019          STR      r0,[r1,#0x19]  ; Work_paraBack
;;;422    
;;;423                            Work_paraBack.Power_45_voltage[0]	= System.Voltage;
000bcc  4845              LDR      r0,|L2.3300|
000bce  6f40              LDR      r0,[r0,#0x74]  ; System
000bd0  f8c10021          STR      r0,[r1,#0x21]  ; Work_paraBack
;;;424                            Work_paraBack.Power_45_intensity[0]	= 0;
000bd4  2000              MOVS     r0,#0
000bd6  f8c1001d          STR      r0,[r1,#0x1d]  ; Work_paraBack
;;;425    											  for(uint8_t n=0;n<4;n++)
000bda  9005              STR      r0,[sp,#0x14]
000bdc  e041              B        |L2.3170|
                  |L2.3038|
;;;426    												{
;;;427    													Work_paraBack.Bj_Electricity_1[n]=Convert_byte_order_16(System.Bj_Electricity_1[n]);
000bde  4841              LDR      r0,|L2.3300|
000be0  3080              ADDS     r0,r0,#0x80
000be2  9905              LDR      r1,[sp,#0x14]
000be4  eb000041          ADD      r0,r0,r1,LSL #1
000be8  8800              LDRH     r0,[r0,#0]
000bea  9004              STR      r0,[sp,#0x10]
000bec  f7fffffe          BL       Convert_byte_order_16
000bf0  493d              LDR      r1,|L2.3304|
000bf2  314c              ADDS     r1,r1,#0x4c
000bf4  9a05              LDR      r2,[sp,#0x14]
000bf6  eb010142          ADD      r1,r1,r2,LSL #1
000bfa  8008              STRH     r0,[r1,#0]
;;;428    													Work_paraBack.Bj_Electricity_2[n]=Convert_byte_order_16(System.Bj_Electricity_2[n]);
000bfc  4839              LDR      r0,|L2.3300|
000bfe  3088              ADDS     r0,r0,#0x88
000c00  9905              LDR      r1,[sp,#0x14]
000c02  eb000041          ADD      r0,r0,r1,LSL #1
000c06  8800              LDRH     r0,[r0,#0]
000c08  9004              STR      r0,[sp,#0x10]
000c0a  f7fffffe          BL       Convert_byte_order_16
000c0e  4936              LDR      r1,|L2.3304|
000c10  3156              ADDS     r1,r1,#0x56
000c12  9a05              LDR      r2,[sp,#0x14]
000c14  eb010142          ADD      r1,r1,r2,LSL #1
000c18  8008              STRH     r0,[r1,#0]
;;;429    													Work_paraBack.Bj_Electricity_3[n]=Convert_byte_order_16(System.Bj_Electricity_3[n]);
000c1a  4832              LDR      r0,|L2.3300|
000c1c  3090              ADDS     r0,r0,#0x90
000c1e  9905              LDR      r1,[sp,#0x14]
000c20  eb000041          ADD      r0,r0,r1,LSL #1
000c24  8800              LDRH     r0,[r0,#0]
000c26  9004              STR      r0,[sp,#0x10]
000c28  f7fffffe          BL       Convert_byte_order_16
000c2c  492e              LDR      r1,|L2.3304|
000c2e  3160              ADDS     r1,r1,#0x60
000c30  9a05              LDR      r2,[sp,#0x14]
000c32  eb010142          ADD      r1,r1,r2,LSL #1
000c36  8008              STRH     r0,[r1,#0]
;;;430    													Work_paraBack.Bj_Electricity_4[n]=Convert_byte_order_16(System.Bj_Electricity_4[n]);
000c38  482a              LDR      r0,|L2.3300|
000c3a  3098              ADDS     r0,r0,#0x98
000c3c  9905              LDR      r1,[sp,#0x14]
000c3e  eb000041          ADD      r0,r0,r1,LSL #1
000c42  8800              LDRH     r0,[r0,#0]
000c44  9004              STR      r0,[sp,#0x10]
000c46  f7fffffe          BL       Convert_byte_order_16
000c4a  4927              LDR      r1,|L2.3304|
000c4c  316a              ADDS     r1,r1,#0x6a
000c4e  9a05              LDR      r2,[sp,#0x14]
000c50  e000              B        |L2.3156|
                  |L2.3154|
000c52  e01a              B        |L2.3210|
                  |L2.3156|
000c54  eb010142          ADD      r1,r1,r2,LSL #1
000c58  8008              STRH     r0,[r1,#0]
000c5a  9805              LDR      r0,[sp,#0x14]         ;425
000c5c  1c40              ADDS     r0,r0,#1              ;425
000c5e  b2c0              UXTB     r0,r0                 ;425
000c60  9005              STR      r0,[sp,#0x14]         ;425
                  |L2.3170|
000c62  9805              LDR      r0,[sp,#0x14]         ;425
000c64  2804              CMP      r0,#4                 ;425
000c66  dbba              BLT      |L2.3038|
;;;431    												}
;;;432                            Work_paraBack.emission[0] = (System.emission&0x01)|(System.Open_Close&0x02<<1);
000c68  481e              LDR      r0,|L2.3300|
000c6a  7d80              LDRB     r0,[r0,#0x16]  ; System
000c6c  f0000001          AND      r0,r0,#1
000c70  491c              LDR      r1,|L2.3300|
000c72  f89110a7          LDRB     r1,[r1,#0xa7]  ; System
000c76  f0010104          AND      r1,r1,#4
000c7a  4308              ORRS     r0,r0,r1
000c7c  491a              LDR      r1,|L2.3304|
000c7e  f881002d          STRB     r0,[r1,#0x2d]
;;;433    												Trans_printf(" 发射机处于报警状态  \n");
000c82  a04d              ADR      r0,|L2.3512|
000c84  f7fffffe          BL       Trans_printf
000c88  e002              B        |L2.3216|
                  |L2.3210|
;;;434                        }
;;;435                        else												//保留
;;;436                        {
;;;437                            //App_printf("PC inquire when System.status = ???\r\n");
;;;438    											Trans_printf(" 未获取到发射机状态？？？？  \n");
000c8a  a051              ADR      r0,|L2.3536|
000c8c  f7fffffe          BL       Trans_printf
                  |L2.3216|
;;;439                        }
;;;440    										
;;;441                        Send_PC(g_fuc_codToPC);
000c90  4857              LDR      r0,|L2.3568|
000c92  f7fffffe          BL       Send_PC
                  |L2.3222|
000c96  f001b909          B.W      |L2.7852|
                  |L2.3226|
;;;442    										
;;;443                    }
;;;444                    else	if(g_fuc_cod[0]==0x03&&g_fuc_cod[1]==0x01)		//发射
000c9a  4856              LDR      r0,|L2.3572|
000c9c  7800              LDRB     r0,[r0,#0]  ; g_fuc_cod
000c9e  2803              CMP      r0,#3
                  |L2.3232|
000ca0  d11d              BNE      |L2.3294|
000ca2  4854              LDR      r0,|L2.3572|
000ca4  7840              LDRB     r0,[r0,#1]  ; g_fuc_cod
000ca6  2801              CMP      r0,#1
000ca8  d1fa              BNE      |L2.3232|
;;;445                    {
;;;446                        Time_Printf( (RTC_GetCounter()+g_stamp_distance), &set_time );  //时间戳 -> 北京时间并打印
000caa  f7fffffe          BL       RTC_GetCounter
000cae  4952              LDR      r1,|L2.3576|
000cb0  6809              LDR      r1,[r1,#0]  ; g_stamp_distance
000cb2  4408              ADD      r0,r0,r1
000cb4  4951              LDR      r1,|L2.3580|
000cb6  9005              STR      r0,[sp,#0x14]
000cb8  f7fffffe          BL       Time_Printf
;;;447    
;;;448                        Trans_openBack.Transmitte_id[0]=System.CAN_ID[0];
000cbc  4809              LDR      r0,|L2.3300|
000cbe  7800              LDRB     r0,[r0,#0]  ; System
000cc0  494f              LDR      r1,|L2.3584|
000cc2  7008              STRB     r0,[r1,#0]
;;;449                        g_fuc_codToPC[0]=0x03;
000cc4  2003              MOVS     r0,#3
000cc6  494a              LDR      r1,|L2.3568|
000cc8  7008              STRB     r0,[r1,#0]
;;;450                        g_fuc_codToPC[1]=0x02;
000cca  2002              MOVS     r0,#2
000ccc  7048              STRB     r0,[r1,#1]
;;;451    
;;;452                        if( System.open != 0x02 )					//是否开机//开机标志位	0:关机	1:正在开机	2:已经开机
000cce  4805              LDR      r0,|L2.3300|
000cd0  7b00              LDRB     r0,[r0,#0xc]  ; System
000cd2  2802              CMP      r0,#2
000cd4  d004              BEQ      |L2.3296|
;;;453                        {
;;;454    											Trans_openBack.Trans_state[0]=0xFB;  //0xFB表示没有开机
000cd6  20fb              MOVS     r0,#0xfb
000cd8  4949              LDR      r1,|L2.3584|
000cda  7048              STRB     r0,[r1,#1]
000cdc  e1f3              B        |L2.4294|
                  |L2.3294|
000cde  e1f6              B        |L2.4302|
                  |L2.3296|
000ce0  e090              B        |L2.3588|
000ce2  0000              DCW      0x0000
                  |L2.3300|
                          DCD      System
                  |L2.3304|
                          DCD      Work_paraBack
                  |L2.3308|
000cec  20b7a2c9          DCB      " ",183,162,201,228,187,250,180,166,211,218,180,253,187,250
000cf0  e4bbfab4
000cf4  a6d3dab4
000cf8  fdbbfa  
000cfb  d7b4ccac          DCB      215,180,204,172," "
000cff  20      
                  |L2.3328|
000d00  200a00            DCB      " \n",0
000d03  00                DCB      0
                  |L2.3332|
                          DCD      ||.conststring||+0x9c
                  |L2.3336|
000d08  25303278          DCB      "%02x ",0
000d0c  2000    
000d0e  00                DCB      0
000d0f  00                DCB      0
                  |L2.3344|
000d10  200a2020          DCB      " \n  System.freq1= ",0
000d14  53797374
000d18  656d2e66
000d1c  72657131
000d20  3d2000  
000d23  00                DCB      0
                  |L2.3364|
000d24  20576f72          DCB      " Work_paraBack.Bj_Electricity_1_4== ",0
000d28  6b5f7061
000d2c  72614261
000d30  636b2e42
000d34  6a5f456c
000d38  65637472
000d3c  69636974
000d40  795f315f
000d44  343d3d20
000d48  00      
000d49  00                DCB      0
000d4a  00                DCB      0
000d4b  00                DCB      0
                  |L2.3404|
000d4c  20257820          DCB      " %x ",0
000d50  00      
000d51  00                DCB      0
000d52  00                DCB      0
000d53  00                DCB      0
                  |L2.3412|
000d54  200a2000          DCB      " \n ",0
                  |L2.3416|
000d58  20b7a2c9          DCB      " ",183,162,201,228,187,250,180,166,211,218,183,162,201,228
000d5c  e4bbfab4
000d60  a6d3dab7
000d64  a2c9e4  
000d67  d7b4ccac          DCB      215,180,204,172,"  \n",0
000d6b  20200a00
000d6f  00                DCB      0
                  |L2.3440|
000d70  20b2e9d1          DCB      " ",178,233,209,175,181,189,177,168,190,175,215,180,204,172
000d74  afb5bdb1
000d78  a8beafd7
000d7c  b4ccac  
000d7f  d7b4ccac          DCB      215,180,204,172,"Work_paraBack.Freq=  ",0
000d83  576f726b
000d87  5f706172
000d8b  61426163
000d8f  6b2e4672
000d93  65713d20
000d97  2000    
000d99  00                DCB      0
000d9a  00                DCB      0
000d9b  00                DCB      0
                  |L2.3484|
000d9c  20257820          DCB      " %x  \n",0
000da0  200a00  
000da3  00                DCB      0
                  |L2.3492|
000da4  20537973          DCB      " System.freq1= %x  ",0
000da8  74656d2e
000dac  66726571
000db0  313d2025
000db4  78202000
                  |L2.3512|
000db8  20b7a2c9          DCB      " ",183,162,201,228,187,250,180,166,211,218,177,168,190,175
000dbc  e4bbfab4
000dc0  a6d3dab1
000dc4  a8beaf  
000dc7  d7b4ccac          DCB      215,180,204,172,"  \n",0
000dcb  20200a00
000dcf  00                DCB      0
                  |L2.3536|
000dd0  20ceb4bb          DCB      " ",206,180,187,241,200,161,181,189,183,162,201,228,187,250
000dd4  f1c8a1b5
000dd8  bdb7a2c9
000ddc  e4bbfa  
000ddf  d7b4ccac          DCB      215,180,204,172,163,191,163,191,163,191,163,191,"  \n",0
000de3  a3bfa3bf
000de7  a3bfa3bf
000deb  20200a00
000def  00                DCB      0
                  |L2.3568|
                          DCD      g_fuc_codToPC
                  |L2.3572|
                          DCD      g_fuc_cod
                  |L2.3576|
                          DCD      g_stamp_distance
                  |L2.3580|
                          DCD      set_time
                  |L2.3584|
                          DCD      Trans_openBack
                  |L2.3588|
;;;455                        }
;;;456                        else	if( System.emission == 0x01 )		//是否正在发射
000e04  48fc              LDR      r0,|L2.4600|
000e06  7d80              LDRB     r0,[r0,#0x16]  ; System
000e08  2801              CMP      r0,#1
000e0a  d103              BNE      |L2.3604|
;;;457    										{
;;;458    											Trans_openBack.Trans_state[0]=0xFC;  //0xFC表示发射失败
000e0c  20fc              MOVS     r0,#0xfc
000e0e  49fb              LDR      r1,|L2.4604|
000e10  7048              STRB     r0,[r1,#1]
000e12  e158              B        |L2.4294|
                  |L2.3604|
;;;459    										}
;;;460    										else										//发射
;;;461                        {
;;;462                            Trans_openBack.Trans_state[0]=0;	//清零	调用BJ2000_Open()开机，收到发射机应答更新Trans_openBack.Trans_state[0]。
000e14  2000              MOVS     r0,#0
000e16  49f9              LDR      r1,|L2.4604|
000e18  7048              STRB     r0,[r1,#1]
;;;463    
;;;464                            /* 参数判断，参数正确则赋值给MT2000_Tx，通过MT2000_Cmd_Channel()和MT2000_Cmd_Tune()完成调频调谐，最后MT2000_Cmd_Emit()发射 */
;;;465                            switch( PC_Cmd.mode )
000e1a  48f9              LDR      r0,|L2.4608|
000e1c  7800              LDRB     r0,[r0,#0]  ; PC_Cmd
000e1e  2801              CMP      r0,#1
000e20  d004              BEQ      |L2.3628|
000e22  2802              CMP      r0,#2
000e24  d006              BEQ      |L2.3636|
000e26  2803              CMP      r0,#3
000e28  d10c              BNE      |L2.3652|
000e2a  e007              B        |L2.3644|
                  |L2.3628|
;;;466                            {
;;;467    													case 0x01:	GT2000_Tx.Gt2000_mode = 1;					break;  //赋值mode，GT2000_Tx为获取到的上位机下发的数据
000e2c  2001              MOVS     r0,#1
000e2e  49f5              LDR      r1,|L2.4612|
000e30  7148              STRB     r0,[r1,#5]
000e32  e00b              B        |L2.3660|
                  |L2.3636|
;;;468    													case 0x02:	GT2000_Tx.Gt2000_mode = 2;					break;
000e34  2002              MOVS     r0,#2
000e36  49f3              LDR      r1,|L2.4612|
000e38  7148              STRB     r0,[r1,#5]
000e3a  e007              B        |L2.3660|
                  |L2.3644|
;;;469    													case 0x03:	GT2000_Tx.Gt2000_mode = 3;					break;
000e3c  2003              MOVS     r0,#3
000e3e  49f1              LDR      r1,|L2.4612|
000e40  7148              STRB     r0,[r1,#5]
000e42  e003              B        |L2.3660|
                  |L2.3652|
;;;470    													default:	Trans_openBack.Trans_state[0]=0xFE;		break;	//参数错误
000e44  20fe              MOVS     r0,#0xfe
000e46  49ed              LDR      r1,|L2.4604|
000e48  7048              STRB     r0,[r1,#1]
000e4a  bf00              NOP      
                  |L2.3660|
000e4c  bf00              NOP                            ;467
;;;471                            }
;;;472    												
;;;473    											  if(PC_Cmd.power[0]<100&&PC_Cmd.power[0]>=250)
000e4e  48ec              LDR      r0,|L2.4608|
000e50  7880              LDRB     r0,[r0,#2]  ; PC_Cmd
000e52  2864              CMP      r0,#0x64
000e54  da06              BGE      |L2.3684|
000e56  48ea              LDR      r0,|L2.4608|
000e58  7880              LDRB     r0,[r0,#2]  ; PC_Cmd
000e5a  28fa              CMP      r0,#0xfa
000e5c  db02              BLT      |L2.3684|
;;;474    												{
;;;475    													Trans_openBack.Trans_state[0]=0xFE;		//参数错误
000e5e  20fe              MOVS     r0,#0xfe
000e60  49e6              LDR      r1,|L2.4604|
000e62  7048              STRB     r0,[r1,#1]
                  |L2.3684|
;;;476    												}
;;;477    												if(PC_Cmd.power[1]<100&&PC_Cmd.power[1]>=250)
000e64  48e6              LDR      r0,|L2.4608|
000e66  78c0              LDRB     r0,[r0,#3]
000e68  2864              CMP      r0,#0x64
000e6a  da06              BGE      |L2.3706|
000e6c  48e4              LDR      r0,|L2.4608|
000e6e  78c0              LDRB     r0,[r0,#3]
000e70  28fa              CMP      r0,#0xfa
000e72  db02              BLT      |L2.3706|
;;;478    												{
;;;479    													Trans_openBack.Trans_state[0]=0xFE;		//参数错误
000e74  20fe              MOVS     r0,#0xfe
000e76  49e1              LDR      r1,|L2.4604|
000e78  7048              STRB     r0,[r1,#1]
                  |L2.3706|
;;;480    												}
;;;481    												if(PC_Cmd.power[2]<100&&PC_Cmd.power[2]>=250)
000e7a  48e1              LDR      r0,|L2.4608|
000e7c  7900              LDRB     r0,[r0,#4]
000e7e  2864              CMP      r0,#0x64
000e80  da06              BGE      |L2.3728|
000e82  48df              LDR      r0,|L2.4608|
000e84  7900              LDRB     r0,[r0,#4]
000e86  28fa              CMP      r0,#0xfa
000e88  db02              BLT      |L2.3728|
;;;482    												{
;;;483    													Trans_openBack.Trans_state[0]=0xFE;		//参数错误
000e8a  20fe              MOVS     r0,#0xfe
000e8c  49db              LDR      r1,|L2.4604|
000e8e  7048              STRB     r0,[r1,#1]
                  |L2.3728|
;;;484    												}        
;;;485    													
;;;486                            if( GT2000_Tx.Gt2000_mode > 0 )
000e90  48dc              LDR      r0,|L2.4612|
000e92  7940              LDRB     r0,[r0,#5]  ; GT2000_Tx
000e94  2800              CMP      r0,#0
000e96  dd1a              BLE      |L2.3790|
;;;487                            {  //判断下发频率必须在3.2~21.85
;;;488                                if( (PC_Cmd.freq[0]>0x21 && PC_Cmd.freq[1]>0x85) || (PC_Cmd.freq[0]>=0x22) ||
000e98  48d9              LDR      r0,|L2.4608|
000e9a  7a00              LDRB     r0,[r0,#8]  ; PC_Cmd
000e9c  2821              CMP      r0,#0x21
000e9e  dd03              BLE      |L2.3752|
000ea0  48d7              LDR      r0,|L2.4608|
000ea2  7a40              LDRB     r0,[r0,#9]
000ea4  2885              CMP      r0,#0x85
000ea6  dc0f              BGT      |L2.3784|
                  |L2.3752|
000ea8  48d5              LDR      r0,|L2.4608|
000eaa  7a00              LDRB     r0,[r0,#8]  ; PC_Cmd
000eac  2822              CMP      r0,#0x22
000eae  da0b              BGE      |L2.3784|
;;;489                                    (PC_Cmd.freq[0]<0x03 && PC_Cmd.freq[1]<0x20) || (PC_Cmd.freq[0]<=0x02) )
000eb0  48d3              LDR      r0,|L2.4608|
000eb2  7a00              LDRB     r0,[r0,#8]  ; PC_Cmd
000eb4  2803              CMP      r0,#3
000eb6  da03              BGE      |L2.3776|
000eb8  48d1              LDR      r0,|L2.4608|
000eba  7a40              LDRB     r0,[r0,#9]
000ebc  2820              CMP      r0,#0x20
000ebe  db03              BLT      |L2.3784|
                  |L2.3776|
000ec0  48cf              LDR      r0,|L2.4608|
000ec2  7a00              LDRB     r0,[r0,#8]  ; PC_Cmd
000ec4  2802              CMP      r0,#2
000ec6  dc02              BGT      |L2.3790|
                  |L2.3784|
;;;490                                    Trans_openBack.Trans_state[0]=0xFE;		//参数错误
000ec8  20fe              MOVS     r0,#0xfe
000eca  49cc              LDR      r1,|L2.4604|
000ecc  7048              STRB     r0,[r1,#1]
                  |L2.3790|
;;;491                            }
;;;492    
;;;493                            if( GT2000_Tx.Gt2000_mode > 1 )
000ece  48cd              LDR      r0,|L2.4612|
000ed0  7940              LDRB     r0,[r0,#5]  ; GT2000_Tx
000ed2  2801              CMP      r0,#1
000ed4  dd1a              BLE      |L2.3852|
;;;494                            {
;;;495                                if( (PC_Cmd.freq[4]>0x21 && PC_Cmd.freq[5]>0x85) || (PC_Cmd.freq[4]>=0x22) ||
000ed6  48ca              LDR      r0,|L2.4608|
000ed8  7b00              LDRB     r0,[r0,#0xc]
000eda  2821              CMP      r0,#0x21
000edc  dd03              BLE      |L2.3814|
000ede  48c8              LDR      r0,|L2.4608|
000ee0  7b40              LDRB     r0,[r0,#0xd]
000ee2  2885              CMP      r0,#0x85
000ee4  dc0f              BGT      |L2.3846|
                  |L2.3814|
000ee6  48c6              LDR      r0,|L2.4608|
000ee8  7b00              LDRB     r0,[r0,#0xc]
000eea  2822              CMP      r0,#0x22
000eec  da0b              BGE      |L2.3846|
;;;496                                    (PC_Cmd.freq[4]<0x03 && PC_Cmd.freq[5]<0x20) || (PC_Cmd.freq[4]<=0x02) )
000eee  48c4              LDR      r0,|L2.4608|
000ef0  7b00              LDRB     r0,[r0,#0xc]
000ef2  2803              CMP      r0,#3
000ef4  da03              BGE      |L2.3838|
000ef6  48c2              LDR      r0,|L2.4608|
000ef8  7b40              LDRB     r0,[r0,#0xd]
000efa  2820              CMP      r0,#0x20
000efc  db03              BLT      |L2.3846|
                  |L2.3838|
000efe  48c0              LDR      r0,|L2.4608|
000f00  7b00              LDRB     r0,[r0,#0xc]
000f02  2802              CMP      r0,#2
000f04  dc02              BGT      |L2.3852|
                  |L2.3846|
;;;497                                    Trans_openBack.Trans_state[0]=0xFE;		//参数错误
000f06  20fe              MOVS     r0,#0xfe
000f08  49bc              LDR      r1,|L2.4604|
000f0a  7048              STRB     r0,[r1,#1]
                  |L2.3852|
;;;498                            }
;;;499    
;;;500                            if( GT2000_Tx.Gt2000_mode > 2 )
000f0c  48bd              LDR      r0,|L2.4612|
000f0e  7940              LDRB     r0,[r0,#5]  ; GT2000_Tx
000f10  2802              CMP      r0,#2
000f12  dd1a              BLE      |L2.3914|
;;;501                            {
;;;502                                if( (PC_Cmd.freq[8]>0x21 && PC_Cmd.freq[9]>0x85) || (PC_Cmd.freq[8]>=0x22) ||
000f14  48ba              LDR      r0,|L2.4608|
000f16  7c00              LDRB     r0,[r0,#0x10]
000f18  2821              CMP      r0,#0x21
000f1a  dd03              BLE      |L2.3876|
000f1c  48b8              LDR      r0,|L2.4608|
000f1e  7c40              LDRB     r0,[r0,#0x11]
000f20  2885              CMP      r0,#0x85
000f22  dc0f              BGT      |L2.3908|
                  |L2.3876|
000f24  48b6              LDR      r0,|L2.4608|
000f26  7c00              LDRB     r0,[r0,#0x10]
000f28  2822              CMP      r0,#0x22
000f2a  da0b              BGE      |L2.3908|
;;;503                                        (PC_Cmd.freq[8]<0x03 && PC_Cmd.freq[9]<0x20) || (PC_Cmd.freq[8]<=0x02) )
000f2c  48b4              LDR      r0,|L2.4608|
000f2e  7c00              LDRB     r0,[r0,#0x10]
000f30  2803              CMP      r0,#3
000f32  da03              BGE      |L2.3900|
000f34  48b2              LDR      r0,|L2.4608|
000f36  7c40              LDRB     r0,[r0,#0x11]
000f38  2820              CMP      r0,#0x20
000f3a  db03              BLT      |L2.3908|
                  |L2.3900|
000f3c  48b0              LDR      r0,|L2.4608|
000f3e  7c00              LDRB     r0,[r0,#0x10]
000f40  2802              CMP      r0,#2
000f42  dc02              BGT      |L2.3914|
                  |L2.3908|
;;;504                                    Trans_openBack.Trans_state[0]=0xFE;		//参数错误
000f44  20fe              MOVS     r0,#0xfe
000f46  49ad              LDR      r1,|L2.4604|
000f48  7048              STRB     r0,[r1,#1]
                  |L2.3914|
;;;505                            }
;;;506    
;;;507                            if( (PC_Cmd.freq[3]!=0x00) || (PC_Cmd.freq[7]!=0x00) || (PC_Cmd.freq[11]!=0x00) )
000f4a  48ad              LDR      r0,|L2.4608|
000f4c  7ac0              LDRB     r0,[r0,#0xb]
000f4e  b928              CBNZ     r0,|L2.3932|
000f50  48ab              LDR      r0,|L2.4608|
000f52  7bc0              LDRB     r0,[r0,#0xf]
000f54  b910              CBNZ     r0,|L2.3932|
000f56  48aa              LDR      r0,|L2.4608|
000f58  7cc0              LDRB     r0,[r0,#0x13]
000f5a  b110              CBZ      r0,|L2.3938|
                  |L2.3932|
;;;508                                Trans_openBack.Trans_state[0]=0xFE;		//参数错误
000f5c  20fe              MOVS     r0,#0xfe
000f5e  49a7              LDR      r1,|L2.4604|
000f60  7048              STRB     r0,[r1,#1]
                  |L2.3938|
;;;509    
;;;510                            if(Trans_openBack.Trans_state[0]==0xFE)		//参数错误
000f62  48a6              LDR      r0,|L2.4604|
000f64  7840              LDRB     r0,[r0,#1]  ; Trans_openBack
000f66  28fe              CMP      r0,#0xfe
000f68  d103              BNE      |L2.3954|
;;;511                            {
;;;512                                Trans_printf(" PC下发参数有误！ ");//会到最后，返回给PC
000f6a  a0a7              ADR      r0,|L2.4616|
000f6c  f7fffffe          BL       Trans_printf
000f70  e0a9              B        |L2.4294|
                  |L2.3954|
;;;513                            }
;;;514                            else	//参数正确
;;;515                            {
;;;516                                /*-----------------------------获取PC设置的数据，存储到MT2000_Tx-----------------------------------*/
;;;517                                switch( PC_Cmd.mode )	//工作种类，固频/双频/三频
000f72  48a3              LDR      r0,|L2.4608|
000f74  7800              LDRB     r0,[r0,#0]  ; PC_Cmd
000f76  2801              CMP      r0,#1
000f78  d004              BEQ      |L2.3972|
000f7a  2802              CMP      r0,#2
000f7c  d006              BEQ      |L2.3980|
000f7e  2803              CMP      r0,#3
000f80  d10c              BNE      |L2.3996|
000f82  e007              B        |L2.3988|
                  |L2.3972|
;;;518                                {
;;;519    																case 0x01:	GT2000_Tx.Gt2000_mode = 1;	break;  //将PC下发的工作模式存储在GT2000_Tx中
000f84  2001              MOVS     r0,#1
000f86  499f              LDR      r1,|L2.4612|
000f88  7148              STRB     r0,[r1,#5]
000f8a  e008              B        |L2.3998|
                  |L2.3980|
;;;520    																case 0x02:	GT2000_Tx.Gt2000_mode = 2;	break;
000f8c  2002              MOVS     r0,#2
000f8e  499d              LDR      r1,|L2.4612|
000f90  7148              STRB     r0,[r1,#5]
000f92  e004              B        |L2.3998|
                  |L2.3988|
;;;521    																case 0x03:	GT2000_Tx.Gt2000_mode = 3;	break;
000f94  2003              MOVS     r0,#3
000f96  499b              LDR      r1,|L2.4612|
000f98  7148              STRB     r0,[r1,#5]
000f9a  e000              B        |L2.3998|
                  |L2.3996|
;;;522    																default:	break;
000f9c  bf00              NOP      
                  |L2.3998|
000f9e  bf00              NOP                            ;519
;;;523                                }
;;;524    
;;;525                                GT2000_Tx.method = 'F';		//F
000fa0  2046              MOVS     r0,#0x46
000fa2  4998              LDR      r1,|L2.4612|
000fa4  7188              STRB     r0,[r1,#6]
;;;526    														Trans_printf(" PC下发的功率PC_Cmd.power= %d %d %d \n",PC_Cmd.power[0],PC_Cmd.power[1],PC_Cmd.power[2]);
000fa6  4896              LDR      r0,|L2.4608|
000fa8  7900              LDRB     r0,[r0,#4]
000faa  9005              STR      r0,[sp,#0x14]
000fac  4894              LDR      r0,|L2.4608|
000fae  78c0              LDRB     r0,[r0,#3]
000fb0  9004              STR      r0,[sp,#0x10]
000fb2  4893              LDR      r0,|L2.4608|
000fb4  7880              LDRB     r0,[r0,#2]  ; PC_Cmd
000fb6  9003              STR      r0,[sp,#0xc]
000fb8  4601              MOV      r1,r0
000fba  a098              ADR      r0,|L2.4636|
000fbc  e9dd2304          LDRD     r2,r3,[sp,#0x10]
000fc0  f7fffffe          BL       Trans_printf
;;;527                                Power_Range(&GT2000_Tx,PC_Cmd.power);   //将PC下发的幅度值转化为功率，并存储在GT2000_Tx中
000fc4  498e              LDR      r1,|L2.4608|
000fc6  1c89              ADDS     r1,r1,#2
000fc8  488e              LDR      r0,|L2.4612|
000fca  f7fffffe          BL       Power_Range
;;;528                                Trans_printf(" 获取到的power= %x %x \n",GT2000_Tx.Frequency_power[0],GT2000_Tx.Frequency_power[1]);
000fce  488d              LDR      r0,|L2.4612|
000fd0  f8900043          LDRB     r0,[r0,#0x43]
000fd4  9005              STR      r0,[sp,#0x14]
000fd6  488b              LDR      r0,|L2.4612|
000fd8  f8900042          LDRB     r0,[r0,#0x42]  ; GT2000_Tx
000fdc  9004              STR      r0,[sp,#0x10]
000fde  4601              MOV      r1,r0
000fe0  a098              ADR      r0,|L2.4676|
000fe2  9a05              LDR      r2,[sp,#0x14]
000fe4  f7fffffe          BL       Trans_printf
;;;529                               
;;;530    														/* 赋值频率 */ 
;;;531                                freq_hex_to_str(PC_Cmd.freq, 	GT2000_Tx.Gt2000_freq1);   //在此处将PC下发的频率数据赋值到Tx
000fe8  4986              LDR      r1,|L2.4612|
000fea  3124              ADDS     r1,r1,#0x24
000fec  4884              LDR      r0,|L2.4608|
000fee  3008              ADDS     r0,r0,#8
000ff0  f7fffffe          BL       freq_hex_to_str
;;;532                                freq_hex_to_str(PC_Cmd.freq+4,	GT2000_Tx.Gt2000_freq2);    //16进制转化为字符串
000ff4  4983              LDR      r1,|L2.4612|
000ff6  312e              ADDS     r1,r1,#0x2e
000ff8  4881              LDR      r0,|L2.4608|
000ffa  300c              ADDS     r0,r0,#0xc
000ffc  f7fffffe          BL       freq_hex_to_str
;;;533                                freq_hex_to_str(PC_Cmd.freq+8,	GT2000_Tx.Gt2000_freq3);
001000  4980              LDR      r1,|L2.4612|
001002  3138              ADDS     r1,r1,#0x38
001004  487e              LDR      r0,|L2.4608|
001006  3010              ADDS     r0,r0,#0x10
001008  f7fffffe          BL       freq_hex_to_str
;;;534    														
;;;535    //														Trans_printf(" 转化成的str1为freq1= %s \n",GT2000_Tx.Gt2000_freq1);
;;;536    //														Trans_printf(" 转化成的str2为freq2= %s \n",GT2000_Tx.Gt2000_freq2);
;;;537    //														Trans_printf(" 转化成的str3为freq3= %s \n",GT2000_Tx.Gt2000_freq3);
;;;538    														freq_PChex_to_GT2000(PC_Cmd.freq,GT2000_Tx.Gt2000_freq1);  //将字符串形式的数据转化为十六进制赋值给Gt2000_freq1
00100c  497d              LDR      r1,|L2.4612|
00100e  3124              ADDS     r1,r1,#0x24
001010  487b              LDR      r0,|L2.4608|
001012  3008              ADDS     r0,r0,#8
001014  f7fffffe          BL       freq_PChex_to_GT2000
;;;539    														freq_PChex_to_GT2000(PC_Cmd.freq+4,GT2000_Tx.Gt2000_freq2);  //将字符串形式的转化为十六进制
001018  497a              LDR      r1,|L2.4612|
00101a  312e              ADDS     r1,r1,#0x2e
00101c  4878              LDR      r0,|L2.4608|
00101e  300c              ADDS     r0,r0,#0xc
001020  f7fffffe          BL       freq_PChex_to_GT2000
;;;540    														freq_PChex_to_GT2000(PC_Cmd.freq+8,GT2000_Tx.Gt2000_freq3);  //将字符串形式的转化为十六进制
001024  4977              LDR      r1,|L2.4612|
001026  3138              ADDS     r1,r1,#0x38
001028  4875              LDR      r0,|L2.4608|
00102a  3010              ADDS     r0,r0,#0x10
00102c  f7fffffe          BL       freq_PChex_to_GT2000
;;;541    											
;;;542    														
;;;543    														Trans_printf(" PC频率转化为发射机频率后GT2000_Tx.Gt2000_freq1= %02x %02x freq2=%02x %02x freq3=%02x %02x \n",GT2000_Tx.Gt2000_freq1[0],\
001030  4874              LDR      r0,|L2.4612|
001032  f8900039          LDRB     r0,[r0,#0x39]
001036  4973              LDR      r1,|L2.4612|
001038  f8911038          LDRB     r1,[r1,#0x38]  ; GT2000_Tx
00103c  4a71              LDR      r2,|L2.4612|
00103e  f892202f          LDRB     r2,[r2,#0x2f]
001042  e9cd2100          STRD     r2,r1,[sp,#0]
001046  9002              STR      r0,[sp,#8]
001048  486e              LDR      r0,|L2.4612|
00104a  f890002e          LDRB     r0,[r0,#0x2e]  ; GT2000_Tx
00104e  9005              STR      r0,[sp,#0x14]
001050  486c              LDR      r0,|L2.4612|
001052  f8900025          LDRB     r0,[r0,#0x25]
001056  9004              STR      r0,[sp,#0x10]
001058  486a              LDR      r0,|L2.4612|
00105a  f8900024          LDRB     r0,[r0,#0x24]  ; GT2000_Tx
00105e  9003              STR      r0,[sp,#0xc]
001060  4601              MOV      r1,r0
001062  487e              LDR      r0,|L2.4700|
001064  e9dd2304          LDRD     r2,r3,[sp,#0x10]
001068  f7fffffe          BL       Trans_printf
;;;544    														GT2000_Tx.Gt2000_freq1[1],GT2000_Tx.Gt2000_freq2[0],GT2000_Tx.Gt2000_freq2[1],GT2000_Tx.Gt2000_freq3[0],GT2000_Tx.Gt2000_freq3[1]);
;;;545    
;;;546    														
;;;547                                if( (System.emission == 0x01) || (Alarm.emission==0x01) || (Alarm.no_respond==0x01) || (Alarm.no_power==0x01) || (Alarm.swr_alarm==0x01) || (Alarm.over_Electric==0x01) )
00106c  4862              LDR      r0,|L2.4600|
00106e  7d80              LDRB     r0,[r0,#0x16]  ; System
001070  2801              CMP      r0,#1
001072  d013              BEQ      |L2.4252|
001074  487a              LDR      r0,|L2.4704|
001076  7840              LDRB     r0,[r0,#1]  ; Alarm
001078  2801              CMP      r0,#1
00107a  d00f              BEQ      |L2.4252|
00107c  4878              LDR      r0,|L2.4704|
00107e  78c0              LDRB     r0,[r0,#3]  ; Alarm
001080  2801              CMP      r0,#1
001082  d00b              BEQ      |L2.4252|
001084  4876              LDR      r0,|L2.4704|
001086  7cc0              LDRB     r0,[r0,#0x13]  ; Alarm
001088  2801              CMP      r0,#1
00108a  d007              BEQ      |L2.4252|
00108c  4874              LDR      r0,|L2.4704|
00108e  7c40              LDRB     r0,[r0,#0x11]  ; Alarm
001090  2801              CMP      r0,#1
001092  d003              BEQ      |L2.4252|
001094  4872              LDR      r0,|L2.4704|
001096  7ac0              LDRB     r0,[r0,#0xb]  ; Alarm
001098  2801              CMP      r0,#1
00109a  d106              BNE      |L2.4266|
                  |L2.4252|
;;;548                                {  //正在发射，无响应，无功率，驻波比报警，过流报警。均返回发射失败
;;;549    																Trans_openBack.Trans_state[0]=0xFC;		//发射失败
00109c  20fc              MOVS     r0,#0xfc
00109e  4957              LDR      r1,|L2.4604|
0010a0  7048              STRB     r0,[r1,#1]
;;;550    															  Trans_printf(" 正在发射，无响应，无功率，驻波比报警，过流报警。均返回发射失败 ");
0010a2  4870              LDR      r0,|L2.4708|
0010a4  f7fffffe          BL       Trans_printf
0010a8  e00d              B        |L2.4294|
                  |L2.4266|
;;;551                                }
;;;552                                else
;;;553                                {
;;;554                                    System.stop = 0x00;
0010aa  2000              MOVS     r0,#0
0010ac  4952              LDR      r1,|L2.4600|
0010ae  7548              STRB     r0,[r1,#0x15]
;;;555                                    System.cancel_sweeping = 0x00;
0010b0  73c8              STRB     r0,[r1,#0xf]
;;;556                                    Trans_openBack.Trans_state[0]=0xFD;		//表示接收到了指令，但是需要时间去调频，等待再次查询
0010b2  20fd              MOVS     r0,#0xfd
0010b4  4951              LDR      r1,|L2.4604|
0010b6  7048              STRB     r0,[r1,#1]
;;;557                                    xTaskNotify(xHandleTask_MT2000,			//发射
0010b8  2300              MOVS     r3,#0
0010ba  2201              MOVS     r2,#1
0010bc  2108              MOVS     r1,#8
0010be  486a              LDR      r0,|L2.4712|
0010c0  6800              LDR      r0,[r0,#0]  ; xHandleTask_MT2000
0010c2  f7fffffe          BL       xTaskGenericNotify
                  |L2.4294|
;;;558                                                BIT_3,             
;;;559                                                eSetBits);  //创建事件3通知Task_MT2000.c开发射。
;;;560                                }
;;;561                            }
;;;562                        }
;;;563    
;;;564                        Send_PC(g_fuc_codToPC);
0010c6  4869              LDR      r0,|L2.4716|
0010c8  f7fffffe          BL       Send_PC
                  |L2.4300|
0010cc  e5e3              B        |L2.3222|
                  |L2.4302|
;;;565                    }
;;;566                    else	if(g_fuc_cod[0]==0x04&&g_fuc_cod[1]==0x01)		//停止发射
0010ce  4868              LDR      r0,|L2.4720|
0010d0  7800              LDRB     r0,[r0,#0]  ; g_fuc_cod
0010d2  2804              CMP      r0,#4
0010d4  d14d              BNE      |L2.4466|
0010d6  4866              LDR      r0,|L2.4720|
0010d8  7840              LDRB     r0,[r0,#1]  ; g_fuc_cod
0010da  2801              CMP      r0,#1
0010dc  d149              BNE      |L2.4466|
;;;567                    {
;;;568                        Time_Printf( (RTC_GetCounter()+g_stamp_distance), &set_time );
0010de  f7fffffe          BL       RTC_GetCounter
0010e2  4964              LDR      r1,|L2.4724|
0010e4  6809              LDR      r1,[r1,#0]  ; g_stamp_distance
0010e6  4408              ADD      r0,r0,r1
0010e8  4963              LDR      r1,|L2.4728|
0010ea  9005              STR      r0,[sp,#0x14]
0010ec  f7fffffe          BL       Time_Printf
;;;569    
;;;570                        Trans_stopBack.Transmitte_id[0] = System.CAN_ID[0];
0010f0  4841              LDR      r0,|L2.4600|
0010f2  7800              LDRB     r0,[r0,#0]  ; System
0010f4  4961              LDR      r1,|L2.4732|
0010f6  7008              STRB     r0,[r1,#0]
;;;571                        g_fuc_codToPC[0]=0x04;
0010f8  2004              MOVS     r0,#4
0010fa  495c              LDR      r1,|L2.4716|
0010fc  7008              STRB     r0,[r1,#0]
;;;572                        g_fuc_codToPC[1]=0x02;
0010fe  2002              MOVS     r0,#2
001100  7048              STRB     r0,[r1,#1]
;;;573    
;;;574                        //没有正在停止的指令，所以，如果是已经停止了，则直接返回，否则等待停止结果再返回
;;;575                        if( System.emission != 0x01 )
001102  483d              LDR      r0,|L2.4600|
001104  7d80              LDRB     r0,[r0,#0x16]  ; System
001106  2801              CMP      r0,#1
001108  d00d              BEQ      |L2.4390|
;;;576                        {
;;;577                            Trans_stopBack.Trans_state[0]=0xFC;	//已经是停止状态
00110a  20fc              MOVS     r0,#0xfc
00110c  495b              LDR      r1,|L2.4732|
00110e  7048              STRB     r0,[r1,#1]
;;;578    
;;;579                            System.achieve_add_sub = 0;
001110  2000              MOVS     r0,#0
001112  4939              LDR      r1,|L2.4600|
001114  7448              STRB     r0,[r1,#0x11]
;;;580                            System.modify_power = 0;
001116  7488              STRB     r0,[r1,#0x12]
;;;581                            System.cancel_add_sub = 0;
001118  74c8              STRB     r0,[r1,#0x13]
;;;582                            System_Status_Clean();
00111a  f7fffffe          BL       System_Status_Clean
;;;583    											Trans_printf(" 停止发射__已经是停止状态 ");
00111e  a058              ADR      r0,|L2.4736|
001120  f7fffffe          BL       Trans_printf
001124  e021              B        |L2.4458|
                  |L2.4390|
;;;584                        }
;;;585                        else
;;;586                        {
;;;587                            System.stop = 0x01;
001126  2001              MOVS     r0,#1
001128  4933              LDR      r1,|L2.4600|
00112a  7548              STRB     r0,[r1,#0x15]
;;;588    
;;;589                            //App_printf("Task_Upper_Computer Stop Notify!\r\n");
;;;590                            xTaskNotify(xHandleTask_MT2000,		//停止发射
00112c  2300              MOVS     r3,#0
00112e  2201              MOVS     r2,#1
001130  4611              MOV      r1,r2
001132  484d              LDR      r0,|L2.4712|
001134  6800              LDR      r0,[r0,#0]  ; xHandleTask_MT2000
001136  f7fffffe          BL       xTaskGenericNotify
;;;591                                        BIT_0,
;;;592                                        eSetBits);
;;;593    
;;;594                            Trans_stopBack.Trans_state[0]=0x02;//等待前先置位为停止失败
00113a  2002              MOVS     r0,#2
00113c  494f              LDR      r1,|L2.4732|
00113e  7048              STRB     r0,[r1,#1]
;;;595                            for(k=0; k<40; k++)
001140  2000              MOVS     r0,#0
001142  9008              STR      r0,[sp,#0x20]
001144  e00a              B        |L2.4444|
                  |L2.4422|
;;;596                            {
;;;597                                if( System.emission==0x00 )	//停止发射，退出等待
001146  482c              LDR      r0,|L2.4600|
001148  7d80              LDRB     r0,[r0,#0x16]  ; System
00114a  b900              CBNZ     r0,|L2.4430|
;;;598                                    break;
00114c  e009              B        |L2.4450|
                  |L2.4430|
;;;599                                else
;;;600                                    vTaskDelay(50);
00114e  2032              MOVS     r0,#0x32
001150  f7fffffe          BL       vTaskDelay
001154  9808              LDR      r0,[sp,#0x20]         ;595
001156  1c40              ADDS     r0,r0,#1              ;595
001158  b2c0              UXTB     r0,r0                 ;595
00115a  9008              STR      r0,[sp,#0x20]         ;595
                  |L2.4444|
00115c  9808              LDR      r0,[sp,#0x20]         ;595
00115e  2828              CMP      r0,#0x28              ;595
001160  dbf1              BLT      |L2.4422|
                  |L2.4450|
001162  bf00              NOP                            ;598
;;;601                            }
;;;602    												Trans_printf(" 停止发射__触发BIT_0 ");
001164  a04d              ADR      r0,|L2.4764|
001166  f7fffffe          BL       Trans_printf
                  |L2.4458|
;;;603                        }
;;;604    										
;;;605                        Send_PC(g_fuc_codToPC);
00116a  4840              LDR      r0,|L2.4716|
00116c  f7fffffe          BL       Send_PC
001170  e591              B        |L2.3222|
                  |L2.4466|
;;;606                    }
;;;607                    else	if(g_fuc_cod[0]==0x05&&g_fuc_cod[1]==0x01)		//解除报警
001172  483f              LDR      r0,|L2.4720|
001174  7800              LDRB     r0,[r0,#0]  ; g_fuc_cod
001176  2805              CMP      r0,#5
001178  d13c              BNE      |L2.4596|
00117a  483d              LDR      r0,|L2.4720|
00117c  7840              LDRB     r0,[r0,#1]  ; g_fuc_cod
00117e  2801              CMP      r0,#1
001180  d138              BNE      |L2.4596|
;;;608                    {
;;;609                        Time_Printf( (RTC_GetCounter()+g_stamp_distance), &set_time );
001182  f7fffffe          BL       RTC_GetCounter
001186  493b              LDR      r1,|L2.4724|
001188  6809              LDR      r1,[r1,#0]  ; g_stamp_distance
00118a  4408              ADD      r0,r0,r1
00118c  493a              LDR      r1,|L2.4728|
00118e  9005              STR      r0,[sp,#0x14]
001190  f7fffffe          BL       Time_Printf
;;;610    
;;;611                        //App_printf("PC DisAlarm\r\n");
;;;612                        DisalarmBack.Transmitte_id[0]=System.CAN_ID[0];
001194  4818              LDR      r0,|L2.4600|
001196  7800              LDRB     r0,[r0,#0]  ; System
001198  4946              LDR      r1,|L2.4788|
00119a  7008              STRB     r0,[r1,#0]
;;;613                        g_fuc_codToPC[0]=0x05;
00119c  2005              MOVS     r0,#5
00119e  4933              LDR      r1,|L2.4716|
0011a0  7008              STRB     r0,[r1,#0]
;;;614                        g_fuc_codToPC[1]=0x02;
0011a2  2002              MOVS     r0,#2
0011a4  7048              STRB     r0,[r1,#1]
;;;615    
;;;616    										emission_alarm_content_clean();		//解除报警，则具体的内容清零
0011a6  f7fffffe          BL       emission_alarm_content_clean
;;;617    					
;;;618                        GT2000_Buffer_Clean();
0011aa  f7fffffe          BL       GT2000_Buffer_Clean
;;;619                        memset(DisalarmBack.current_alarm_state, 0, 2);
0011ae  4841              LDR      r0,|L2.4788|
0011b0  2100              MOVS     r1,#0
0011b2  f8a01003          STRH     r1,[r0,#3]
;;;620                        if(get_history_alarm()==0)	//没有报警
0011b6  f7fffffe          BL       get_history_alarm
0011ba  b918              CBNZ     r0,|L2.4548|
;;;621                        {
;;;622                            DisalarmBack.Disalarm_result[0]=0xFD;
0011bc  20fd              MOVS     r0,#0xfd
0011be  493d              LDR      r1,|L2.4788|
0011c0  7048              STRB     r0,[r1,#1]
0011c2  e00f              B        |L2.4580|
                  |L2.4548|
;;;623                        }
;;;624                        else     					//有报警
;;;625                        {
;;;626    											DisalarmBack.Disalarm_result[0]=0xFE;	//解除报警成功
0011c4  20fe              MOVS     r0,#0xfe
0011c6  493b              LDR      r1,|L2.4788|
0011c8  7048              STRB     r0,[r1,#1]
;;;627    											
;;;628    											if(Alarm.emission==1)		//若有功放返回的报警		（待测试）
0011ca  4825              LDR      r0,|L2.4704|
0011cc  7840              LDRB     r0,[r0,#1]  ; Alarm
0011ce  2801              CMP      r0,#1
0011d0  d104              BNE      |L2.4572|
;;;629    											{
;;;630    												Gt2000_Reset();		//复位功放
0011d2  f7fffffe          BL       Gt2000_Reset
;;;631    												Trans_printf(" 功放复位 \n");
0011d6  a038              ADR      r0,|L2.4792|
0011d8  f7fffffe          BL       Trans_printf
                  |L2.4572|
;;;632    											}
;;;633    											
;;;634    											clean_all_alarm_flags();				//清除所有报警标志位
0011dc  f7fffffe          BL       clean_all_alarm_flags
;;;635    
;;;636    											GT2000_Buffer_Clean();					//解除报警，清空bj2000的Buffer
0011e0  f7fffffe          BL       GT2000_Buffer_Clean
                  |L2.4580|
;;;637                        }
;;;638    
;;;639                        if( System.already_init == 0x00 )			//就算报警解除了，也不一定是待机或者关机状态，有可能是未初始化时报的警
0011e4  4804              LDR      r0,|L2.4600|
0011e6  7880              LDRB     r0,[r0,#2]  ; System
0011e8  b918              CBNZ     r0,|L2.4594|
;;;640                        {
;;;641                            System.status = SYSTEM_UNINITIALIZE;
0011ea  2010              MOVS     r0,#0x10
0011ec  4902              LDR      r1,|L2.4600|
0011ee  72c8              STRB     r0,[r1,#0xb]
0011f0  e0b3              B        |L2.4954|
                  |L2.4594|
0011f2  e067              B        |L2.4804|
                  |L2.4596|
0011f4  e0b9              B        |L2.4970|
0011f6  0000              DCW      0x0000
                  |L2.4600|
                          DCD      System
                  |L2.4604|
                          DCD      Trans_openBack
                  |L2.4608|
                          DCD      PC_Cmd
                  |L2.4612|
                          DCD      GT2000_Tx
                  |L2.4616|
001208  205043cf          DCB      " PC",207,194,183,162,178,206,202,253,211,208,206,243,163
00120c  c2b7a2b2
001210  cecafdd3
001214  d0cef3a3
001218  a12000            DCB      161," ",0
00121b  00                DCB      0
                  |L2.4636|
00121c  205043cf          DCB      " PC",207,194,183,162,181,196,185,166,194,202,"PC_Cmd.po"
001220  c2b7a2b5
001224  c4b9a6c2
001228  ca50435f
00122c  436d642e
001230  706f    
001232  7765723d          DCB      "wer= %d %d %d \n",0
001236  20256420
00123a  25642025
00123e  64200a00
001242  00                DCB      0
001243  00                DCB      0
                  |L2.4676|
001244  20bbf1c8          DCB      " ",187,241,200,161,181,189,181,196,"power= %x %x \n",0
001248  a1b5bdb5
00124c  c4706f77
001250  65723d20
001254  25782025
001258  78200a00
                  |L2.4700|
                          DCD      ||.conststring||+0xe0
                  |L2.4704|
                          DCD      Alarm
                  |L2.4708|
                          DCD      ||.conststring||+0x140
                  |L2.4712|
                          DCD      xHandleTask_MT2000
                  |L2.4716|
                          DCD      g_fuc_codToPC
                  |L2.4720|
                          DCD      g_fuc_cod
                  |L2.4724|
                          DCD      g_stamp_distance
                  |L2.4728|
                          DCD      set_time
                  |L2.4732|
                          DCD      Trans_stopBack
                  |L2.4736|
001280  20cda3d6          DCB      " ",205,163,214,185,183,162,201,228,"__",210,209,190,173
001284  b9b7a2c9
001288  e45f5fd2
00128c  d1bead  
00128f  cac7cda3          DCB      202,199,205,163,214,185,215,180,204,172," ",0
001293  d6b9d7b4
001297  ccac2000
00129b  00                DCB      0
                  |L2.4764|
00129c  20cda3d6          DCB      " ",205,163,214,185,183,162,201,228,"__",180,165,183,162
0012a0  b9b7a2c9
0012a4  e45f5fb4
0012a8  a5b7a2  
0012ab  4249545f          DCB      "BIT_0 ",0
0012af  302000  
0012b2  00                DCB      0
0012b3  00                DCB      0
                  |L2.4788|
                          DCD      DisalarmBack
                  |L2.4792|
0012b8  20b9a6b7          DCB      " ",185,166,183,197,184,180,206,187," \n",0
0012bc  c5b8b4ce
0012c0  bb200a00
                  |L2.4804|
;;;642                        }
;;;643                        else	if( System.Voltage > 40.0 )
0012c4  48fe              LDR      r0,|L2.5824|
0012c6  6f40              LDR      r0,[r0,#0x74]  ; System
0012c8  9003              STR      r0,[sp,#0xc]
0012ca  f7fffffe          BL       __aeabi_f2d
0012ce  2200              MOVS     r2,#0
0012d0  4bfc              LDR      r3,|L2.5828|
0012d2  e9cd0104          STRD     r0,r1,[sp,#0x10]
0012d6  f7fffffe          BL       __aeabi_cdrcmple
0012da  d230              BCS      |L2.4926|
;;;644                        {
;;;645                            System.open = 0x02;
0012dc  2002              MOVS     r0,#2
0012de  49f8              LDR      r1,|L2.5824|
0012e0  7308              STRB     r0,[r1,#0xc]
;;;646    
;;;647                            if( get_history_alarm() == 0x01 )
0012e2  f7fffffe          BL       get_history_alarm
0012e6  2801              CMP      r0,#1
0012e8  d103              BNE      |L2.4850|
;;;648                            {
;;;649                                System.status = SYSTEM_ALARM;
0012ea  2011              MOVS     r0,#0x11
0012ec  49f4              LDR      r1,|L2.5824|
0012ee  72c8              STRB     r0,[r1,#0xb]
0012f0  e033              B        |L2.4954|
                  |L2.4850|
;;;650                            }
;;;651                            else	if( (System.emission == 0x01) && (System.Forward_Power>100.0) )
0012f2  48f3              LDR      r0,|L2.5824|
0012f4  7d80              LDRB     r0,[r0,#0x16]  ; System
0012f6  2801              CMP      r0,#1
0012f8  d117              BNE      |L2.4906|
0012fa  48f1              LDR      r0,|L2.5824|
0012fc  6ec0              LDR      r0,[r0,#0x6c]  ; System
0012fe  9003              STR      r0,[sp,#0xc]
001300  f7fffffe          BL       __aeabi_f2d
001304  2200              MOVS     r2,#0
001306  4bf0              LDR      r3,|L2.5832|
001308  e9cd0104          STRD     r0,r1,[sp,#0x10]
00130c  f7fffffe          BL       __aeabi_cdrcmple
001310  d20b              BCS      |L2.4906|
;;;652                            {
;;;653                                if( System.sweep == 0x01 )				//正在扫频(扫频时大报警，会清除正在扫频标志位)
001312  48eb              LDR      r0,|L2.5824|
001314  7b80              LDRB     r0,[r0,#0xe]  ; System
001316  2801              CMP      r0,#1
001318  d103              BNE      |L2.4898|
;;;654                                    System.status = SYSTEM_SCAN;
00131a  2005              MOVS     r0,#5
00131c  49e8              LDR      r1,|L2.5824|
00131e  72c8              STRB     r0,[r1,#0xb]
001320  e01b              B        |L2.4954|
                  |L2.4898|
;;;655                                else
;;;656                                    System.status = SYSTEM_EMISSING;	//如果不是扫频，发射功率还不为0，只能是发射状态
001322  2001              MOVS     r0,#1
001324  49e6              LDR      r1,|L2.5824|
001326  72c8              STRB     r0,[r1,#0xb]
001328  e017              B        |L2.4954|
                  |L2.4906|
;;;657                            }
;;;658                            else	if( System.status == SYSTEM_EMISSING )
00132a  48e5              LDR      r0,|L2.5824|
00132c  7ac0              LDRB     r0,[r0,#0xb]  ; System
00132e  2801              CMP      r0,#1
001330  d013              BEQ      |L2.4954|
;;;659                            {
;;;660    
;;;661                            }
;;;662                            else
;;;663                            {
;;;664                                System.emission = 0x00;   //未发射
001332  2000              MOVS     r0,#0
001334  49e2              LDR      r1,|L2.5824|
001336  7588              STRB     r0,[r1,#0x16]
;;;665                                System.status = SYSTEM_STANDBY;			//查询时，开机了，不一定是待机，有可能是发射/增减功率/扫频等。
001338  2002              MOVS     r0,#2
00133a  72c8              STRB     r0,[r1,#0xb]
00133c  e00d              B        |L2.4954|
                  |L2.4926|
;;;666                            }
;;;667                        }
;;;668                        else
;;;669                        {
;;;670                            System.open = 0x00;
00133e  2000              MOVS     r0,#0
001340  49df              LDR      r1,|L2.5824|
001342  7308              STRB     r0,[r1,#0xc]
;;;671    
;;;672                            if( get_history_alarm() == 0x01 )
001344  f7fffffe          BL       get_history_alarm
001348  2801              CMP      r0,#1
00134a  d103              BNE      |L2.4948|
;;;673                            {
;;;674                                System.status = SYSTEM_ALARM;
00134c  2011              MOVS     r0,#0x11
00134e  49dc              LDR      r1,|L2.5824|
001350  72c8              STRB     r0,[r1,#0xb]
001352  e002              B        |L2.4954|
                  |L2.4948|
;;;675                            }
;;;676                            else
;;;677                            {
;;;678                                System.status = SYSTEM_SHUTDOWN;
001354  2004              MOVS     r0,#4
001356  49da              LDR      r1,|L2.5824|
001358  72c8              STRB     r0,[r1,#0xb]
                  |L2.4954|
;;;679                            }
;;;680                        }
;;;681    
;;;682                        Alarm.no_respond_locate = 0;
00135a  2000              MOVS     r0,#0
00135c  49db              LDR      r1,|L2.5836|
00135e  7188              STRB     r0,[r1,#6]
;;;683                        Alarm.no_respond_count = 0;
001360  7148              STRB     r0,[r1,#5]
;;;684                
;;;685                        Send_PC(g_fuc_codToPC);
001362  48db              LDR      r0,|L2.5840|
001364  f7fffffe          BL       Send_PC
001368  e495              B        |L2.3222|
                  |L2.4970|
;;;686                    }
;;;687                    else	if(g_fuc_cod[0]==0x06&&g_fuc_cod[1]==0x01)		//报警查询
00136a  48da              LDR      r0,|L2.5844|
00136c  7800              LDRB     r0,[r0,#0]  ; g_fuc_cod
00136e  2806              CMP      r0,#6
001370  d122              BNE      |L2.5048|
001372  48d8              LDR      r0,|L2.5844|
001374  7840              LDRB     r0,[r0,#1]  ; g_fuc_cod
001376  2801              CMP      r0,#1
001378  d11e              BNE      |L2.5048|
;;;688                    {
;;;689                        Time_Printf( (RTC_GetCounter()+g_stamp_distance), &set_time );
00137a  f7fffffe          BL       RTC_GetCounter
00137e  49d6              LDR      r1,|L2.5848|
001380  6809              LDR      r1,[r1,#0]  ; g_stamp_distance
001382  4408              ADD      r0,r0,r1
001384  49d5              LDR      r1,|L2.5852|
001386  9005              STR      r0,[sp,#0x14]
001388  f7fffffe          BL       Time_Printf
;;;690                        Alarm_historyBack.Transmitte_id[0]=	System.CAN_ID[0];
00138c  48cc              LDR      r0,|L2.5824|
00138e  7800              LDRB     r0,[r0,#0]  ; System
001390  49d3              LDR      r1,|L2.5856|
001392  7008              STRB     r0,[r1,#0]
;;;691    										Alarm_historyBack.Alarm_reservation[0]=0xFF;
001394  20ff              MOVS     r0,#0xff
001396  f881006f          STRB     r0,[r1,#0x6f]
;;;692    								 	  Alarm_historyBack.Alarm_reservation[1]=0xFF;//赋值预留位位0xff，暂时当分割线用
00139a  21ff              MOVS     r1,#0xff
00139c  48d0              LDR      r0,|L2.5856|
00139e  f8801070          STRB     r1,[r0,#0x70]
;;;693                        g_fuc_codToPC[0]=0x06;
0013a2  2006              MOVS     r0,#6
0013a4  49ca              LDR      r1,|L2.5840|
0013a6  7008              STRB     r0,[r1,#0]
;;;694                        g_fuc_codToPC[1]=0x02;
0013a8  2002              MOVS     r0,#2
0013aa  7048              STRB     r0,[r1,#1]
;;;695                        set_alarm_bit();
0013ac  f7fffffe          BL       set_alarm_bit
;;;696                        Send_PC(g_fuc_codToPC);
0013b0  48c7              LDR      r0,|L2.5840|
0013b2  f7fffffe          BL       Send_PC
0013b6  e46e              B        |L2.3222|
                  |L2.5048|
;;;697    
;;;698                        //直接返回，不查询激励器
;;;699                    }
;;;700                    else	if(g_fuc_cod[0]==0x07&&g_fuc_cod[1]==0x01)		//发射机开机
0013b8  48c6              LDR      r0,|L2.5844|
0013ba  7800              LDRB     r0,[r0,#0]  ; g_fuc_cod
0013bc  2807              CMP      r0,#7
0013be  d167              BNE      |L2.5264|
0013c0  48c4              LDR      r0,|L2.5844|
0013c2  7840              LDRB     r0,[r0,#1]  ; g_fuc_cod
0013c4  2801              CMP      r0,#1
0013c6  d163              BNE      |L2.5264|
;;;701                    {
;;;702                        Time_Printf( (RTC_GetCounter()+g_stamp_distance), &set_time );
0013c8  f7fffffe          BL       RTC_GetCounter
0013cc  49c2              LDR      r1,|L2.5848|
0013ce  6809              LDR      r1,[r1,#0]  ; g_stamp_distance
0013d0  4408              ADD      r0,r0,r1
0013d2  49c2              LDR      r1,|L2.5852|
0013d4  9005              STR      r0,[sp,#0x14]
0013d6  f7fffffe          BL       Time_Printf
;;;703    
;;;704                        Power_onBack.Transmitte_id[0]=System.CAN_ID[0];
0013da  48b9              LDR      r0,|L2.5824|
0013dc  7800              LDRB     r0,[r0,#0]  ; System
0013de  49c1              LDR      r1,|L2.5860|
0013e0  7008              STRB     r0,[r1,#0]
;;;705                        g_fuc_codToPC[0]=0x07;
0013e2  2007              MOVS     r0,#7
0013e4  49ba              LDR      r1,|L2.5840|
0013e6  7008              STRB     r0,[r1,#0]
;;;706                        g_fuc_codToPC[1]=0x02;
0013e8  2002              MOVS     r0,#2
0013ea  7048              STRB     r0,[r1,#1]
;;;707    
;;;708    					          if( System.open == 0x02 )			//已经开机，再发开机指令(开机了不一定是待机状态，但是开机指令已经开机了，一定是待机，充分不必要)
0013ec  48b4              LDR      r0,|L2.5824|
0013ee  7b00              LDRB     r0,[r0,#0xc]  ; System
0013f0  2802              CMP      r0,#2
0013f2  d103              BNE      |L2.5116|
;;;709                        {
;;;710                            Power_onBack.results[0]=0xFC;
0013f4  20fc              MOVS     r0,#0xfc
0013f6  49bb              LDR      r1,|L2.5860|
0013f8  7048              STRB     r0,[r1,#1]
0013fa  e03e              B        |L2.5242|
                  |L2.5116|
;;;711                            //App_printf("system open alreadly 1!\n");
;;;712                        }
;;;713                        else	if( System.open == 0x00 )	//关机了，需要执行开机
0013fc  48b0              LDR      r0,|L2.5824|
0013fe  7b00              LDRB     r0,[r0,#0xc]  ; System
001400  bb80              CBNZ     r0,|L2.5220|
;;;714                        {
;;;715                            //开机命令的时候判断开机结果Power_onBack.results[0]，是因为关机之后需要处理，不能马上开机
;;;716                            //(除了硬件接管Task_Hardware_Monitor()和Task_MT2000()的关机操作，只在BJ2000_Open()和BJ2000_Close()修改Power_onBack.results[0]的值)
;;;717                            if( Power_onBack.results[0] == 0xFD )
001402  48b8              LDR      r0,|L2.5860|
001404  7840              LDRB     r0,[r0,#1]  ; Power_onBack
001406  28fd              CMP      r0,#0xfd
001408  d106              BNE      |L2.5144|
;;;718                            {
;;;719                                Power_onBack.results[0] = 0x00;						
00140a  2000              MOVS     r0,#0
00140c  49b5              LDR      r1,|L2.5860|
00140e  7048              STRB     r0,[r1,#1]
;;;720    														System.status = SYSTEM_SHUTDOWN;						
001410  2004              MOVS     r0,#4
001412  49ab              LDR      r1,|L2.5824|
001414  72c8              STRB     r0,[r1,#0xb]
001416  e030              B        |L2.5242|
                  |L2.5144|
;;;721                            }
;;;722                            else	if( System.Voltage > 40.0 )
001418  48a9              LDR      r0,|L2.5824|
00141a  6f40              LDR      r0,[r0,#0x74]  ; System
00141c  9003              STR      r0,[sp,#0xc]
00141e  f7fffffe          BL       __aeabi_f2d
001422  2200              MOVS     r2,#0
001424  4ba7              LDR      r3,|L2.5828|
001426  e9cd0104          STRD     r0,r1,[sp,#0x10]
00142a  f7fffffe          BL       __aeabi_cdrcmple
00142e  d209              BCS      |L2.5188|
;;;723                            {
;;;724                                System.open = 0x02;
001430  2002              MOVS     r0,#2
001432  49a3              LDR      r1,|L2.5824|
001434  7308              STRB     r0,[r1,#0xc]
;;;725                                Power_onBack.results[0]=0xFC;
001436  20fc              MOVS     r0,#0xfc
001438  49aa              LDR      r1,|L2.5860|
00143a  7048              STRB     r0,[r1,#1]
;;;726    														System.status = SYSTEM_STANDBY;                          
00143c  2002              MOVS     r0,#2
00143e  49a0              LDR      r1,|L2.5824|
001440  72c8              STRB     r0,[r1,#0xb]
001442  e01a              B        |L2.5242|
                  |L2.5188|
;;;727                            }
;;;728                            else
;;;729                            {
;;;730                                System.open = 0x01;
001444  2001              MOVS     r0,#1
001446  499e              LDR      r1,|L2.5824|
001448  7308              STRB     r0,[r1,#0xc]
;;;731                                System.status = SYSTEM_OPENING;	//更新系统状态为正在开机状态(查询时的判据)
00144a  2006              MOVS     r0,#6
00144c  72c8              STRB     r0,[r1,#0xb]
;;;732                                Power_onBack.results[0]=0xFE;	//正在开机(激励器应答之后会更新，如果失败则赋值为0xFD)
00144e  20fe              MOVS     r0,#0xfe
001450  49a4              LDR      r1,|L2.5860|
001452  7048              STRB     r0,[r1,#1]
;;;733                                xTaskNotify(xHandleTask_MT2000,	//开机
001454  2300              MOVS     r3,#0
001456  2201              MOVS     r2,#1
001458  1c81              ADDS     r1,r0,#2
00145a  48a3              LDR      r0,|L2.5864|
00145c  6800              LDR      r0,[r0,#0]  ; xHandleTask_MT2000
00145e  f7fffffe          BL       xTaskGenericNotify
001462  e00a              B        |L2.5242|
                  |L2.5220|
001464  e7ff              B        |L2.5222|
                  |L2.5222|
;;;734                                            BIT_8,
;;;735                                            eSetBits);
;;;736                            }
;;;737                        }
;;;738                        else	if( System.open == 0x01 )	//正在开机时，又发送开机指令
001466  4896              LDR      r0,|L2.5824|
001468  7b00              LDRB     r0,[r0,#0xc]  ; System
00146a  2801              CMP      r0,#1
00146c  d105              BNE      |L2.5242|
;;;739                        {
;;;740                            System.status = SYSTEM_OPENING;	//正在开机状态(肯定是开机状态，再赋值，鲁棒性)
00146e  2006              MOVS     r0,#6
001470  4993              LDR      r1,|L2.5824|
001472  72c8              STRB     r0,[r1,#0xb]
;;;741                            Power_onBack.results[0]=0xFE;
001474  20fe              MOVS     r0,#0xfe
001476  499b              LDR      r1,|L2.5860|
001478  7048              STRB     r0,[r1,#1]
                  |L2.5242|
;;;742                        }
;;;743    
;;;744    										if( get_history_alarm() == 0x01 )				//报警
00147a  f7fffffe          BL       get_history_alarm
00147e  2801              CMP      r0,#1
001480  d102              BNE      |L2.5256|
;;;745    										{
;;;746    											System.status = SYSTEM_ALARM;
001482  2011              MOVS     r0,#0x11
001484  498e              LDR      r1,|L2.5824|
001486  72c8              STRB     r0,[r1,#0xb]
                  |L2.5256|
;;;747    										}
;;;748    						
;;;749                        Send_PC(g_fuc_codToPC);
001488  4891              LDR      r0,|L2.5840|
00148a  f7fffffe          BL       Send_PC
00148e  e61d              B        |L2.4300|
                  |L2.5264|
;;;750                    }
;;;751                    else	if(g_fuc_cod[0]==0x08&&g_fuc_cod[1]==0x01)		//发射机关机
001490  4890              LDR      r0,|L2.5844|
001492  7800              LDRB     r0,[r0,#0]  ; g_fuc_cod
001494  2808              CMP      r0,#8
001496  d14e              BNE      |L2.5430|
001498  488e              LDR      r0,|L2.5844|
00149a  7840              LDRB     r0,[r0,#1]  ; g_fuc_cod
00149c  2801              CMP      r0,#1
00149e  d14a              BNE      |L2.5430|
;;;752                    {
;;;753                        Power_offBack.Transmitte_id[0]=System.CAN_ID[0];
0014a0  4887              LDR      r0,|L2.5824|
0014a2  7800              LDRB     r0,[r0,#0]  ; System
0014a4  4991              LDR      r1,|L2.5868|
0014a6  7008              STRB     r0,[r1,#0]
;;;754                        g_fuc_codToPC[0]=0x08;
0014a8  2008              MOVS     r0,#8
0014aa  4989              LDR      r1,|L2.5840|
0014ac  7008              STRB     r0,[r1,#0]
;;;755                        g_fuc_codToPC[1]=0x02;
0014ae  2002              MOVS     r0,#2
0014b0  7048              STRB     r0,[r1,#1]
;;;756    
;;;757                        if( System.emission == 0x01 )
0014b2  4883              LDR      r0,|L2.5824|
0014b4  7d80              LDRB     r0,[r0,#0x16]  ; System
0014b6  2801              CMP      r0,#1
0014b8  d103              BNE      |L2.5314|
;;;758                        {
;;;759                            Power_offBack.results[0]=0xFD;				//需要报错，关机失败
0014ba  20fd              MOVS     r0,#0xfd
0014bc  498b              LDR      r1,|L2.5868|
0014be  7048              STRB     r0,[r1,#1]
0014c0  e035              B        |L2.5422|
                  |L2.5314|
;;;760                        }
;;;761                        else	if( System.status == SYSTEM_SHUTDOWN )	//已经关机
0014c2  487f              LDR      r0,|L2.5824|
0014c4  7ac0              LDRB     r0,[r0,#0xb]  ; System
0014c6  2804              CMP      r0,#4
0014c8  d108              BNE      |L2.5340|
;;;762                        {
;;;763                            System.open = 0x00;
0014ca  2000              MOVS     r0,#0
0014cc  497c              LDR      r1,|L2.5824|
0014ce  7308              STRB     r0,[r1,#0xc]
;;;764    												System.Voltage = 0.0;
0014d0  6748              STR      r0,[r1,#0x74]  ; System
;;;765    												System.Electricity = 0.0;
0014d2  6788              STR      r0,[r1,#0x78]  ; System
;;;766    						
;;;767                            Power_offBack.results[0]=0xFC;	//已经关机
0014d4  20fc              MOVS     r0,#0xfc
0014d6  4985              LDR      r1,|L2.5868|
0014d8  7048              STRB     r0,[r1,#1]
0014da  e028              B        |L2.5422|
                  |L2.5340|
;;;768                            //App_printf("system already closed!\n");
;;;769                        }
;;;770                        else	//执行关机
;;;771                        {
;;;772                            System.close = 1;
0014dc  2001              MOVS     r0,#1
0014de  4978              LDR      r1,|L2.5824|
0014e0  7348              STRB     r0,[r1,#0xd]
;;;773    												
;;;774                            //App_printf("Task_Upper_Computer Close Notify!\r\n");
;;;775                            xTaskNotify(xHandleTask_MT2000,	//关机
0014e2  2300              MOVS     r3,#0
0014e4  2201              MOVS     r2,#1
0014e6  0241              LSLS     r1,r0,#9
0014e8  487f              LDR      r0,|L2.5864|
0014ea  6800              LDR      r0,[r0,#0]  ; xHandleTask_MT2000
0014ec  f7fffffe          BL       xTaskGenericNotify
;;;776                                        BIT_9,
;;;777                                        eSetBits);
;;;778    
;;;779                            for(k=0; k<20; k++)
0014f0  2000              MOVS     r0,#0
0014f2  9008              STR      r0,[sp,#0x20]
0014f4  e017              B        |L2.5414|
                  |L2.5366|
;;;780                            {
;;;781    														 if( System.close == 0 )			//关机成功
0014f6  4872              LDR      r0,|L2.5824|
0014f8  7b40              LDRB     r0,[r0,#0xd]  ; System
0014fa  b968              CBNZ     r0,|L2.5400|
;;;782    														{
;;;783    															System.status = SYSTEM_SHUTDOWN;
0014fc  2004              MOVS     r0,#4
0014fe  4970              LDR      r1,|L2.5824|
001500  72c8              STRB     r0,[r1,#0xb]
;;;784    															System.sweep = 0x00;
001502  2000              MOVS     r0,#0
001504  7388              STRB     r0,[r1,#0xe]
;;;785    															
;;;786    															System.open = 0x00;
001506  7308              STRB     r0,[r1,#0xc]
;;;787    															System.Voltage = 0.0;
001508  6748              STR      r0,[r1,#0x74]  ; System
;;;788    															System.Electricity = 0.0;
00150a  6788              STR      r0,[r1,#0x78]  ; System
;;;789    															
;;;790    															System.achieve_add_sub = 0;
00150c  7448              STRB     r0,[r1,#0x11]
;;;791    															System.modify_power = 0;
00150e  7488              STRB     r0,[r1,#0x12]
;;;792    															System.cancel_add_sub = 0;
001510  74c8              STRB     r0,[r1,#0x13]
;;;793    															System_Status_Clean();
001512  f7fffffe          BL       System_Status_Clean
;;;794    																							break;
001516  e009              B        |L2.5420|
                  |L2.5400|
;;;795    														}
;;;796                                else
;;;797                                    vTaskDelay(50);
001518  2032              MOVS     r0,#0x32
00151a  f7fffffe          BL       vTaskDelay
00151e  9808              LDR      r0,[sp,#0x20]         ;779
001520  1c40              ADDS     r0,r0,#1              ;779
001522  b2c0              UXTB     r0,r0                 ;779
001524  9008              STR      r0,[sp,#0x20]         ;779
                  |L2.5414|
001526  9808              LDR      r0,[sp,#0x20]         ;779
001528  2814              CMP      r0,#0x14              ;779
00152a  dbe4              BLT      |L2.5366|
                  |L2.5420|
00152c  bf00              NOP                            ;794
                  |L2.5422|
;;;798                            }
;;;799                        }
;;;800                        Send_PC(g_fuc_codToPC);
00152e  4868              LDR      r0,|L2.5840|
001530  f7fffffe          BL       Send_PC
001534  e5ca              B        |L2.4300|
                  |L2.5430|
;;;801                    }
;;;802                    else	if(g_fuc_cod[0]==0x09&&g_fuc_cod[1]==0x01)		//扫频
001536  4867              LDR      r0,|L2.5844|
001538  7800              LDRB     r0,[r0,#0]  ; g_fuc_cod
00153a  2809              CMP      r0,#9
                  |L2.5436|
00153c  d17e              BNE      |L2.5692|
00153e  4865              LDR      r0,|L2.5844|
001540  7840              LDRB     r0,[r0,#1]  ; g_fuc_cod
001542  2801              CMP      r0,#1
001544  d1fa              BNE      |L2.5436|
;;;803                    {
;;;804                        Scan_FrqBack.Transmitte_id[0]	= System.CAN_ID[0];
001546  485e              LDR      r0,|L2.5824|
001548  7800              LDRB     r0,[r0,#0]  ; System
00154a  4969              LDR      r1,|L2.5872|
00154c  7008              STRB     r0,[r1,#0]
;;;805                        Scan_FrqBack1.Transmitte_id[0]	= System.CAN_ID[0];	//3.2-4.9		
00154e  485c              LDR      r0,|L2.5824|
001550  7800              LDRB     r0,[r0,#0]  ; System
001552  4968              LDR      r1,|L2.5876|
001554  7008              STRB     r0,[r1,#0]
;;;806                        Scan_FrqBack2.Transmitte_id[0]	= System.CAN_ID[0];	//5.0-6.9
001556  485a              LDR      r0,|L2.5824|
001558  7800              LDRB     r0,[r0,#0]  ; System
00155a  4967              LDR      r1,|L2.5880|
00155c  7008              STRB     r0,[r1,#0]
;;;807                        Scan_FrqBack3.Transmitte_id[0]	= System.CAN_ID[0];	//7.0-8.9
00155e  4858              LDR      r0,|L2.5824|
001560  7800              LDRB     r0,[r0,#0]  ; System
001562  4966              LDR      r1,|L2.5884|
001564  7008              STRB     r0,[r1,#0]
;;;808                        Scan_FrqBack4.Transmitte_id[0]	= System.CAN_ID[0];	//9.0-10.9
001566  4856              LDR      r0,|L2.5824|
001568  7800              LDRB     r0,[r0,#0]  ; System
00156a  4965              LDR      r1,|L2.5888|
00156c  7008              STRB     r0,[r1,#0]
;;;809                        Scan_FrqBack5.Transmitte_id[0]	= System.CAN_ID[0];	//11.0-12.9
00156e  4854              LDR      r0,|L2.5824|
001570  7800              LDRB     r0,[r0,#0]  ; System
001572  4964              LDR      r1,|L2.5892|
001574  7008              STRB     r0,[r1,#0]
;;;810                        Scan_FrqBack6.Transmitte_id[0]	= System.CAN_ID[0];	//13.0-14.9
001576  4852              LDR      r0,|L2.5824|
001578  7800              LDRB     r0,[r0,#0]  ; System
00157a  4963              LDR      r1,|L2.5896|
00157c  7008              STRB     r0,[r1,#0]
;;;811                        Scan_FrqBack7.Transmitte_id[0]	= System.CAN_ID[0];	//15.0-16.9
00157e  4850              LDR      r0,|L2.5824|
001580  7800              LDRB     r0,[r0,#0]  ; System
001582  4962              LDR      r1,|L2.5900|
001584  7008              STRB     r0,[r1,#0]
;;;812                        Scan_FrqBack8.Transmitte_id[0]	= System.CAN_ID[0];	//17.0-18.9
001586  484e              LDR      r0,|L2.5824|
001588  7800              LDRB     r0,[r0,#0]  ; System
00158a  4961              LDR      r1,|L2.5904|
00158c  7008              STRB     r0,[r1,#0]
;;;813                        Scan_FrqBack9.Transmitte_id[0]	= System.CAN_ID[0];	//19.0-20.9
00158e  484c              LDR      r0,|L2.5824|
001590  7800              LDRB     r0,[r0,#0]  ; System
001592  4960              LDR      r1,|L2.5908|
001594  7008              STRB     r0,[r1,#0]
;;;814                        Scan_FrqBack10.Transmitte_id[0]	= System.CAN_ID[0];	//21.0-22.9
001596  484a              LDR      r0,|L2.5824|
001598  7800              LDRB     r0,[r0,#0]  ; System
00159a  495f              LDR      r1,|L2.5912|
00159c  7008              STRB     r0,[r1,#0]
;;;815                        Scan_FrqBack11.Transmitte_id[0]	= System.CAN_ID[0];	//23.0-24.9
00159e  4848              LDR      r0,|L2.5824|
0015a0  7800              LDRB     r0,[r0,#0]  ; System
0015a2  495e              LDR      r1,|L2.5916|
0015a4  7008              STRB     r0,[r1,#0]
;;;816                        Scan_FrqBack12.Transmitte_id[0]	= System.CAN_ID[0];	//25.0-26.1
0015a6  4846              LDR      r0,|L2.5824|
0015a8  7800              LDRB     r0,[r0,#0]  ; System
0015aa  495d              LDR      r1,|L2.5920|
0015ac  7008              STRB     r0,[r1,#0]
;;;817    
;;;818                        g_fuc_codToPC[0]=0x09;
0015ae  2009              MOVS     r0,#9
0015b0  4947              LDR      r1,|L2.5840|
0015b2  7008              STRB     r0,[r1,#0]
;;;819                        g_fuc_codToPC[1]=0x02;
0015b4  2002              MOVS     r0,#2
0015b6  7048              STRB     r0,[r1,#1]
;;;820    
;;;821                        if(Scan_Frq.state[0]==0xFE)					//开始扫频
0015b8  485a              LDR      r0,|L2.5924|
0015ba  7840              LDRB     r0,[r0,#1]  ; Scan_Frq
0015bc  28fe              CMP      r0,#0xfe
0015be  d17d              BNE      |L2.5820|
;;;822                        {
;;;823    												/*范围扫频赋值*/
;;;824    												Scan_Begin=(Scan_Frq.Fre_Band[0])*10/10.0;
0015c0  4858              LDR      r0,|L2.5924|
0015c2  f8d00002          LDR      r0,[r0,#2]  ; Scan_Frq
0015c6  4958              LDR      r1,|L2.5928|
0015c8  9000              STR      r0,[sp,#0]
0015ca  f7fffffe          BL       __aeabi_fmul
0015ce  9001              STR      r0,[sp,#4]
0015d0  f7fffffe          BL       __aeabi_f2d
0015d4  2200              MOVS     r2,#0
0015d6  4b55              LDR      r3,|L2.5932|
0015d8  e9cd0102          STRD     r0,r1,[sp,#8]
0015dc  f7fffffe          BL       __aeabi_ddiv
0015e0  e9cd0104          STRD     r0,r1,[sp,#0x10]
0015e4  f7fffffe          BL       __aeabi_d2f
0015e8  4951              LDR      r1,|L2.5936|
0015ea  6008              STR      r0,[r1,#0]  ; Scan_Begin
;;;825    												Scan_End=(Scan_Frq.Fre_Band[1])*10/10.0;											
0015ec  484d              LDR      r0,|L2.5924|
0015ee  f8d00006          LDR      r0,[r0,#6]
0015f2  494d              LDR      r1,|L2.5928|
0015f4  9000              STR      r0,[sp,#0]
0015f6  f7fffffe          BL       __aeabi_fmul
0015fa  9001              STR      r0,[sp,#4]
0015fc  f7fffffe          BL       __aeabi_f2d
001600  2200              MOVS     r2,#0
001602  4b4a              LDR      r3,|L2.5932|
001604  e9cd0102          STRD     r0,r1,[sp,#8]
001608  f7fffffe          BL       __aeabi_ddiv
00160c  e9cd0104          STRD     r0,r1,[sp,#0x10]
001610  f7fffffe          BL       __aeabi_d2f
001614  4947              LDR      r1,|L2.5940|
001616  6008              STR      r0,[r1,#0]  ; Scan_End
;;;826    												/**************/
;;;827                            if( (System.emission == 0x01) || (System.status == SYSTEM_SHUTDOWN) || (System.status == SYSTEM_OPENING)|| \
001618  4829              LDR      r0,|L2.5824|
00161a  7d80              LDRB     r0,[r0,#0x16]  ; System
00161c  2801              CMP      r0,#1
00161e  d01d              BEQ      |L2.5724|
001620  4827              LDR      r0,|L2.5824|
001622  7ac0              LDRB     r0,[r0,#0xb]  ; System
001624  2804              CMP      r0,#4
001626  d019              BEQ      |L2.5724|
001628  4825              LDR      r0,|L2.5824|
00162a  7ac0              LDRB     r0,[r0,#0xb]  ; System
00162c  2806              CMP      r0,#6
00162e  d015              BEQ      |L2.5724|
;;;828    							(Alarm.emission==0x01) || (Alarm.no_respond==0x01) || (Alarm.no_power==0x01) || (Alarm.swr_alarm==0x01) || (Alarm.over_Electric==0x01) )
001630  4826              LDR      r0,|L2.5836|
001632  7840              LDRB     r0,[r0,#1]  ; Alarm
001634  2801              CMP      r0,#1
001636  d011              BEQ      |L2.5724|
001638  4824              LDR      r0,|L2.5836|
00163a  e000              B        |L2.5694|
                  |L2.5692|
00163c  e1a2              B        |L2.6532|
                  |L2.5694|
00163e  78c0              LDRB     r0,[r0,#3]  ; Alarm
001640  2801              CMP      r0,#1
001642  d00b              BEQ      |L2.5724|
001644  4821              LDR      r0,|L2.5836|
001646  7cc0              LDRB     r0,[r0,#0x13]  ; Alarm
001648  2801              CMP      r0,#1
00164a  d007              BEQ      |L2.5724|
00164c  481f              LDR      r0,|L2.5836|
00164e  7c40              LDRB     r0,[r0,#0x11]  ; Alarm
001650  2801              CMP      r0,#1
001652  d003              BEQ      |L2.5724|
001654  481d              LDR      r0,|L2.5836|
001656  7ac0              LDRB     r0,[r0,#0xb]  ; Alarm
001658  2801              CMP      r0,#1
00165a  d106              BNE      |L2.5738|
                  |L2.5724|
;;;829                            {
;;;830                                //App_printf("Task_MT2000_Sweep waring: working or alarm state!\r\n");
;;;831    
;;;832                                Scan_FrqBack.results[0]=0xFD;			//扫频失败
00165c  20fd              MOVS     r0,#0xfd
00165e  4924              LDR      r1,|L2.5872|
001660  7048              STRB     r0,[r1,#1]
;;;833                                System.Scan_Freq_flag=0;
001662  2000              MOVS     r0,#0
001664  4916              LDR      r1,|L2.5824|
001666  7408              STRB     r0,[r1,#0x10]
001668  e188              B        |L2.6524|
                  |L2.5738|
;;;834                            }
;;;835                            else	//不是正在工作且没有报警
;;;836                            {
;;;837                                //App_printf("Scan execute!\r\n");
;;;838    
;;;839                                if( System.open == 0x02 )				//开机状态
00166a  4815              LDR      r0,|L2.5824|
00166c  7b00              LDRB     r0,[r0,#0xc]  ; System
00166e  2802              CMP      r0,#2
001670  d169              BNE      |L2.5958|
;;;840                                {
;;;841                                    if( System.emission == 0x01 )		//发射状态
001672  4813              LDR      r0,|L2.5824|
001674  7d80              LDRB     r0,[r0,#0x16]  ; System
001676  2801              CMP      r0,#1
001678  d103              BNE      |L2.5762|
;;;842                                    {
;;;843                                        Scan_FrqBack.results[0]=0xFC;	//当前处于发射状态
00167a  20fc              MOVS     r0,#0xfc
00167c  491c              LDR      r1,|L2.5872|
00167e  7048              STRB     r0,[r1,#1]
001680  e05d              B        |L2.5950|
                  |L2.5762|
;;;844                                    }
;;;845                                    else	if( System.sweep == 0x01 )	//正在扫频，又下发扫频
001682  480f              LDR      r0,|L2.5824|
001684  7b80              LDRB     r0,[r0,#0xe]  ; System
001686  2801              CMP      r0,#1
001688  d106              BNE      |L2.5784|
;;;846                                    {
;;;847                                        Scan_FrqBack.results[0]=0xFE;	//正在扫频
00168a  20fe              MOVS     r0,#0xfe
00168c  4918              LDR      r1,|L2.5872|
00168e  7048              STRB     r0,[r1,#1]
;;;848                                        System.status = SYSTEM_SCAN;
001690  2005              MOVS     r0,#5
001692  490b              LDR      r1,|L2.5824|
001694  72c8              STRB     r0,[r1,#0xb]
001696  e052              B        |L2.5950|
                  |L2.5784|
;;;849                                    }
;;;850                                    else     //第一次扫频
;;;851                                    {
;;;852                                        System.sweep = 0x01;			//正在扫频
001698  2001              MOVS     r0,#1
00169a  4909              LDR      r1,|L2.5824|
00169c  7388              STRB     r0,[r1,#0xe]
;;;853                                        System.modify_power = 0x01;
00169e  7488              STRB     r0,[r1,#0x12]
;;;854                                        Scan_FrqBack.results[0]=0xFE;
0016a0  20fe              MOVS     r0,#0xfe
0016a2  4913              LDR      r1,|L2.5872|
0016a4  7048              STRB     r0,[r1,#1]
;;;855    
;;;856                                        System.stop = 0x00;
0016a6  2000              MOVS     r0,#0
0016a8  4905              LDR      r1,|L2.5824|
0016aa  7548              STRB     r0,[r1,#0x15]
;;;857                                        System.cancel_sweeping = 0x00;
0016ac  73c8              STRB     r0,[r1,#0xf]
;;;858                                        System.status = SYSTEM_SCAN;
0016ae  2005              MOVS     r0,#5
0016b0  72c8              STRB     r0,[r1,#0xb]
;;;859    
;;;860                                        //App_printf("Task_Upper_Computer Sweep Notify!\r\n");
;;;861                                        xTaskNotify(xHandleTask_MT2000,	/* 扫频 */
0016b2  2300              MOVS     r3,#0
0016b4  2201              MOVS     r2,#1
0016b6  2120              MOVS     r1,#0x20
0016b8  480b              LDR      r0,|L2.5864|
0016ba  e03d              B        |L2.5944|
                  |L2.5820|
0016bc  e04a              B        |L2.5972|
0016be  e042              B        |L2.5958|
                  |L2.5824|
                          DCD      System
                  |L2.5828|
                          DCD      0x40440000
                  |L2.5832|
                          DCD      0x40590000
                  |L2.5836|
                          DCD      Alarm
                  |L2.5840|
                          DCD      g_fuc_codToPC
                  |L2.5844|
                          DCD      g_fuc_cod
                  |L2.5848|
                          DCD      g_stamp_distance
                  |L2.5852|
                          DCD      set_time
                  |L2.5856|
                          DCD      Alarm_historyBack
                  |L2.5860|
                          DCD      Power_onBack
                  |L2.5864|
                          DCD      xHandleTask_MT2000
                  |L2.5868|
                          DCD      Power_offBack
                  |L2.5872|
                          DCD      Scan_FrqBack
                  |L2.5876|
                          DCD      Scan_FrqBack1
                  |L2.5880|
                          DCD      Scan_FrqBack2
                  |L2.5884|
                          DCD      Scan_FrqBack3
                  |L2.5888|
                          DCD      Scan_FrqBack4
                  |L2.5892|
                          DCD      Scan_FrqBack5
                  |L2.5896|
                          DCD      Scan_FrqBack6
                  |L2.5900|
                          DCD      Scan_FrqBack7
                  |L2.5904|
                          DCD      Scan_FrqBack8
                  |L2.5908|
                          DCD      Scan_FrqBack9
                  |L2.5912|
                          DCD      Scan_FrqBack10
                  |L2.5916|
                          DCD      Scan_FrqBack11
                  |L2.5920|
                          DCD      Scan_FrqBack12
                  |L2.5924|
                          DCD      Scan_Frq
                  |L2.5928|
                          DCD      0x41200000
                  |L2.5932|
                          DCD      0x40240000
                  |L2.5936|
                          DCD      Scan_Begin
                  |L2.5940|
                          DCD      Scan_End
                  |L2.5944|
001738  6800              LDR      r0,[r0,#0]  ; xHandleTask_MT2000
00173a  f7fffffe          BL       xTaskGenericNotify
                  |L2.5950|
;;;862                                                    BIT_5,
;;;863                                                    eSetBits);
;;;864                                    }
;;;865    
;;;866                                    System.Scan_Freq_flag=0;
00173e  2000              MOVS     r0,#0
001740  49fa              LDR      r1,|L2.6956|
001742  7408              STRB     r0,[r1,#0x10]
001744  e11a              B        |L2.6524|
                  |L2.5958|
;;;867                                }
;;;868                                else	//关机状态，需要开机
;;;869                                {
;;;870                                    Scan_FrqBack.results[0]=0xFF;
001746  20ff              MOVS     r0,#0xff
001748  49f9              LDR      r1,|L2.6960|
00174a  7048              STRB     r0,[r1,#1]
;;;871                                    System.Scan_Freq_flag=0;
00174c  2000              MOVS     r0,#0
00174e  49f7              LDR      r1,|L2.6956|
001750  7408              STRB     r0,[r1,#0x10]
001752  e113              B        |L2.6524|
                  |L2.5972|
;;;872                                }
;;;873                            }
;;;874                        }
;;;875                        else if(Scan_Frq.state[0]==0xFD)			//查询最佳频段
001754  48f7              LDR      r0,|L2.6964|
001756  7840              LDRB     r0,[r0,#1]  ; Scan_Frq
001758  28fd              CMP      r0,#0xfd
00175a  d10c              BNE      |L2.6006|
;;;876                        {
;;;877                            //App_printf("Scan inquire!\r\n");
;;;878    
;;;879                            if( System.sweep == 0x01 )				//正在扫频
00175c  48f3              LDR      r0,|L2.6956|
00175e  7b80              LDRB     r0,[r0,#0xe]  ; System
001760  2801              CMP      r0,#1
001762  d109              BNE      |L2.6008|
;;;880                            {
;;;881                                System.status = SYSTEM_SCAN;
001764  2005              MOVS     r0,#5
001766  49f1              LDR      r1,|L2.6956|
001768  72c8              STRB     r0,[r1,#0xb]
;;;882                                Scan_FrqBack.results[0]=0xFE;
00176a  20fe              MOVS     r0,#0xfe
00176c  49f0              LDR      r1,|L2.6960|
00176e  7048              STRB     r0,[r1,#1]
;;;883    
;;;884                                System.Scan_Freq_flag=0;
001770  2000              MOVS     r0,#0
001772  49ee              LDR      r1,|L2.6956|
001774  7408              STRB     r0,[r1,#0x10]
                  |L2.6006|
001776  e101              B        |L2.6524|
                  |L2.6008|
;;;885                            }
;;;886                            else	/*	if( System.already_swept == 1 )	//有历史最佳频段	*/		//没有完成扫频也返回	--20181014 By Luonus
;;;887                            {
;;;888                                if( System.sweep == 0x01 )			//正在扫频，说明需要更新最佳频段
001778  48ec              LDR      r0,|L2.6956|
00177a  7b80              LDRB     r0,[r0,#0xe]  ; System
00177c  2801              CMP      r0,#1
00177e  d109              BNE      |L2.6036|
;;;889                                {
;;;890                                    System.status = SYSTEM_SCAN;
001780  2005              MOVS     r0,#5
001782  49ea              LDR      r1,|L2.6956|
001784  72c8              STRB     r0,[r1,#0xb]
;;;891                                    Scan_FrqBack.results[0]=0xFE;	//正在扫频
001786  20fe              MOVS     r0,#0xfe
001788  49e9              LDR      r1,|L2.6960|
00178a  7048              STRB     r0,[r1,#1]
;;;892    
;;;893                                    System.Scan_Freq_flag=0;
00178c  2000              MOVS     r0,#0
00178e  49e7              LDR      r1,|L2.6956|
001790  7408              STRB     r0,[r1,#0x10]
001792  e0f3              B        |L2.6524|
                  |L2.6036|
;;;894                                }
;;;895                                else	//直接返回给PC
;;;896                                {
;;;897                                    Scan_FrqBack.results[0]=0xFB;	//已经获取最佳频段
001794  20fb              MOVS     r0,#0xfb
001796  49e6              LDR      r1,|L2.6960|
001798  7048              STRB     r0,[r1,#1]
;;;898                                    if(Scan_Frq.Fre_Band[0]==5)
00179a  48e6              LDR      r0,|L2.6964|
00179c  f8d00002          LDR      r0,[r0,#2]  ; Scan_Frq
0017a0  49e5              LDR      r1,|L2.6968|
0017a2  9005              STR      r0,[sp,#0x14]
0017a4  f7fffffe          BL       __aeabi_cfcmpeq
0017a8  d10d              BNE      |L2.6086|
;;;899                                    {
;;;900                                        System.Scan_Freq_flag=2;
0017aa  2002              MOVS     r0,#2
0017ac  49df              LDR      r1,|L2.6956|
0017ae  7408              STRB     r0,[r1,#0x10]
;;;901                                        Scan_FrqBack2.results[0]=0xFB;
0017b0  20fb              MOVS     r0,#0xfb
0017b2  49e2              LDR      r1,|L2.6972|
0017b4  7048              STRB     r0,[r1,#1]
;;;902                                        memcpy(Scan_FrqBack2.Fre_Band,Scan_Frq.Fre_Band,8);
0017b6  1c88              ADDS     r0,r1,#2
0017b8  49de              LDR      r1,|L2.6964|
0017ba  1c89              ADDS     r1,r1,#2
0017bc  680a              LDR      r2,[r1,#0]  ; Scan_Frq
0017be  6002              STR      r2,[r0,#0]  ; Scan_FrqBack2
0017c0  6849              LDR      r1,[r1,#4]  ; Scan_Frq
0017c2  6041              STR      r1,[r0,#4]  ; Scan_FrqBack2
0017c4  e0da              B        |L2.6524|
                  |L2.6086|
;;;903                                    }
;;;904                                    else	if(Scan_Frq.Fre_Band[0]==7)
0017c6  48db              LDR      r0,|L2.6964|
0017c8  f8d00002          LDR      r0,[r0,#2]  ; Scan_Frq
0017cc  49dc              LDR      r1,|L2.6976|
0017ce  9005              STR      r0,[sp,#0x14]
0017d0  f7fffffe          BL       __aeabi_cfcmpeq
0017d4  d10d              BNE      |L2.6130|
;;;905                                    {
;;;906                                        System.Scan_Freq_flag=3;
0017d6  2003              MOVS     r0,#3
0017d8  49d4              LDR      r1,|L2.6956|
0017da  7408              STRB     r0,[r1,#0x10]
;;;907                                        Scan_FrqBack3.results[0]=0xFB;
0017dc  20fb              MOVS     r0,#0xfb
0017de  49d9              LDR      r1,|L2.6980|
0017e0  7048              STRB     r0,[r1,#1]
;;;908                                        memcpy(Scan_FrqBack3.Fre_Band,Scan_Frq.Fre_Band,8);
0017e2  1c88              ADDS     r0,r1,#2
0017e4  49d3              LDR      r1,|L2.6964|
0017e6  1c89              ADDS     r1,r1,#2
0017e8  680a              LDR      r2,[r1,#0]  ; Scan_Frq
0017ea  6002              STR      r2,[r0,#0]  ; Scan_FrqBack3
0017ec  6849              LDR      r1,[r1,#4]  ; Scan_Frq
0017ee  6041              STR      r1,[r0,#4]  ; Scan_FrqBack3
0017f0  e0c4              B        |L2.6524|
                  |L2.6130|
;;;909                                    }
;;;910                                    else	if(Scan_Frq.Fre_Band[0]==9)
0017f2  48d0              LDR      r0,|L2.6964|
0017f4  f8d00002          LDR      r0,[r0,#2]  ; Scan_Frq
0017f8  49d3              LDR      r1,|L2.6984|
0017fa  9005              STR      r0,[sp,#0x14]
0017fc  f7fffffe          BL       __aeabi_cfcmpeq
001800  d10d              BNE      |L2.6174|
;;;911                                    {
;;;912                                        System.Scan_Freq_flag=4;
001802  2004              MOVS     r0,#4
001804  49c9              LDR      r1,|L2.6956|
001806  7408              STRB     r0,[r1,#0x10]
;;;913                                        Scan_FrqBack4.results[0]=0xFB;
001808  20fb              MOVS     r0,#0xfb
00180a  49d0              LDR      r1,|L2.6988|
00180c  7048              STRB     r0,[r1,#1]
;;;914                                        memcpy(Scan_FrqBack4.Fre_Band,Scan_Frq.Fre_Band,8);
00180e  1c88              ADDS     r0,r1,#2
001810  49c8              LDR      r1,|L2.6964|
001812  1c89              ADDS     r1,r1,#2
001814  680a              LDR      r2,[r1,#0]  ; Scan_Frq
001816  6002              STR      r2,[r0,#0]  ; Scan_FrqBack4
001818  6849              LDR      r1,[r1,#4]  ; Scan_Frq
00181a  6041              STR      r1,[r0,#4]  ; Scan_FrqBack4
00181c  e0ae              B        |L2.6524|
                  |L2.6174|
;;;915                                    }
;;;916                                    else	if(Scan_Frq.Fre_Band[0]==11)
00181e  48c5              LDR      r0,|L2.6964|
001820  f8d00002          LDR      r0,[r0,#2]  ; Scan_Frq
001824  49ca              LDR      r1,|L2.6992|
001826  9005              STR      r0,[sp,#0x14]
001828  f7fffffe          BL       __aeabi_cfcmpeq
00182c  d10d              BNE      |L2.6218|
;;;917                                    {
;;;918                                        System.Scan_Freq_flag=5;
00182e  2005              MOVS     r0,#5
001830  49be              LDR      r1,|L2.6956|
001832  7408              STRB     r0,[r1,#0x10]
;;;919                                        Scan_FrqBack5.results[0]=0xFB;
001834  20fb              MOVS     r0,#0xfb
001836  49c7              LDR      r1,|L2.6996|
001838  7048              STRB     r0,[r1,#1]
;;;920                                        memcpy(Scan_FrqBack5.Fre_Band,Scan_Frq.Fre_Band,8);
00183a  1c88              ADDS     r0,r1,#2
00183c  49bd              LDR      r1,|L2.6964|
00183e  1c89              ADDS     r1,r1,#2
001840  680a              LDR      r2,[r1,#0]  ; Scan_Frq
001842  6002              STR      r2,[r0,#0]  ; Scan_FrqBack5
001844  6849              LDR      r1,[r1,#4]  ; Scan_Frq
001846  6041              STR      r1,[r0,#4]  ; Scan_FrqBack5
001848  e098              B        |L2.6524|
                  |L2.6218|
;;;921                                    }
;;;922                                    else	if(Scan_Frq.Fre_Band[0]==13)
00184a  48ba              LDR      r0,|L2.6964|
00184c  f8d00002          LDR      r0,[r0,#2]  ; Scan_Frq
001850  49c1              LDR      r1,|L2.7000|
001852  9005              STR      r0,[sp,#0x14]
001854  f7fffffe          BL       __aeabi_cfcmpeq
001858  d10d              BNE      |L2.6262|
;;;923                                    {
;;;924                                        System.Scan_Freq_flag=6;
00185a  2006              MOVS     r0,#6
00185c  49b3              LDR      r1,|L2.6956|
00185e  7408              STRB     r0,[r1,#0x10]
;;;925                                        Scan_FrqBack6.results[0]=0xFB;
001860  20fb              MOVS     r0,#0xfb
001862  49be              LDR      r1,|L2.7004|
001864  7048              STRB     r0,[r1,#1]
;;;926                                        memcpy(Scan_FrqBack6.Fre_Band,Scan_Frq.Fre_Band,8);
001866  1c88              ADDS     r0,r1,#2
001868  49b2              LDR      r1,|L2.6964|
00186a  1c89              ADDS     r1,r1,#2
00186c  680a              LDR      r2,[r1,#0]  ; Scan_Frq
00186e  6002              STR      r2,[r0,#0]  ; Scan_FrqBack6
001870  6849              LDR      r1,[r1,#4]  ; Scan_Frq
001872  6041              STR      r1,[r0,#4]  ; Scan_FrqBack6
001874  e082              B        |L2.6524|
                  |L2.6262|
;;;927                                    }
;;;928                                    else	if(Scan_Frq.Fre_Band[0]==15)
001876  48af              LDR      r0,|L2.6964|
001878  f8d00002          LDR      r0,[r0,#2]  ; Scan_Frq
00187c  49b8              LDR      r1,|L2.7008|
00187e  9005              STR      r0,[sp,#0x14]
001880  f7fffffe          BL       __aeabi_cfcmpeq
001884  d10d              BNE      |L2.6306|
;;;929                                    {
;;;930                                        System.Scan_Freq_flag=7;
001886  2007              MOVS     r0,#7
001888  49a8              LDR      r1,|L2.6956|
00188a  7408              STRB     r0,[r1,#0x10]
;;;931                                        Scan_FrqBack7.results[0]=0xFB;
00188c  20fb              MOVS     r0,#0xfb
00188e  49b5              LDR      r1,|L2.7012|
001890  7048              STRB     r0,[r1,#1]
;;;932                                        memcpy(Scan_FrqBack7.Fre_Band,Scan_Frq.Fre_Band,8);
001892  1c88              ADDS     r0,r1,#2
001894  49a7              LDR      r1,|L2.6964|
001896  1c89              ADDS     r1,r1,#2
001898  680a              LDR      r2,[r1,#0]  ; Scan_Frq
00189a  6002              STR      r2,[r0,#0]  ; Scan_FrqBack7
00189c  6849              LDR      r1,[r1,#4]  ; Scan_Frq
00189e  6041              STR      r1,[r0,#4]  ; Scan_FrqBack7
0018a0  e06c              B        |L2.6524|
                  |L2.6306|
;;;933                                    }
;;;934                                    else	if(Scan_Frq.Fre_Band[0]==17)
0018a2  48a4              LDR      r0,|L2.6964|
0018a4  f8d00002          LDR      r0,[r0,#2]  ; Scan_Frq
0018a8  49af              LDR      r1,|L2.7016|
0018aa  9005              STR      r0,[sp,#0x14]
0018ac  f7fffffe          BL       __aeabi_cfcmpeq
0018b0  d10d              BNE      |L2.6350|
;;;935                                    {
;;;936                                        System.Scan_Freq_flag=8;
0018b2  2008              MOVS     r0,#8
0018b4  499d              LDR      r1,|L2.6956|
0018b6  7408              STRB     r0,[r1,#0x10]
;;;937                                        Scan_FrqBack8.results[0]=0xFB;
0018b8  20fb              MOVS     r0,#0xfb
0018ba  49ac              LDR      r1,|L2.7020|
0018bc  7048              STRB     r0,[r1,#1]
;;;938                                        memcpy(Scan_FrqBack8.Fre_Band,Scan_Frq.Fre_Band,8);
0018be  1c88              ADDS     r0,r1,#2
0018c0  499c              LDR      r1,|L2.6964|
0018c2  1c89              ADDS     r1,r1,#2
0018c4  680a              LDR      r2,[r1,#0]  ; Scan_Frq
0018c6  6002              STR      r2,[r0,#0]  ; Scan_FrqBack8
0018c8  6849              LDR      r1,[r1,#4]  ; Scan_Frq
0018ca  6041              STR      r1,[r0,#4]  ; Scan_FrqBack8
0018cc  e056              B        |L2.6524|
                  |L2.6350|
;;;939                                    }
;;;940                                    else	if(Scan_Frq.Fre_Band[0]==19)
0018ce  4899              LDR      r0,|L2.6964|
0018d0  f8d00002          LDR      r0,[r0,#2]  ; Scan_Frq
0018d4  49a6              LDR      r1,|L2.7024|
0018d6  9005              STR      r0,[sp,#0x14]
0018d8  f7fffffe          BL       __aeabi_cfcmpeq
0018dc  d10d              BNE      |L2.6394|
;;;941                                    {
;;;942                                        System.Scan_Freq_flag=9;
0018de  2009              MOVS     r0,#9
0018e0  4992              LDR      r1,|L2.6956|
0018e2  7408              STRB     r0,[r1,#0x10]
;;;943                                        Scan_FrqBack9.results[0]=0xFB;
0018e4  20fb              MOVS     r0,#0xfb
0018e6  49a3              LDR      r1,|L2.7028|
0018e8  7048              STRB     r0,[r1,#1]
;;;944                                        memcpy(Scan_FrqBack9.Fre_Band,Scan_Frq.Fre_Band,8);
0018ea  1c88              ADDS     r0,r1,#2
0018ec  4991              LDR      r1,|L2.6964|
0018ee  1c89              ADDS     r1,r1,#2
0018f0  680a              LDR      r2,[r1,#0]  ; Scan_Frq
0018f2  6002              STR      r2,[r0,#0]  ; Scan_FrqBack9
0018f4  6849              LDR      r1,[r1,#4]  ; Scan_Frq
0018f6  6041              STR      r1,[r0,#4]  ; Scan_FrqBack9
0018f8  e040              B        |L2.6524|
                  |L2.6394|
;;;945                                    }
;;;946                                    else	if(Scan_Frq.Fre_Band[0]==21)
0018fa  488e              LDR      r0,|L2.6964|
0018fc  f8d00002          LDR      r0,[r0,#2]  ; Scan_Frq
001900  499d              LDR      r1,|L2.7032|
001902  9005              STR      r0,[sp,#0x14]
001904  f7fffffe          BL       __aeabi_cfcmpeq
001908  d10d              BNE      |L2.6438|
;;;947                                    {
;;;948                                        System.Scan_Freq_flag=10;
00190a  200a              MOVS     r0,#0xa
00190c  4987              LDR      r1,|L2.6956|
00190e  7408              STRB     r0,[r1,#0x10]
;;;949                                        Scan_FrqBack10.results[0]=0xFB;
001910  20fb              MOVS     r0,#0xfb
001912  499a              LDR      r1,|L2.7036|
001914  7048              STRB     r0,[r1,#1]
;;;950                                        memcpy(Scan_FrqBack10.Fre_Band,Scan_Frq.Fre_Band,8);
001916  1c88              ADDS     r0,r1,#2
001918  4986              LDR      r1,|L2.6964|
00191a  1c89              ADDS     r1,r1,#2
00191c  680a              LDR      r2,[r1,#0]  ; Scan_Frq
00191e  6002              STR      r2,[r0,#0]  ; Scan_FrqBack10
001920  6849              LDR      r1,[r1,#4]  ; Scan_Frq
001922  6041              STR      r1,[r0,#4]  ; Scan_FrqBack10
001924  e02a              B        |L2.6524|
                  |L2.6438|
;;;951                                    }
;;;952                                    else	if(Scan_Frq.Fre_Band[0]==23)
001926  4883              LDR      r0,|L2.6964|
001928  f8d00002          LDR      r0,[r0,#2]  ; Scan_Frq
00192c  4994              LDR      r1,|L2.7040|
00192e  9005              STR      r0,[sp,#0x14]
001930  f7fffffe          BL       __aeabi_cfcmpeq
001934  d10d              BNE      |L2.6482|
;;;953                                    {
;;;954                                        System.Scan_Freq_flag=11;
001936  200b              MOVS     r0,#0xb
001938  497c              LDR      r1,|L2.6956|
00193a  7408              STRB     r0,[r1,#0x10]
;;;955                                        Scan_FrqBack11.results[0]=0xFB;
00193c  20fb              MOVS     r0,#0xfb
00193e  4991              LDR      r1,|L2.7044|
001940  7048              STRB     r0,[r1,#1]
;;;956                                        memcpy(Scan_FrqBack11.Fre_Band,Scan_Frq.Fre_Band,8);
001942  1c88              ADDS     r0,r1,#2
001944  497b              LDR      r1,|L2.6964|
001946  1c89              ADDS     r1,r1,#2
001948  680a              LDR      r2,[r1,#0]  ; Scan_Frq
00194a  6002              STR      r2,[r0,#0]  ; Scan_FrqBack11
00194c  6849              LDR      r1,[r1,#4]  ; Scan_Frq
00194e  6041              STR      r1,[r0,#4]  ; Scan_FrqBack11
001950  e014              B        |L2.6524|
                  |L2.6482|
;;;957                                    }
;;;958                                    else	if(Scan_Frq.Fre_Band[0]==25)
001952  4878              LDR      r0,|L2.6964|
001954  f8d00002          LDR      r0,[r0,#2]  ; Scan_Frq
001958  498b              LDR      r1,|L2.7048|
00195a  9005              STR      r0,[sp,#0x14]
00195c  f7fffffe          BL       __aeabi_cfcmpeq
001960  d10c              BNE      |L2.6524|
;;;959                                    {
;;;960                                        System.Scan_Freq_flag=12;
001962  200c              MOVS     r0,#0xc
001964  4971              LDR      r1,|L2.6956|
001966  7408              STRB     r0,[r1,#0x10]
;;;961                                        Scan_FrqBack12.results[0]=0xFB;
001968  20fb              MOVS     r0,#0xfb
00196a  4988              LDR      r1,|L2.7052|
00196c  7048              STRB     r0,[r1,#1]
;;;962                                        memcpy(Scan_FrqBack12.Fre_Band,Scan_Frq.Fre_Band,8);
00196e  1c88              ADDS     r0,r1,#2
001970  4970              LDR      r1,|L2.6964|
001972  1c89              ADDS     r1,r1,#2
001974  680a              LDR      r2,[r1,#0]  ; Scan_Frq
001976  6002              STR      r2,[r0,#0]  ; Scan_FrqBack12
001978  6849              LDR      r1,[r1,#4]  ; Scan_Frq
00197a  6041              STR      r1,[r0,#4]  ; Scan_FrqBack12
                  |L2.6524|
;;;963                                    }
;;;964                                }
;;;965                            }
;;;966                        }
;;;967    
;;;968                        Send_PC(g_fuc_codToPC);		//除了查询，其他都是返回 Scan_FrqBack的数据(根据System.Scan_Freq_flag=0;)
00197c  4884              LDR      r0,|L2.7056|
00197e  f7fffffe          BL       Send_PC
001982  e293              B        |L2.7852|
                  |L2.6532|
;;;969                    }
;;;970                    else	if(g_fuc_cod[0]==0x0A&&g_fuc_cod[1]==0x01)		//停止扫频
001984  4883              LDR      r0,|L2.7060|
001986  7800              LDRB     r0,[r0,#0]  ; g_fuc_cod
001988  280a              CMP      r0,#0xa
00198a  d154              BNE      |L2.6710|
00198c  4881              LDR      r0,|L2.7060|
00198e  7840              LDRB     r0,[r0,#1]  ; g_fuc_cod
001990  2801              CMP      r0,#1
001992  d150              BNE      |L2.6710|
;;;971                    {
;;;972                        Sacn_stopBack.Transmitte_id[0]=System.CAN_ID[0];
001994  4865              LDR      r0,|L2.6956|
001996  7800              LDRB     r0,[r0,#0]  ; System
001998  497f              LDR      r1,|L2.7064|
00199a  7008              STRB     r0,[r1,#0]
;;;973                        g_fuc_codToPC[0]=0x0A;
00199c  200a              MOVS     r0,#0xa
00199e  497c              LDR      r1,|L2.7056|
0019a0  7008              STRB     r0,[r1,#0]
;;;974                        g_fuc_codToPC[1]=0x02;
0019a2  2002              MOVS     r0,#2
0019a4  7048              STRB     r0,[r1,#1]
;;;975    
;;;976                        if(Sacn_stop.state[0]==0XFE)   //停止扫频
0019a6  487d              LDR      r0,|L2.7068|
0019a8  7840              LDRB     r0,[r0,#1]  ; Sacn_stop
0019aa  28fe              CMP      r0,#0xfe
0019ac  d10e              BNE      |L2.6604|
;;;977                        {
;;;978                            if(System.sweep == 0x01)   //正在扫频
0019ae  485f              LDR      r0,|L2.6956|
0019b0  7b80              LDRB     r0,[r0,#0xe]  ; System
0019b2  2801              CMP      r0,#1
0019b4  d106              BNE      |L2.6596|
;;;979                            {
;;;980                                System.stop = 0x01;
0019b6  495d              LDR      r1,|L2.6956|
0019b8  7548              STRB     r0,[r1,#0x15]
;;;981    
;;;982                                System.cancel_sweeping = 0x01;
0019ba  73c8              STRB     r0,[r1,#0xf]
;;;983                                Sacn_stopBack.result[0]=0xFB;	//正在停止
0019bc  20fb              MOVS     r0,#0xfb
0019be  4976              LDR      r1,|L2.7064|
0019c0  7048              STRB     r0,[r1,#1]
0019c2  e034              B        |L2.6702|
                  |L2.6596|
;;;984                            }
;;;985                            else     //不是扫频状态
;;;986                            {
;;;987                                Sacn_stopBack.result[0]=0xFA;	//没有扫频，无需停止
0019c4  20fa              MOVS     r0,#0xfa
0019c6  4974              LDR      r1,|L2.7064|
0019c8  7048              STRB     r0,[r1,#1]
0019ca  e030              B        |L2.6702|
                  |L2.6604|
;;;988                            }
;;;989                        }
;;;990                        else	if(Sacn_stop.state[0]==0XFD)	//查询停止扫频是否成功
0019cc  4873              LDR      r0,|L2.7068|
0019ce  7840              LDRB     r0,[r0,#1]  ; Sacn_stop
0019d0  28fd              CMP      r0,#0xfd
0019d2  d12c              BNE      |L2.6702|
;;;991                        {
;;;992                            if(System.sweep == 0x01)			//正在扫频
0019d4  4855              LDR      r0,|L2.6956|
0019d6  7b80              LDRB     r0,[r0,#0xe]  ; System
0019d8  2801              CMP      r0,#1
0019da  d106              BNE      |L2.6634|
;;;993                            {
;;;994    													System.stop = 0x01;
0019dc  4953              LDR      r1,|L2.6956|
0019de  7548              STRB     r0,[r1,#0x15]
;;;995                                System.cancel_sweeping = 0x01;
0019e0  73c8              STRB     r0,[r1,#0xf]
;;;996                                Sacn_stopBack.result[0]=0xFB;	//正在停止
0019e2  20fb              MOVS     r0,#0xfb
0019e4  496c              LDR      r1,|L2.7064|
0019e6  7048              STRB     r0,[r1,#1]
0019e8  e021              B        |L2.6702|
                  |L2.6634|
;;;997                            }
;;;998                            else	if( System.sweep != 1 )		//没有扫频
0019ea  4850              LDR      r0,|L2.6956|
0019ec  7b80              LDRB     r0,[r0,#0xe]  ; System
0019ee  2801              CMP      r0,#1
0019f0  d01d              BEQ      |L2.6702|
;;;999                            {
;;;1000                               if( (Alarm.emission==0x01) || (Alarm.no_respond==0x01) || (Alarm.no_power==0x01) || (Alarm.swr_alarm==0x01) || (Alarm.over_Electric==0x01) )   //无响应或激励器自身报警
0019f2  486b              LDR      r0,|L2.7072|
0019f4  7840              LDRB     r0,[r0,#1]  ; Alarm
0019f6  2801              CMP      r0,#1
0019f8  d00f              BEQ      |L2.6682|
0019fa  4869              LDR      r0,|L2.7072|
0019fc  78c0              LDRB     r0,[r0,#3]  ; Alarm
0019fe  2801              CMP      r0,#1
001a00  d00b              BEQ      |L2.6682|
001a02  4867              LDR      r0,|L2.7072|
001a04  7cc0              LDRB     r0,[r0,#0x13]  ; Alarm
001a06  2801              CMP      r0,#1
001a08  d007              BEQ      |L2.6682|
001a0a  4865              LDR      r0,|L2.7072|
001a0c  7c40              LDRB     r0,[r0,#0x11]  ; Alarm
001a0e  2801              CMP      r0,#1
001a10  d003              BEQ      |L2.6682|
001a12  4863              LDR      r0,|L2.7072|
001a14  7ac0              LDRB     r0,[r0,#0xb]  ; Alarm
001a16  2801              CMP      r0,#1
001a18  d103              BNE      |L2.6690|
                  |L2.6682|
;;;1001                               {
;;;1002                                   Sacn_stopBack.result[0]=0xFC;//停止失败
001a1a  20fc              MOVS     r0,#0xfc
001a1c  495e              LDR      r1,|L2.7064|
001a1e  7048              STRB     r0,[r1,#1]
001a20  e005              B        |L2.6702|
                  |L2.6690|
;;;1003                               }
;;;1004                               else
;;;1005                               {
;;;1006                                   System.sweep = 0;				//清零
001a22  2000              MOVS     r0,#0
001a24  4941              LDR      r1,|L2.6956|
001a26  7388              STRB     r0,[r1,#0xe]
;;;1007                                   Sacn_stopBack.result[0]=0xFE;	//停止成功
001a28  20fe              MOVS     r0,#0xfe
001a2a  495b              LDR      r1,|L2.7064|
001a2c  7048              STRB     r0,[r1,#1]
                  |L2.6702|
;;;1008                               }
;;;1009                           }
;;;1010                       }
;;;1011   
;;;1012                       Send_PC(g_fuc_codToPC);
001a2e  4858              LDR      r0,|L2.7056|
001a30  f7fffffe          BL       Send_PC
001a34  e23a              B        |L2.7852|
                  |L2.6710|
;;;1013                   }
;;;1014                   else	if(g_fuc_cod[0]==0x0B&&g_fuc_cod[1]==0x01)		//功率增加
001a36  4857              LDR      r0,|L2.7060|
001a38  7800              LDRB     r0,[r0,#0]  ; g_fuc_cod
001a3a  280b              CMP      r0,#0xb
001a3c  d149              BNE      |L2.6866|
001a3e  4855              LDR      r0,|L2.7060|
001a40  7840              LDRB     r0,[r0,#1]  ; g_fuc_cod
001a42  2801              CMP      r0,#1
001a44  d145              BNE      |L2.6866|
;;;1015                   {
;;;1016                       Add_PowerBack.Transmitte_id[0]=System.CAN_ID[0];
001a46  4839              LDR      r0,|L2.6956|
001a48  7800              LDRB     r0,[r0,#0]  ; System
001a4a  4956              LDR      r1,|L2.7076|
001a4c  7008              STRB     r0,[r1,#0]
;;;1017                       g_fuc_codToPC[0]=0x0B;
001a4e  200b              MOVS     r0,#0xb
001a50  494f              LDR      r1,|L2.7056|
001a52  7008              STRB     r0,[r1,#0]
;;;1018                       g_fuc_codToPC[1]=0x02;
001a54  2002              MOVS     r0,#2
001a56  7048              STRB     r0,[r1,#1]
;;;1019   
;;;1020                       if( (System.open != 0x02) || (System.emission != 0x01) )			//没有开机或者不是发射状态
001a58  4834              LDR      r0,|L2.6956|
001a5a  7b00              LDRB     r0,[r0,#0xc]  ; System
001a5c  2802              CMP      r0,#2
001a5e  d103              BNE      |L2.6760|
001a60  4832              LDR      r0,|L2.6956|
001a62  7d80              LDRB     r0,[r0,#0x16]  ; System
001a64  2801              CMP      r0,#1
001a66  d008              BEQ      |L2.6778|
                  |L2.6760|
;;;1021                       {
;;;1022                           System.achieve_add_sub = 0;
001a68  2000              MOVS     r0,#0
001a6a  4930              LDR      r1,|L2.6956|
001a6c  7448              STRB     r0,[r1,#0x11]
;;;1023                           System.modify_power = 0;
001a6e  7488              STRB     r0,[r1,#0x12]
;;;1024                           System.cancel_add_sub = 0;
001a70  74c8              STRB     r0,[r1,#0x13]
;;;1025                           Add_PowerBack.results[0]=0xFC;		//增加功率失败
001a72  20fc              MOVS     r0,#0xfc
001a74  494b              LDR      r1,|L2.7076|
001a76  7048              STRB     r0,[r1,#1]
001a78  e027              B        |L2.6858|
                  |L2.6778|
;;;1026                       }
;;;1027                       else	//执行增加功率
;;;1028                       {
;;;1029   												System.Power_Adjustment=1;
001a7a  2001              MOVS     r0,#1
001a7c  492b              LDR      r1,|L2.6956|
001a7e  f88100a8          STRB     r0,[r1,#0xa8]
;;;1030                           if( System.modify_power == 0x01 )
001a82  4608              MOV      r0,r1
001a84  7c80              LDRB     r0,[r0,#0x12]  ; System
001a86  2801              CMP      r0,#1
001a88  d101              BNE      |L2.6798|
;;;1031                           {
;;;1032                               System.cancel_add_sub = 1;
001a8a  74c8              STRB     r0,[r1,#0x13]
001a8c  e004              B        |L2.6808|
                  |L2.6798|
;;;1033                           }
;;;1034                           else
;;;1035                           {
;;;1036                               System.cancel_add_sub = 0;
001a8e  2000              MOVS     r0,#0
001a90  4926              LDR      r1,|L2.6956|
001a92  74c8              STRB     r0,[r1,#0x13]
;;;1037                               System.modify_power = 0x01;
001a94  2001              MOVS     r0,#1
001a96  7488              STRB     r0,[r1,#0x12]
                  |L2.6808|
;;;1038                           }
;;;1039   
;;;1040                           if( get_history_alarm() == 0x01 )
001a98  f7fffffe          BL       get_history_alarm
001a9c  2801              CMP      r0,#1
001a9e  d103              BNE      |L2.6824|
;;;1041                           {
;;;1042                               System.status = SYSTEM_ALARM;
001aa0  2011              MOVS     r0,#0x11
001aa2  4922              LDR      r1,|L2.6956|
001aa4  72c8              STRB     r0,[r1,#0xb]
001aa6  e002              B        |L2.6830|
                  |L2.6824|
;;;1043                           }
;;;1044                           else
;;;1045                           {
;;;1046                               System.status = SYSTEM_EMISSING;
001aa8  2001              MOVS     r0,#1
001aaa  4920              LDR      r1,|L2.6956|
001aac  72c8              STRB     r0,[r1,#0xb]
                  |L2.6830|
;;;1047                           }
;;;1048   
;;;1049                           System.stop = 0x00;
001aae  2000              MOVS     r0,#0
001ab0  491e              LDR      r1,|L2.6956|
001ab2  7548              STRB     r0,[r1,#0x15]
;;;1050                           System.cancel_sweeping = 0x00;
001ab4  73c8              STRB     r0,[r1,#0xf]
;;;1051                           Add_PowerBack.results[0]=0xFE;		//增加成功
001ab6  20fe              MOVS     r0,#0xfe
001ab8  493a              LDR      r1,|L2.7076|
001aba  7048              STRB     r0,[r1,#1]
;;;1052   
;;;1053                           //App_printf("Task_Upper_Computer Add Notify!\r\n");
;;;1054                           xTaskNotify(xHandleTask_MT2000,		/* 增加功率 */
001abc  2300              MOVS     r3,#0
001abe  2201              MOVS     r2,#1
001ac0  2102              MOVS     r1,#2
001ac2  4839              LDR      r0,|L2.7080|
001ac4  6800              LDR      r0,[r0,#0]  ; xHandleTask_MT2000
001ac6  f7fffffe          BL       xTaskGenericNotify
                  |L2.6858|
;;;1055                                       BIT_1,
;;;1056                                       eSetBits);
;;;1057                       }
;;;1058   
;;;1059                       Send_PC(g_fuc_codToPC);
001aca  4831              LDR      r0,|L2.7056|
001acc  f7fffffe          BL       Send_PC
001ad0  e1ec              B        |L2.7852|
                  |L2.6866|
;;;1060                   }
;;;1061                   else	if(g_fuc_cod[0]==0x0C&&g_fuc_cod[1]==0x01)		//功率减小
001ad2  4830              LDR      r0,|L2.7060|
001ad4  7800              LDRB     r0,[r0,#0]  ; g_fuc_cod
001ad6  280c              CMP      r0,#0xc
001ad8  d127              BNE      |L2.6954|
001ada  482e              LDR      r0,|L2.7060|
001adc  7840              LDRB     r0,[r0,#1]  ; g_fuc_cod
001ade  2801              CMP      r0,#1
001ae0  d123              BNE      |L2.6954|
;;;1062                   {
;;;1063                       Sub_PowerBack.Transmitte_id[0]=System.CAN_ID[0];
001ae2  4812              LDR      r0,|L2.6956|
001ae4  7800              LDRB     r0,[r0,#0]  ; System
001ae6  4931              LDR      r1,|L2.7084|
001ae8  7008              STRB     r0,[r1,#0]
;;;1064                       g_fuc_codToPC[0]=0x0C;
001aea  200c              MOVS     r0,#0xc
001aec  4928              LDR      r1,|L2.7056|
001aee  7008              STRB     r0,[r1,#0]
;;;1065                       g_fuc_codToPC[1]=0x02;
001af0  2002              MOVS     r0,#2
001af2  7048              STRB     r0,[r1,#1]
;;;1066   
;;;1067                       if( (System.open != 0x02) || (System.emission != 0x01) )			//没有开机或者不是发射状态
001af4  480d              LDR      r0,|L2.6956|
001af6  7b00              LDRB     r0,[r0,#0xc]  ; System
001af8  2802              CMP      r0,#2
001afa  d103              BNE      |L2.6916|
001afc  480b              LDR      r0,|L2.6956|
001afe  7d80              LDRB     r0,[r0,#0x16]  ; System
001b00  2801              CMP      r0,#1
001b02  d008              BEQ      |L2.6934|
                  |L2.6916|
;;;1068                       {
;;;1069                           System.achieve_add_sub = 0;
001b04  2000              MOVS     r0,#0
001b06  4909              LDR      r1,|L2.6956|
001b08  7448              STRB     r0,[r1,#0x11]
;;;1070                           System.modify_power = 0;
001b0a  7488              STRB     r0,[r1,#0x12]
;;;1071                           System.cancel_add_sub = 0;
001b0c  74c8              STRB     r0,[r1,#0x13]
;;;1072                           Sub_PowerBack.results[0]=0xFC;		//减小功率失败
001b0e  20fc              MOVS     r0,#0xfc
001b10  4926              LDR      r1,|L2.7084|
001b12  7048              STRB     r0,[r1,#1]
001b14  e06a              B        |L2.7148|
                  |L2.6934|
;;;1073                       }
;;;1074                       else
;;;1075                       {
;;;1076   												System.Power_Adjustment=1;
001b16  2001              MOVS     r0,#1
001b18  4904              LDR      r1,|L2.6956|
001b1a  f88100a8          STRB     r0,[r1,#0xa8]
;;;1077                           if( System.modify_power == 0x01 )
001b1e  4608              MOV      r0,r1
001b20  7c80              LDRB     r0,[r0,#0x12]  ; System
001b22  2801              CMP      r0,#1
001b24  d144              BNE      |L2.7088|
;;;1078                           {
;;;1079                               System.cancel_add_sub = 1;
001b26  74c8              STRB     r0,[r1,#0x13]
001b28  e047              B        |L2.7098|
                  |L2.6954|
001b2a  e063              B        |L2.7156|
                  |L2.6956|
                          DCD      System
                  |L2.6960|
                          DCD      Scan_FrqBack
                  |L2.6964|
                          DCD      Scan_Frq
                  |L2.6968|
                          DCD      0x40a00000
                  |L2.6972|
                          DCD      Scan_FrqBack2
                  |L2.6976|
                          DCD      0x40e00000
                  |L2.6980|
                          DCD      Scan_FrqBack3
                  |L2.6984|
                          DCD      0x41100000
                  |L2.6988|
                          DCD      Scan_FrqBack4
                  |L2.6992|
                          DCD      0x41300000
                  |L2.6996|
                          DCD      Scan_FrqBack5
                  |L2.7000|
                          DCD      0x41500000
                  |L2.7004|
                          DCD      Scan_FrqBack6
                  |L2.7008|
                          DCD      0x41700000
                  |L2.7012|
                          DCD      Scan_FrqBack7
                  |L2.7016|
                          DCD      0x41880000
                  |L2.7020|
                          DCD      Scan_FrqBack8
                  |L2.7024|
                          DCD      0x41980000
                  |L2.7028|
                          DCD      Scan_FrqBack9
                  |L2.7032|
                          DCD      0x41a80000
                  |L2.7036|
                          DCD      Scan_FrqBack10
                  |L2.7040|
                          DCD      0x41b80000
                  |L2.7044|
                          DCD      Scan_FrqBack11
                  |L2.7048|
                          DCD      0x41c80000
                  |L2.7052|
                          DCD      Scan_FrqBack12
                  |L2.7056|
                          DCD      g_fuc_codToPC
                  |L2.7060|
                          DCD      g_fuc_cod
                  |L2.7064|
                          DCD      Sacn_stopBack
                  |L2.7068|
                          DCD      Sacn_stop
                  |L2.7072|
                          DCD      Alarm
                  |L2.7076|
                          DCD      Add_PowerBack
                  |L2.7080|
                          DCD      xHandleTask_MT2000
                  |L2.7084|
                          DCD      Sub_PowerBack
                  |L2.7088|
;;;1080                           }
;;;1081                           else
;;;1082                           {
;;;1083                               System.cancel_add_sub = 0;
001bb0  2000              MOVS     r0,#0
001bb2  49d8              LDR      r1,|L2.7956|
001bb4  74c8              STRB     r0,[r1,#0x13]
;;;1084                               System.modify_power = 0x01;
001bb6  2001              MOVS     r0,#1
001bb8  7488              STRB     r0,[r1,#0x12]
                  |L2.7098|
;;;1085                           }
;;;1086   
;;;1087                           if( get_history_alarm() == 0x01 )
001bba  f7fffffe          BL       get_history_alarm
001bbe  2801              CMP      r0,#1
001bc0  d103              BNE      |L2.7114|
;;;1088                           {
;;;1089                               System.status = SYSTEM_ALARM;
001bc2  2011              MOVS     r0,#0x11
001bc4  49d3              LDR      r1,|L2.7956|
001bc6  72c8              STRB     r0,[r1,#0xb]
001bc8  e002              B        |L2.7120|
                  |L2.7114|
;;;1090                           }
;;;1091                           else
;;;1092                           {
;;;1093                               System.status = SYSTEM_EMISSING;
001bca  2001              MOVS     r0,#1
001bcc  49d1              LDR      r1,|L2.7956|
001bce  72c8              STRB     r0,[r1,#0xb]
                  |L2.7120|
;;;1094                           }
;;;1095   
;;;1096                           System.stop = 0x00;
001bd0  2000              MOVS     r0,#0
001bd2  49d0              LDR      r1,|L2.7956|
001bd4  7548              STRB     r0,[r1,#0x15]
;;;1097                           System.cancel_sweeping = 0x00;
001bd6  73c8              STRB     r0,[r1,#0xf]
;;;1098                           Sub_PowerBack.results[0]=0xFE;		//减小成功
001bd8  20fe              MOVS     r0,#0xfe
001bda  49cf              LDR      r1,|L2.7960|
001bdc  7048              STRB     r0,[r1,#1]
;;;1099   
;;;1100                           //App_printf("Task_Upper_Computer Sub Notify!\r\n");
;;;1101                           xTaskNotify(xHandleTask_MT2000,	/* 减小功率 */
001bde  2300              MOVS     r3,#0
001be0  2201              MOVS     r2,#1
001be2  2104              MOVS     r1,#4
001be4  48cd              LDR      r0,|L2.7964|
001be6  6800              LDR      r0,[r0,#0]  ; xHandleTask_MT2000
001be8  f7fffffe          BL       xTaskGenericNotify
                  |L2.7148|
;;;1102                                       BIT_2,
;;;1103                                       eSetBits);
;;;1104                       }
;;;1105   
;;;1106                       Send_PC(g_fuc_codToPC);
001bec  48cc              LDR      r0,|L2.7968|
001bee  f7fffffe          BL       Send_PC
                  |L2.7154|
001bf2  e15b              B        |L2.7852|
                  |L2.7156|
;;;1107                   }
;;;1108                   else	if(g_fuc_cod[0]==0x0D && g_fuc_cod[1]==0x01)	//运行图
001bf4  48cb              LDR      r0,|L2.7972|
001bf6  7800              LDRB     r0,[r0,#0]  ; g_fuc_cod
001bf8  280d              CMP      r0,#0xd
001bfa  d1fa              BNE      |L2.7154|
001bfc  48c9              LDR      r0,|L2.7972|
001bfe  7840              LDRB     r0,[r0,#1]  ; g_fuc_cod
001c00  2801              CMP      r0,#1
001c02  d1f6              BNE      |L2.7154|
;;;1109                   {
;;;1110                       Run_DiagramBack.Transmitte_id[0]=System.CAN_ID[0];
001c04  48c3              LDR      r0,|L2.7956|
001c06  7800              LDRB     r0,[r0,#0]  ; System
001c08  49c7              LDR      r1,|L2.7976|
001c0a  7008              STRB     r0,[r1,#0]
;;;1111                       g_fuc_codToPC[0]=0x0D;
001c0c  200d              MOVS     r0,#0xd
001c0e  49c4              LDR      r1,|L2.7968|
001c10  7008              STRB     r0,[r1,#0]
;;;1112                       g_fuc_codToPC[1]=0x02;
001c12  2002              MOVS     r0,#2
001c14  7048              STRB     r0,[r1,#1]
;;;1113   
;;;1114                       if(Run_Diagram.Continue[1]==0xFC)   //运行图发送完毕
001c16  48c5              LDR      r0,|L2.7980|
001c18  78c0              LDRB     r0,[r0,#3]
001c1a  28fc              CMP      r0,#0xfc
001c1c  d10f              BNE      |L2.7230|
;;;1115                       {
;;;1116                           if(InternalFlash_SaveData_3(Run_Diagram.Continue[0])==0)		//保存的时候会把地址的首位置位，读取时将读取并赋值为flash_3_once_flag
001c1e  48c3              LDR      r0,|L2.7980|
001c20  7880              LDRB     r0,[r0,#2]  ; Run_Diagram
001c22  9005              STR      r0,[sp,#0x14]
001c24  f7fffffe          BL       InternalFlash_SaveData_3
001c28  b930              CBNZ     r0,|L2.7224|
;;;1117                           {
;;;1118                               flash_3_once_flag=0;
001c2a  2000              MOVS     r0,#0
001c2c  49c0              LDR      r1,|L2.7984|
001c2e  6008              STR      r0,[r1,#0]  ; flash_3_once_flag
;;;1119                               Run_DiagramBack.results[0]=0xFD;
001c30  20fd              MOVS     r0,#0xfd
001c32  49bd              LDR      r1,|L2.7976|
001c34  7048              STRB     r0,[r1,#1]
001c36  e005              B        |L2.7236|
                  |L2.7224|
;;;1120                           }
;;;1121                           else
;;;1122                           {
;;;1123                               Flash3_to_AcceptAPP();		//读取运行图标志位和数量
001c38  f7fffffe          BL       Flash3_to_AcceptAPP
001c3c  e002              B        |L2.7236|
                  |L2.7230|
;;;1124                           }
;;;1125                       }
;;;1126                       else
;;;1127                       {
;;;1128                           flash_3_once_flag=0;
001c3e  2000              MOVS     r0,#0
001c40  49bb              LDR      r1,|L2.7984|
001c42  6008              STR      r0,[r1,#0]  ; flash_3_once_flag
                  |L2.7236|
;;;1129                       }
;;;1130   
;;;1131                       switch(Run_Diagram.Continue[0])
001c44  48b9              LDR      r0,|L2.7980|
001c46  7880              LDRB     r0,[r0,#2]  ; Run_Diagram
001c48  280b              CMP      r0,#0xb
001c4a  d26e              BCS      |L2.7466|
001c4c  e8dff000          TBB      [pc,r0]
001c50  ba061729          DCB      0xba,0x06,0x17,0x29
001c54  3b4d5f72          DCB      0x3b,0x4d,0x5f,0x72
001c58  8496a800          DCB      0x84,0x96,0xa8,0x00
;;;1132                       {
;;;1133   						case 1:
;;;1134   							if(Flash_Save_Run_Diagram(WRITE_START_ADDR_1,WRITE_END_ADDR_1,Run_Diagram.count[0])==0)
001c5c  48b3              LDR      r0,|L2.7980|
001c5e  7840              LDRB     r0,[r0,#1]  ; Run_Diagram
001c60  4602              MOV      r2,r0
001c62  49b4              LDR      r1,|L2.7988|
001c64  9005              STR      r0,[sp,#0x14]
001c66  48b4              LDR      r0,|L2.7992|
001c68  f7fffffe          BL       Flash_Save_Run_Diagram
001c6c  b918              CBNZ     r0,|L2.7286|
;;;1135   							{
;;;1136   								Run_DiagramBack.results[0]=0xFD;
001c6e  20fd              MOVS     r0,#0xfd
001c70  49ad              LDR      r1,|L2.7976|
001c72  7048              STRB     r0,[r1,#1]
001c74  e002              B        |L2.7292|
                  |L2.7286|
;;;1137   							}
;;;1138   							else
;;;1139   							{
;;;1140   								Run_DiagramBack.results[0]=0xFE;
001c76  20fe              MOVS     r0,#0xfe
001c78  49ab              LDR      r1,|L2.7976|
001c7a  7048              STRB     r0,[r1,#1]
                  |L2.7292|
;;;1141   							}
;;;1142   							break;
001c7c  e0a6              B        |L2.7628|
;;;1143   						case 2:
;;;1144   							if(Flash_Save_Run_Diagram(WRITE_START_ADDR_2,WRITE_END_ADDR_2,Run_Diagram.count[0])==0)
001c7e  48ab              LDR      r0,|L2.7980|
001c80  7840              LDRB     r0,[r0,#1]  ; Run_Diagram
001c82  4602              MOV      r2,r0
001c84  49ad              LDR      r1,|L2.7996|
001c86  9005              STR      r0,[sp,#0x14]
001c88  48aa              LDR      r0,|L2.7988|
001c8a  1c40              ADDS     r0,r0,#1
001c8c  f7fffffe          BL       Flash_Save_Run_Diagram
001c90  b918              CBNZ     r0,|L2.7322|
;;;1145   							{
;;;1146   								Run_DiagramBack.results[0]=0xFD;
001c92  20fd              MOVS     r0,#0xfd
001c94  49a4              LDR      r1,|L2.7976|
001c96  7048              STRB     r0,[r1,#1]
001c98  e002              B        |L2.7328|
                  |L2.7322|
;;;1147   							}
;;;1148   							else
;;;1149   							{
;;;1150   								Run_DiagramBack.results[0]=0xFE;
001c9a  20fe              MOVS     r0,#0xfe
001c9c  49a2              LDR      r1,|L2.7976|
001c9e  7048              STRB     r0,[r1,#1]
                  |L2.7328|
;;;1151   							}
;;;1152   							break;
001ca0  e094              B        |L2.7628|
;;;1153   						case 3:
;;;1154   							if(Flash_Save_Run_Diagram(WRITE_START_ADDR_3,WRITE_END_ADDR_3,Run_Diagram.count[0])==0)
001ca2  48a2              LDR      r0,|L2.7980|
001ca4  7840              LDRB     r0,[r0,#1]  ; Run_Diagram
001ca6  4602              MOV      r2,r0
001ca8  49a5              LDR      r1,|L2.8000|
001caa  9005              STR      r0,[sp,#0x14]
001cac  48a3              LDR      r0,|L2.7996|
001cae  1c40              ADDS     r0,r0,#1
001cb0  f7fffffe          BL       Flash_Save_Run_Diagram
001cb4  b918              CBNZ     r0,|L2.7358|
;;;1155   							{
;;;1156   								Run_DiagramBack.results[0]=0xFD;
001cb6  20fd              MOVS     r0,#0xfd
001cb8  499b              LDR      r1,|L2.7976|
001cba  7048              STRB     r0,[r1,#1]
001cbc  e002              B        |L2.7364|
                  |L2.7358|
;;;1157   							}
;;;1158   							else
;;;1159   							{
;;;1160   								Run_DiagramBack.results[0]=0xFE;
001cbe  20fe              MOVS     r0,#0xfe
001cc0  4999              LDR      r1,|L2.7976|
001cc2  7048              STRB     r0,[r1,#1]
                  |L2.7364|
;;;1161   							}
;;;1162   							break;
001cc4  e082              B        |L2.7628|
;;;1163   						case 4:
;;;1164   							if(Flash_Save_Run_Diagram(WRITE_START_ADDR_4,WRITE_END_ADDR_4,Run_Diagram.count[0])==0)
001cc6  4899              LDR      r0,|L2.7980|
001cc8  7840              LDRB     r0,[r0,#1]  ; Run_Diagram
001cca  4602              MOV      r2,r0
001ccc  499d              LDR      r1,|L2.8004|
001cce  9005              STR      r0,[sp,#0x14]
001cd0  489b              LDR      r0,|L2.8000|
001cd2  1c40              ADDS     r0,r0,#1
001cd4  f7fffffe          BL       Flash_Save_Run_Diagram
001cd8  b918              CBNZ     r0,|L2.7394|
;;;1165   							{
;;;1166   								Run_DiagramBack.results[0]=0xFD;
001cda  20fd              MOVS     r0,#0xfd
001cdc  4992              LDR      r1,|L2.7976|
001cde  7048              STRB     r0,[r1,#1]
001ce0  e002              B        |L2.7400|
                  |L2.7394|
;;;1167   							}
;;;1168   							else
;;;1169   							{
;;;1170   								Run_DiagramBack.results[0]=0xFE;
001ce2  20fe              MOVS     r0,#0xfe
001ce4  4990              LDR      r1,|L2.7976|
001ce6  7048              STRB     r0,[r1,#1]
                  |L2.7400|
;;;1171   							}
;;;1172   							break;
001ce8  e070              B        |L2.7628|
;;;1173   						case 5:
;;;1174   							if(Flash_Save_Run_Diagram(WRITE_START_ADDR_5,WRITE_END_ADDR_5,Run_Diagram.count[0])==0)
001cea  4890              LDR      r0,|L2.7980|
001cec  7840              LDRB     r0,[r0,#1]  ; Run_Diagram
001cee  4602              MOV      r2,r0
001cf0  4995              LDR      r1,|L2.8008|
001cf2  9005              STR      r0,[sp,#0x14]
001cf4  4893              LDR      r0,|L2.8004|
001cf6  1c40              ADDS     r0,r0,#1
001cf8  f7fffffe          BL       Flash_Save_Run_Diagram
001cfc  b918              CBNZ     r0,|L2.7430|
;;;1175   							{
;;;1176   								Run_DiagramBack.results[0]=0xFD;
001cfe  20fd              MOVS     r0,#0xfd
001d00  4989              LDR      r1,|L2.7976|
001d02  7048              STRB     r0,[r1,#1]
001d04  e002              B        |L2.7436|
                  |L2.7430|
;;;1177   							}
;;;1178   							else
;;;1179   							{
;;;1180   								Run_DiagramBack.results[0]=0xFE;
001d06  20fe              MOVS     r0,#0xfe
001d08  4987              LDR      r1,|L2.7976|
001d0a  7048              STRB     r0,[r1,#1]
                  |L2.7436|
;;;1181   							}
;;;1182   							break;
001d0c  e05e              B        |L2.7628|
;;;1183   						case 6:
;;;1184   							if(Flash_Save_Run_Diagram(WRITE_START_ADDR_6,WRITE_END_ADDR_6,Run_Diagram.count[0])==0)
001d0e  4887              LDR      r0,|L2.7980|
001d10  7840              LDRB     r0,[r0,#1]  ; Run_Diagram
001d12  4602              MOV      r2,r0
001d14  498d              LDR      r1,|L2.8012|
001d16  9005              STR      r0,[sp,#0x14]
001d18  488b              LDR      r0,|L2.8008|
001d1a  1c40              ADDS     r0,r0,#1
001d1c  f7fffffe          BL       Flash_Save_Run_Diagram
001d20  b920              CBNZ     r0,|L2.7468|
;;;1185   							{
;;;1186   								Run_DiagramBack.results[0]=0xFD;
001d22  20fd              MOVS     r0,#0xfd
001d24  4980              LDR      r1,|L2.7976|
001d26  7048              STRB     r0,[r1,#1]
001d28  e003              B        |L2.7474|
                  |L2.7466|
001d2a  e04b              B        |L2.7620|
                  |L2.7468|
;;;1187   							}
;;;1188   							else
;;;1189   							{
;;;1190   								Run_DiagramBack.results[0]=0xFE;
001d2c  20fe              MOVS     r0,#0xfe
001d2e  497e              LDR      r1,|L2.7976|
001d30  7048              STRB     r0,[r1,#1]
                  |L2.7474|
;;;1191   							}
;;;1192   							break;
001d32  e04b              B        |L2.7628|
;;;1193   						case 7:
;;;1194   							if(Flash_Save_Run_Diagram(WRITE_START_ADDR_7,WRITE_END_ADDR_7,Run_Diagram.count[0])==0)
001d34  487d              LDR      r0,|L2.7980|
001d36  7840              LDRB     r0,[r0,#1]  ; Run_Diagram
001d38  4602              MOV      r2,r0
001d3a  4985              LDR      r1,|L2.8016|
001d3c  9005              STR      r0,[sp,#0x14]
001d3e  4883              LDR      r0,|L2.8012|
001d40  1c40              ADDS     r0,r0,#1
001d42  f7fffffe          BL       Flash_Save_Run_Diagram
001d46  b918              CBNZ     r0,|L2.7504|
;;;1195   							{
;;;1196   								Run_DiagramBack.results[0]=0xFD;
001d48  20fd              MOVS     r0,#0xfd
001d4a  4977              LDR      r1,|L2.7976|
001d4c  7048              STRB     r0,[r1,#1]
001d4e  e002              B        |L2.7510|
                  |L2.7504|
;;;1197   							}
;;;1198   							else
;;;1199   							{
;;;1200   								Run_DiagramBack.results[0]=0xFE;
001d50  20fe              MOVS     r0,#0xfe
001d52  4975              LDR      r1,|L2.7976|
001d54  7048              STRB     r0,[r1,#1]
                  |L2.7510|
;;;1201   							}
;;;1202   							break;
001d56  e039              B        |L2.7628|
;;;1203   						case 8:
;;;1204   							if(Flash_Save_Run_Diagram(WRITE_START_ADDR_8,WRITE_END_ADDR_8,Run_Diagram.count[0])==0)
001d58  4874              LDR      r0,|L2.7980|
001d5a  7840              LDRB     r0,[r0,#1]  ; Run_Diagram
001d5c  4602              MOV      r2,r0
001d5e  497d              LDR      r1,|L2.8020|
001d60  9005              STR      r0,[sp,#0x14]
001d62  487b              LDR      r0,|L2.8016|
001d64  1c40              ADDS     r0,r0,#1
001d66  f7fffffe          BL       Flash_Save_Run_Diagram
001d6a  b918              CBNZ     r0,|L2.7540|
;;;1205   							{
;;;1206   								Run_DiagramBack.results[0]=0xFD;
001d6c  20fd              MOVS     r0,#0xfd
001d6e  496e              LDR      r1,|L2.7976|
001d70  7048              STRB     r0,[r1,#1]
001d72  e002              B        |L2.7546|
                  |L2.7540|
;;;1207   							}
;;;1208   							else
;;;1209   							{
;;;1210   								Run_DiagramBack.results[0]=0xFE;
001d74  20fe              MOVS     r0,#0xfe
001d76  496c              LDR      r1,|L2.7976|
001d78  7048              STRB     r0,[r1,#1]
                  |L2.7546|
;;;1211   							}
;;;1212   							break;
001d7a  e027              B        |L2.7628|
;;;1213   						case 9:
;;;1214   							if(Flash_Save_Run_Diagram(WRITE_START_ADDR_9,WRITE_END_ADDR_9,Run_Diagram.count[0])==0)
001d7c  486b              LDR      r0,|L2.7980|
001d7e  7840              LDRB     r0,[r0,#1]  ; Run_Diagram
001d80  4602              MOV      r2,r0
001d82  4975              LDR      r1,|L2.8024|
001d84  9005              STR      r0,[sp,#0x14]
001d86  4873              LDR      r0,|L2.8020|
001d88  1c40              ADDS     r0,r0,#1
001d8a  f7fffffe          BL       Flash_Save_Run_Diagram
001d8e  b918              CBNZ     r0,|L2.7576|
;;;1215   							{
;;;1216   								Run_DiagramBack.results[0]=0xFD;
001d90  20fd              MOVS     r0,#0xfd
001d92  4965              LDR      r1,|L2.7976|
001d94  7048              STRB     r0,[r1,#1]
001d96  e002              B        |L2.7582|
                  |L2.7576|
;;;1217   							}
;;;1218   							else
;;;1219   							{
;;;1220   								Run_DiagramBack.results[0]=0xFE;
001d98  20fe              MOVS     r0,#0xfe
001d9a  4963              LDR      r1,|L2.7976|
001d9c  7048              STRB     r0,[r1,#1]
                  |L2.7582|
;;;1221   							}
;;;1222   							break;
001d9e  e015              B        |L2.7628|
;;;1223   						case 10:
;;;1224   							if(Flash_Save_Run_Diagram(WRITE_START_ADDR_10,WRITE_END_ADDR_10,Run_Diagram.count[0])==0)
001da0  4862              LDR      r0,|L2.7980|
001da2  7840              LDRB     r0,[r0,#1]  ; Run_Diagram
001da4  4602              MOV      r2,r0
001da6  496d              LDR      r1,|L2.8028|
001da8  9005              STR      r0,[sp,#0x14]
001daa  486b              LDR      r0,|L2.8024|
001dac  1c40              ADDS     r0,r0,#1
001dae  f7fffffe          BL       Flash_Save_Run_Diagram
001db2  b918              CBNZ     r0,|L2.7612|
;;;1225   							{
;;;1226   								Run_DiagramBack.results[0]=0xFD;
001db4  20fd              MOVS     r0,#0xfd
001db6  495c              LDR      r1,|L2.7976|
001db8  7048              STRB     r0,[r1,#1]
001dba  e002              B        |L2.7618|
                  |L2.7612|
;;;1227   							}
;;;1228   							else
;;;1229   							{
;;;1230   								Run_DiagramBack.results[0]=0xFE;
001dbc  20fe              MOVS     r0,#0xfe
001dbe  495a              LDR      r1,|L2.7976|
001dc0  7048              STRB     r0,[r1,#1]
                  |L2.7618|
;;;1231   							}
;;;1232   							break;
001dc2  e003              B        |L2.7628|
                  |L2.7620|
;;;1233   						default:
;;;1234   							Run_DiagramBack.results[0]=0xFD;
001dc4  20fd              MOVS     r0,#0xfd
001dc6  4958              LDR      r1,|L2.7976|
001dc8  7048              STRB     r0,[r1,#1]
;;;1235   							break;
001dca  bf00              NOP      
                  |L2.7628|
001dcc  bf00              NOP                            ;1142
;;;1236                       }
;;;1237   				
;;;1238   					if(flash_3_once_flag==1)
001dce  4858              LDR      r0,|L2.7984|
001dd0  6800              LDR      r0,[r0,#0]  ; flash_3_once_flag
001dd2  2801              CMP      r0,#1
001dd4  d10b              BNE      |L2.7662|
;;;1239   					{
;;;1240   						if(flash3_Save<=10&&flash3_Save>0)
001dd6  4862              LDR      r0,|L2.8032|
001dd8  7800              LDRB     r0,[r0,#0]  ; flash3_Save
001dda  280a              CMP      r0,#0xa
001ddc  dc07              BGT      |L2.7662|
001dde  4860              LDR      r0,|L2.8032|
001de0  7800              LDRB     r0,[r0,#0]  ; flash3_Save
001de2  2800              CMP      r0,#0
001de4  dd03              BLE      |L2.7662|
;;;1241   						{
;;;1242   							judg_read_flash(flash3_Save);		//读运行图到数组Run_Diagram_buf[n]，并清空后面未保存运行图的flash
001de6  485e              LDR      r0,|L2.8032|
001de8  7800              LDRB     r0,[r0,#0]  ; flash3_Save
001dea  f7fffffe          BL       judg_read_flash
                  |L2.7662|
;;;1243   							//App_printf("receive run diagram success!\r\n");
;;;1244   						}
;;;1245   					}
;;;1246   							
;;;1247                       Send_PC(g_fuc_codToPC);
001dee  484c              LDR      r0,|L2.7968|
001df0  f7fffffe          BL       Send_PC
001df4  e05a              B        |L2.7852|
                  |L2.7670|
;;;1248                   }
;;;1249               }
;;;1250               else	if(ret==2)		//数据不完整，不是05 02开头，或不是03 04结尾
001df6  9806              LDR      r0,[sp,#0x18]
001df8  2802              CMP      r0,#2
001dfa  d057              BEQ      |L2.7852|
;;;1251               {
;;;1252                   //App_printf("It is not a valid CAN data!\r\n");
;;;1253               }
;;;1254               else	if(ret==3)		//解析成功，但是发射机system.CAN_ID错误，返回未初始化
001dfc  9806              LDR      r0,[sp,#0x18]
001dfe  2803              CMP      r0,#3
001e00  d14e              BNE      |L2.7840|
;;;1255               {
;;;1256                   //App_printf("PC//inquire\r\n");
;;;1257                   g_fuc_codToPC[0]=0x02;
001e02  2002              MOVS     r0,#2
001e04  4946              LDR      r1,|L2.7968|
001e06  7008              STRB     r0,[r1,#0]
;;;1258                   g_fuc_codToPC[1]=0x02;
001e08  7048              STRB     r0,[r1,#1]
;;;1259   
;;;1260                   Work_paraBack.Trans_current_state[0] = SYSTEM_UNINITIALIZE;
001e0a  2010              MOVS     r0,#0x10
001e0c  4955              LDR      r1,|L2.8036|
001e0e  7048              STRB     r0,[r1,#1]
;;;1261   
;;;1262                   //Work_paraBack清零
;;;1263                   Work_paraBack.Mode[0]=0;
001e10  2000              MOVS     r0,#0
001e12  7088              STRB     r0,[r1,#2]
;;;1264                   memset(Work_paraBack.Freq,0,12);
001e14  1d88              ADDS     r0,r1,#6
001e16  2100              MOVS     r1,#0
001e18  6001              STR      r1,[r0,#0]  ; Work_paraBack
001e1a  6041              STR      r1,[r0,#4]  ; Work_paraBack
001e1c  6081              STR      r1,[r0,#8]  ; Work_paraBack
;;;1265                   Work_paraBack.Power_45_voltage[0]=0;
001e1e  2000              MOVS     r0,#0
001e20  4950              LDR      r1,|L2.8036|
001e22  f8c10021          STR      r0,[r1,#0x21]  ; Work_paraBack
;;;1266                   Work_paraBack.Power_45_intensity[0]=0;
001e26  f8c1001d          STR      r0,[r1,#0x1d]  ; Work_paraBack
;;;1267                   memset(Work_paraBack.Freq,0,12);			//频率先清零，后赋值
001e2a  1d88              ADDS     r0,r1,#6
001e2c  2100              MOVS     r1,#0
001e2e  6001              STR      r1,[r0,#0]  ; Work_paraBack
001e30  6041              STR      r1,[r0,#4]  ; Work_paraBack
001e32  6081              STR      r1,[r0,#8]  ; Work_paraBack
;;;1268                   Work_paraBack.Forward_power[0] = 0.0;		//功率先清零，后赋值
001e34  2000              MOVS     r0,#0
001e36  494b              LDR      r1,|L2.8036|
001e38  f8c10015          STR      r0,[r1,#0x15]  ; Work_paraBack
;;;1269                   Work_paraBack.Reverse_power[0] = 0.0;
001e3c  f8c10019          STR      r0,[r1,#0x19]  ; Work_paraBack
;;;1270                   Work_paraBack.emission[0]=0x00;
001e40  f881002d          STRB     r0,[r1,#0x2d]
;;;1271   
;;;1272                   Work_paraBack.Channel[0] = PC_Cmd.channel[0];	//发射的信号		(旧机器有3信道，新机器只有1个信道，兼容，直接原样返回)
001e44  4848              LDR      r0,|L2.8040|
001e46  7940              LDRB     r0,[r0,#5]  ; PC_Cmd
001e48  70c8              STRB     r0,[r1,#3]
;;;1273                   Work_paraBack.Channel[1] = PC_Cmd.channel[1];
001e4a  4847              LDR      r0,|L2.8040|
001e4c  7981              LDRB     r1,[r0,#6]
001e4e  4845              LDR      r0,|L2.8036|
001e50  7101              STRB     r1,[r0,#4]
;;;1274                   Work_paraBack.Channel[2] = PC_Cmd.channel[2];
001e52  4845              LDR      r0,|L2.8040|
001e54  79c1              LDRB     r1,[r0,#7]
001e56  4843              LDR      r0,|L2.8036|
001e58  7141              STRB     r1,[r0,#5]
;;;1275   
;;;1276                   Work_paraBack.Power_grade[0] = PC_Cmd.power[0];	//发射的功率等级	(旧机器有3功率等级，新机器只有1个功率等级，兼容，直接原样返回)
001e5a  4843              LDR      r0,|L2.8040|
001e5c  7880              LDRB     r0,[r0,#2]  ; PC_Cmd
001e5e  4941              LDR      r1,|L2.8036|
001e60  7488              STRB     r0,[r1,#0x12]
;;;1277                   Work_paraBack.Power_grade[1] = PC_Cmd.power[1];
001e62  4841              LDR      r0,|L2.8040|
001e64  78c1              LDRB     r1,[r0,#3]
001e66  483f              LDR      r0,|L2.8036|
001e68  74c1              STRB     r1,[r0,#0x13]
;;;1278                   Work_paraBack.Power_grade[2] = PC_Cmd.power[2];
001e6a  483f              LDR      r0,|L2.8040|
001e6c  7901              LDRB     r1,[r0,#4]
001e6e  483d              LDR      r0,|L2.8036|
001e70  7501              STRB     r1,[r0,#0x14]
;;;1279   
;;;1280                   set_alarm_bit();
001e72  f7fffffe          BL       set_alarm_bit
;;;1281                   Work_paraBack.current_alarm_state[0] = Alarm_historyBack.alarm_history[0];
001e76  483d              LDR      r0,|L2.8044|
001e78  7840              LDRB     r0,[r0,#1]  ; Alarm_historyBack
001e7a  493a              LDR      r1,|L2.8036|
001e7c  f881002e          STRB     r0,[r1,#0x2e]
;;;1282                   Work_paraBack.current_alarm_state[0] = Alarm_historyBack.alarm_history[0];
001e80  483a              LDR      r0,|L2.8044|
001e82  7840              LDRB     r0,[r0,#1]  ; Alarm_historyBack
001e84  f881002e          STRB     r0,[r1,#0x2e]
;;;1283   
;;;1284                   Work_paraBack.temp[0]=Temperature_Humidity.Temperature;		//温度
001e88  4839              LDR      r0,|L2.8048|
001e8a  6800              LDR      r0,[r0,#0]  ; Temperature_Humidity
001e8c  f8c10025          STR      r0,[r1,#0x25]  ; Work_paraBack
;;;1285                   Work_paraBack.humidity[0]=Temperature_Humidity.Humidity;	//湿度
001e90  4837              LDR      r0,|L2.8048|
001e92  6840              LDR      r0,[r0,#4]  ; Temperature_Humidity
001e94  f8c10029          STR      r0,[r1,#0x29]  ; Work_paraBack
;;;1286   
;;;1287                   Send_PC(g_fuc_codToPC);			//Data_Assemble() 里面的CAN_ID 修改为 Work_paraBack.Trans_current_state[0] --20181031 Luonus
001e98  4821              LDR      r0,|L2.7968|
001e9a  f7fffffe          BL       Send_PC
001e9e  e005              B        |L2.7852|
                  |L2.7840|
;;;1288   
;;;1289                   //App_printf("system.CAN_ID math faiule!\r\n");
;;;1290               }
;;;1291               else	if(ret==4)		//没有功能码
001ea0  9806              LDR      r0,[sp,#0x18]
001ea2  2804              CMP      r0,#4
001ea4  d002              BEQ      |L2.7852|
;;;1292               {
;;;1293                   //App_printf("no have fuction code!\r\n!\r\n");
;;;1294               }
;;;1295               else	if(ret==5)		//CRC校验错误
001ea6  e001              B        |L2.7852|
                  |L2.7848|
;;;1296               {
;;;1297                   //App_printf("CRC fault!\r\n");
;;;1298               }
;;;1299           }
;;;1300           else
;;;1301           {
;;;1302               count=0;
001ea8  2000              MOVS     r0,#0
001eaa  9007              STR      r0,[sp,#0x1c]
                  |L2.7852|
;;;1303           }
;;;1304   
;;;1305           if( Monitor.hard_control == 0x00 )	//硬件接管单独有查询的任务通知
001eac  4831              LDR      r0,|L2.8052|
001eae  f89000ca          LDRB     r0,[r0,#0xca]  ; Monitor
001eb2  bb48              CBNZ     r0,|L2.7944|
;;;1306           {
;;;1307               if( System.already_init == 0x00 )
001eb4  4817              LDR      r0,|L2.7956|
001eb6  7880              LDRB     r0,[r0,#2]  ; System
001eb8  b918              CBNZ     r0,|L2.7874|
;;;1308               {
;;;1309                   System.status = SYSTEM_UNINITIALIZE;
001eba  2010              MOVS     r0,#0x10
001ebc  4915              LDR      r1,|L2.7956|
001ebe  72c8              STRB     r0,[r1,#0xb]
001ec0  e022              B        |L2.7944|
                  |L2.7874|
;;;1310               }
;;;1311               else
;;;1312               {
;;;1313                   task_upper_inquire_counter++;
001ec2  482d              LDR      r0,|L2.8056|
001ec4  7800              LDRB     r0,[r0,#0]  ; task_upper_inquire_counter
001ec6  1c40              ADDS     r0,r0,#1
001ec8  492b              LDR      r1,|L2.8056|
001eca  7008              STRB     r0,[r1,#0]
;;;1314                   if( task_upper_inquire_counter > 10 )
001ecc  4608              MOV      r0,r1
001ece  7800              LDRB     r0,[r0,#0]  ; task_upper_inquire_counter
001ed0  280a              CMP      r0,#0xa
001ed2  dd19              BLE      |L2.7944|
;;;1315                   {
;;;1316                       //正在开机、调频、扫频、调整功率	不查询
;;;1317                       if( (System.status==SYSTEM_OPENING) || (System.status==SYSTEM_SCAN) || (System.modify_power==0x01) )
001ed4  480f              LDR      r0,|L2.7956|
001ed6  7ac0              LDRB     r0,[r0,#0xb]  ; System
001ed8  2806              CMP      r0,#6
001eda  d007              BEQ      |L2.7916|
001edc  480d              LDR      r0,|L2.7956|
001ede  7ac0              LDRB     r0,[r0,#0xb]  ; System
001ee0  2805              CMP      r0,#5
001ee2  d003              BEQ      |L2.7916|
001ee4  480b              LDR      r0,|L2.7956|
001ee6  7c80              LDRB     r0,[r0,#0x12]  ; System
001ee8  2801              CMP      r0,#1
001eea  d103              BNE      |L2.7924|
                  |L2.7916|
;;;1318                       {
;;;1319                           task_upper_inquire_counter = 10;
001eec  200a              MOVS     r0,#0xa
001eee  4922              LDR      r1,|L2.8056|
001ef0  7008              STRB     r0,[r1,#0]
001ef2  e009              B        |L2.7944|
                  |L2.7924|
;;;1320                       }
;;;1321                       else
;;;1322                       {
;;;1323                           task_upper_inquire_counter = 0;
001ef4  2000              MOVS     r0,#0
001ef6  4920              LDR      r1,|L2.8056|
001ef8  7008              STRB     r0,[r1,#0]
;;;1324   
;;;1325                           //App_printf("Task_Upper_Computer Inquire(1s) Notify!\r\n");
;;;1326                           xTaskNotify(xHandleTask_MT2000,		//查询
001efa  2300              MOVS     r3,#0
001efc  2201              MOVS     r2,#1
001efe  0291              LSLS     r1,r2,#10
001f00  4806              LDR      r0,|L2.7964|
001f02  6800              LDR      r0,[r0,#0]  ; xHandleTask_MT2000
001f04  f7fffffe          BL       xTaskGenericNotify
                  |L2.7944|
;;;1327                                       BIT_10,
;;;1328                                       eSetBits);
;;;1329                       }
;;;1330                   }
;;;1331               }
;;;1332           }
;;;1333   
;;;1334           vTaskDelay(50);
001f08  2032              MOVS     r0,#0x32
001f0a  f7fffffe          BL       vTaskDelay
                  |L2.7950|
001f0e  f7feb8bb          B        |L2.136|
;;;1335       }
;;;1336   }
;;;1337   
                          ENDP

001f12  0000              DCW      0x0000
                  |L2.7956|
                          DCD      System
                  |L2.7960|
                          DCD      Sub_PowerBack
                  |L2.7964|
                          DCD      xHandleTask_MT2000
                  |L2.7968|
                          DCD      g_fuc_codToPC
                  |L2.7972|
                          DCD      g_fuc_cod
                  |L2.7976|
                          DCD      Run_DiagramBack
                  |L2.7980|
                          DCD      Run_Diagram
                  |L2.7984|
                          DCD      flash_3_once_flag
                  |L2.7988|
                          DCD      0x08033fff
                  |L2.7992|
                          DCD      0x08033800
                  |L2.7996|
                          DCD      0x080347ff
                  |L2.8000|
                          DCD      0x08034fff
                  |L2.8004|
                          DCD      0x080357ff
                  |L2.8008|
                          DCD      0x08035fff
                  |L2.8012|
                          DCD      0x080367ff
                  |L2.8016|
                          DCD      0x08036fff
                  |L2.8020|
                          DCD      0x080377ff
                  |L2.8024|
                          DCD      0x08037fff
                  |L2.8028|
                          DCD      0x080387ff
                  |L2.8032|
                          DCD      flash3_Save
                  |L2.8036|
                          DCD      Work_paraBack
                  |L2.8040|
                          DCD      PC_Cmd
                  |L2.8044|
                          DCD      Alarm_historyBack
                  |L2.8048|
                          DCD      Temperature_Humidity
                  |L2.8052|
                          DCD      Monitor
                  |L2.8056|
                          DCD      task_upper_inquire_counter

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  RxBuf_FromPC
                          %        257

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  20546173          DCB      " Task_upper",178,233,209,175,201,168,198,181,215,180,204
000004  6b5f7570
000008  706572b2
00000c  e9d1afc9
000010  a8c6b5d7
000014  b4cc    
000016  acc8cece          DCB      172,200,206,206,241,214,208," GT2000_Tx.Gt2000_freq1= %0"
00001a  f1d6d020
00001e  47543230
000022  30305f54
000026  782e4774
00002a  32303030
00002e  5f667265
000032  71313d20
000036  2530    
000038  32582025          DCB      "2X %02X %02X %02X \n",0
00003c  30325820
000040  25303258
000044  20253032
000048  58200a00
00004c  20546173          DCB      " Task_upper",178,233,209,175,201,168,198,181,215,180,204
000050  6b5f7570
000054  706572b2
000058  e9d1afc9
00005c  a8c6b5d7
000060  b4cc    
000062  acc8cece          DCB      172,200,206,206,241,214,208," Work_paraBack.Freq[1-4]= %"
000066  f1d6d020
00006a  576f726b
00006e  5f706172
000072  61426163
000076  6b2e4672
00007a  65715b31
00007e  2d345d3d
000082  2025    
000084  30325820          DCB      "02X %02X %02X %02X \n",0
000088  25303258
00008c  20253032
000090  58202530
000094  3258200a
000098  00      
000099  00                DCB      0
00009a  00                DCB      0
00009b  00                DCB      0
00009c  20b2e9d1          DCB      " ",178,233,209,175,181,189,183,162,201,228,215,180,204,172
0000a0  afb5bdb7
0000a4  a2c9e4d7
0000a8  b4ccac  
0000ab  576f726b          DCB      "Work_paraBack.Mode[0]=  %d \nWork_paraBack.Freq=  ",0
0000af  5f706172
0000b3  61426163
0000b7  6b2e4d6f
0000bb  64655b30
0000bf  5d3d2020
0000c3  2564200a
0000c7  576f726b
0000cb  5f706172
0000cf  61426163
0000d3  6b2e4672
0000d7  65713d20
0000db  2000    
0000dd  00                DCB      0
0000de  00                DCB      0
0000df  00                DCB      0
0000e0  205043c6          DCB      " PC",198,181,194,202,215,170,187,175,206,170,183,162,201
0000e4  b5c2cad7
0000e8  aabbafce
0000ec  aab7a2c9
0000f0  e4bbfac6          DCB      228,187,250,198,181,194,202,186,243,"GT2000_Tx.Gt2000_fr"
0000f4  b5c2caba
0000f8  f3475432
0000fc  3030305f
000100  54782e47
000104  74323030
000108  305f6672
00010c  6571313d          DCB      "eq1= %02x %02x freq2=%02x %02x freq3=%02x %02x \n",0
000110  20253032
000114  78202530
000118  32782066
00011c  72657132
000120  3d253032
000124  78202530
000128  32782066
00012c  72657133
000130  3d253032
000134  78202530
000138  3278200a
00013c  00      
00013d  00                DCB      0
00013e  00                DCB      0
00013f  00                DCB      0
000140  20d5fdd4          DCB      " ",213,253,212,218,183,162,201,228,163,172,206,222,207,236
000144  dab7a2c9
000148  e4a3acce
00014c  decfec  
00014f  d3a6a3ac          DCB      211,166,163,172,206,222,185,166,194,202,163,172,215,164,178
000153  cedeb9a6
000157  c2caa3ac
00015b  d7a4b2  
00015e  a8b1c8b1          DCB      168,177,200,177,168,190,175,163,172,185,253,193,247,177,168
000162  a8beafa3
000166  acb9fdc1
00016a  f7b1a8  
00016d  beafa1a3          DCB      190,175,161,163,190,249,183,181,187,216,183,162,201,228,202
000171  bef9b7b5
000175  bbd8b7a2
000179  c9e4ca  
00017c  a7b0dc20          DCB      167,176,220," ",0
000180  00      

                          AREA ||.data||, DATA, ALIGN=2

                  xHandleTask_Upper_Computer
                          DCD      0x00000000
                  task_upper_inquire_counter
000004  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\Task\\Task_Upper_Computer.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___21_Task_Upper_Computer_c_9618da1d____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___21_Task_Upper_Computer_c_9618da1d____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___21_Task_Upper_Computer_c_9618da1d____REVSH|
#line 128
|__asm___21_Task_Upper_Computer_c_9618da1d____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
